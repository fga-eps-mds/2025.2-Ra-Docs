{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#documentacao-do-projeto-aton-grupo-ra","title":"Documenta\u00e7\u00e3o do Projeto Aton - Grupo R\u00c1","text":"<p>Este \u00e9 o reposit\u00f3rio oficial do projeto Aton, desenvolvido pelo grupo R\u00c1, como parte do curso de Engenharia de Software da Universidade de Bras\u00edlia (UnB) na disciplina de M\u00e9todos de Desenvolvimento de Software. Aqui voc\u00ea encontrar\u00e1 todas as informa\u00e7\u00f5es relevantes sobre o projeto, incluindo sua vis\u00e3o geral, arquitetura, planejamento e muito mais.</p>"},{"location":"#o-que-e-o-aton","title":"O que \u00e9 o Aton?","text":"<p>O Aton \u00e9 um aplicativo m\u00f3vel desenvolvido para centralizar a divulga\u00e7\u00e3o de eventos esportivos na Universidade de Bras\u00edlia (UnB). Ele visa facilitar o acesso dos alunos \u00e0s informa\u00e7\u00f5es sobre eventos promovidos pelas atl\u00e9ticas e equipes amadoras, promovendo a integra\u00e7\u00e3o da comunidade universit\u00e1ria por meio do esporte e do lazer.</p>"},{"location":"#lean-inception-para-a-concepcao-de-produto-e-ideias","title":"Lean inception para a concep\u00e7\u00e3o de produto e ideias:","text":""},{"location":"#membros","title":"Membros","text":"<p>Gabriel Alves</p> <p>Rodrigo \u00c0tila</p> <p>Yan Rodrigues</p> <p>Gabriel Mota</p> <p>Matheus Pinheiro</p> <p>\u00c2ngelo Cordova</p> <p>Giovana Martins de Brito</p> <p>Guilherme Mendes</p> <p>Samuel Leite</p> <p>Pedro In\u00e1cio Santos</p>"},{"location":"CONTRIBUTING/","title":"Guia de Contribui\u00e7\u00e3o","text":""},{"location":"CONTRIBUTING/#guia-de-contribuicao-aton","title":"\ud83d\ude80 Guia de Contribui\u00e7\u00e3o - Aton","text":"<p>Ol\u00e1, dev! \ud83d\udc4b</p> <p>Ficamos muito felizes com seu interesse em contribuir com o projeto Aton. Este guia foi criado para que sua contribui\u00e7\u00e3o seja uma experi\u00eancia tranquila e produtiva, garantindo a organiza\u00e7\u00e3o e a qualidade do nosso c\u00f3digo.</p> <p>Seguir estas diretrizes nos ajuda a manter o projeto saud\u00e1vel e f\u00e1cil de manter.</p>"},{"location":"CONTRIBUTING/#antes-de-comecar","title":"\ud83d\udcd6 Antes de Come\u00e7ar","text":"<ul> <li>Tenha uma Issue: Todo o trabalho deve come\u00e7ar a partir de uma <code>Issue</code>. Antes de codificar, certifique-se de que existe uma issue descrevendo a <code>feature</code> ou o <code>bug</code> e que ela foi atribu\u00edda a voc\u00ea. Isso evita trabalho duplicado.</li> <li>Ambiente Configurado: Garanta que voc\u00ea j\u00e1 tem o projeto clonado e rodando localmente na sua m\u00e1quina.</li> </ul>"},{"location":"CONTRIBUTING/#passo-a-passo-da-contribuicao","title":"\ud83d\udcbb Passo a Passo da Contribui\u00e7\u00e3o","text":"<p>Aqui est\u00e1 o fluxo de trabalho que usamos, do in\u00edcio ao fim. Siga estes passos com aten\u00e7\u00e3o!</p>"},{"location":"CONTRIBUTING/#passo-1-sincronize-com-a-branch-develop","title":"Passo 1: Sincronize com a Branch <code>develop</code>","text":"<p>Antes de criar sua branch, garanta que voc\u00ea est\u00e1 com a vers\u00e3o mais atualizada da <code>develop</code>, que \u00e9 a nossa branch principal de desenvolvimento.</p> <pre><code># 1. V\u00e1 para a branch develop\ngit checkout develop\n\n# 2. Puxe as \u00faltimas atualiza\u00e7\u00f5es do reposit\u00f3rio remoto\ngit pull origin develop\n</code></pre>"},{"location":"CONTRIBUTING/#passo-2-crie-sua-branch-de-trabalho","title":"Passo 2: Crie sua Branch de Trabalho","text":"<p>Nunca trabalhe diretamente na <code>develop</code>. Crie uma nova branch a partir dela, seguindo nosso padr\u00e3o de nomenclatura.</p> <p>Padr\u00e3o de Nomenclatura: <code>tipo/numero-da-issue-descricao-curta</code></p> <ul> <li>tipo: O mesmo tipo do seu primeiro commit (<code>feat</code>, <code>fix</code>, <code>docs</code>, etc.).</li> <li>numero-da-issue: O n\u00famero da issue que voc\u00ea est\u00e1 resolvendo.</li> <li>descricao-curta: Duas ou tr\u00eas palavras que resumem a issue.</li> </ul> <p>Exemplos:</p> <ul> <li><code>feat/42-tela-de-login</code></li> <li><code>fix/55-bug-no-botao-sair</code></li> <li><code>docs/12-atualizar-readme</code></li> </ul> <p>Comando para criar sua branch:</p> <pre><code># Troque o nome abaixo pelo da sua branch\ngit checkout -b feat/42-tela-de-login\n</code></pre>"},{"location":"CONTRIBUTING/#passo-3-implemente-teste-e-commite","title":"Passo 3: Implemente, Teste e Commite","text":"<p>Agora \u00e9 a hora de codificar! \ud83d\udc68\u200d\ud83d\udcbb</p> <ul> <li>Implemente a Funcionalidade: Escreva o c\u00f3digo necess\u00e1rio para resolver a issue.</li> <li>Crie Testes Unit\u00e1rios: Toda nova funcionalidade ou corre\u00e7\u00e3o deve ser acompanhada de testes unit\u00e1rios que validem seu comportamento.</li> <li>Teste Localmente: Antes de commitar, rode a aplica\u00e7\u00e3o e os testes para garantir que tudo est\u00e1 funcionando como esperado e que voc\u00ea n\u00e3o quebrou nada.</li> </ul> <p>Quando estiver pronto para salvar seu progresso, use commits que sigam o nosso padr\u00e3o.</p> <pre><code># 1. Adicione os arquivos que voc\u00ea modificou\ngit add .\n\n# 2. Crie o commit seguindo o padr\u00e3o (veja a se\u00e7\u00e3o abaixo)\ngit commit -m \"feat(login): adicionar autentica\u00e7\u00e3o com e-mail e senha\n\nissue associada: #42\n\nCo-authored-by: Rodrigo &lt;rodrigo@exemplo.com&gt;\nCo-authored-by: Giovana &lt;giovana@exemplo.com&gt;\n\"\n</code></pre>"},{"location":"CONTRIBUTING/#passo-4-abra-um-pull-request-pr","title":"Passo 4: Abra um Pull Request (PR)","text":"<p>Quando sua implementa\u00e7\u00e3o estiver completa e testada, \u00e9 hora de envi\u00e1-la para o reposit\u00f3rio.</p> <pre><code># 1. Envie sua branch para o reposit\u00f3rio remoto\n# Troque \"feat/42-tela-de-login\" pelo nome da sua branch\ngit push origin feat/42-tela-de-login\n</code></pre> <ol> <li>Acesse o nosso reposit\u00f3rio no GitHub. Voc\u00ea ver\u00e1 um aviso amarelo com o nome da sua branch e um bot\u00e3o \"Compare &amp; pull request\". Clique nele.</li> <li>Preencha o PR:<ul> <li>O t\u00edtulo do PR j\u00e1 vir\u00e1 com o seu \u00faltimo commit, o que \u00e9 \u00f3timo!</li> <li>Na descri\u00e7\u00e3o, link a issue que voc\u00ea est\u00e1 resolvendo. Escreva <code>Closes #42</code> (troque <code>42</code> pelo n\u00famero da sua issue). Isso far\u00e1 com que o GitHub feche a issue automaticamente quando o PR for mergeado.</li> </ul> </li> <li>Clique em \"Create pull request\".</li> </ol>"},{"location":"CONTRIBUTING/#passo-5-aguarde-a-revisao-code-review","title":"Passo 5: Aguarde a Revis\u00e3o (Code Review)","text":"<ul> <li>CI/CD em A\u00e7\u00e3o: Assim que voc\u00ea abrir o PR, nosso sistema de Integra\u00e7\u00e3o Cont\u00ednua (CI) ir\u00e1 rodar os testes automaticamente. Seu PR precisa passar em todas as verifica\u00e7\u00f5es (ficar com o \"check\" verde \u2705).</li> <li>Revis\u00e3o: Um ou mais membros da equipe ir\u00e3o revisar seu c\u00f3digo. Eles podem solicitar altera\u00e7\u00f5es. Fique atento aos coment\u00e1rios e fa\u00e7a os ajustes necess\u00e1rios.</li> <li>Merge: Ap\u00f3s a aprova\u00e7\u00e3o e com todos os checks passando, sua branch ser\u00e1 mergeada na <code>develop</code> por um dos mantenedores do projeto.</li> </ul> <p>Parab\u00e9ns, sua contribui\u00e7\u00e3o foi conclu\u00edda! \ud83c\udf89</p>"},{"location":"CONTRIBUTING/#padrao-de-commits","title":"\u270d\ufe0f Padr\u00e3o de Commits","text":"<p>Usamos um padr\u00e3o para manter nosso hist\u00f3rico de commits limpo e leg\u00edvel. A estrutura \u00e9:</p> <pre><code>&lt;tipo&gt;(&lt;escopo&gt;): &lt;assunto&gt;\n\n\nissue associada: #&lt;numero-da-issue&gt;\n\nCo-authored-by: Nome do Primeiro Coautor &lt;primeiro@exemplo.com&gt;\nCo-authored-by: Nome do Segundo Coautor &lt;segundo@exemplo.com&gt;\n</code></pre> <p>Use sempre aos Co-authors, eles ajudam a identificar quem fez o commit. Atente-se \u00e0 nomenclatura: <code>Co-authored-by: Nome do Coautor &lt;email@exemplo.com&gt;</code> sem isso n\u00e3o funciona.</p> <ul> <li> <p>Refer\u00eancia completa: Padr\u00f5es de Commits do iuricode</p> </li> <li> <p>Co-authors: Github docs</p> </li> </ul>"},{"location":"CONTRIBUTING/#tipos-mais-comuns","title":"Tipos mais comuns:","text":"<ul> <li><code>feat</code>: Uma nova funcionalidade (feature).</li> <li><code>fix</code>: Uma corre\u00e7\u00e3o de bug.</li> <li><code>docs</code>: Altera\u00e7\u00f5es na documenta\u00e7\u00e3o.</li> <li><code>style</code>: Formata\u00e7\u00e3o, ponto e v\u00edrgula, etc. (sem altera\u00e7\u00e3o de l\u00f3gica).</li> <li><code>refactor</code>: Refatora\u00e7\u00e3o de c\u00f3digo que n\u00e3o corrige um bug nem adiciona uma feature.</li> <li><code>test</code>: Adi\u00e7\u00e3o ou corre\u00e7\u00e3o de testes.</li> <li><code>chore</code>: Atualiza\u00e7\u00e3o de tarefas de build, pacotes, etc.</li> </ul>"},{"location":"CONTRIBUTING/#exemplos-de-bons-commits","title":"Exemplos de bons commits:","text":"<pre><code>feat(auth): implementar fluxo de login com e-mail e senha\n\nfix(feed): corrigir crash ao carregar evento sem imagem\n\ndocs(contributing): adicionar guia de contribui\u00e7\u00e3o\n\nrefactor(user): mover l\u00f3gica de valida\u00e7\u00e3o para um servi\u00e7o separado\n\ntest(auth): adicionar testes unit\u00e1rios para o servi\u00e7o de autentica\u00e7\u00e3o\n</code></pre>"},{"location":"CONTRIBUTING/#resolvendo-conflitos-em-branches","title":"\ud83d\udd00 Resolvendo Conflitos em Branches","text":"<p>Durante o desenvolvimento, \u00e9 comum que ocorram diverg\u00eancias entre o branch local e o remoto. Para manter a consist\u00eancia do hist\u00f3rico e evitar problemas, siga as recomenda\u00e7\u00f5es abaixo.</p>"},{"location":"CONTRIBUTING/#1-antes-de-fazer-git-pull","title":"1. Antes de fazer <code>git pull</code>","text":"<p>Sempre confira o hist\u00f3rico para entender a diverg\u00eancia:</p> <pre><code>git fetch origin\ngit log --oneline --graph --decorate --all\n</code></pre>"},{"location":"CONTRIBUTING/#2-estrategias-permitidas-no-projeto","title":"2. Estrat\u00e9gias permitidas no projeto","text":"<ul> <li> <p>Rebase (<code>git pull --rebase</code>)</p> </li> <li> <p>Usar em branches de feature.</p> </li> <li>Mant\u00e9m o hist\u00f3rico linear e facilita a leitura.</li> <li> <p>Exemplo:</p> <pre><code>git pull --rebase origin &lt;nome-do-branch&gt;\n</code></pre> </li> <li> <p>Merge (<code>git pull --no-rebase</code>)</p> </li> <li> <p>Usar em branches principais (<code>main</code> ou <code>dev</code>).</p> </li> <li>Preserva o hist\u00f3rico completo sem reescrever commits j\u00e1 compartilhados.</li> <li> <p>Exemplo:</p> <pre><code>git pull origin &lt;nome-do-branch&gt;\n</code></pre> </li> <li> <p>Fast-forward only (<code>git pull --ff-only</code>)</p> </li> <li> <p>Usar como medida de seguran\u00e7a em branches protegidos.</p> </li> <li>N\u00e3o cria merge commits autom\u00e1ticos.</li> <li> <p>Exemplo:</p> <pre><code>git pull --ff-only origin &lt;nome-do-branch&gt;\n</code></pre> </li> </ul>"},{"location":"CONTRIBUTING/#3-resolvendo-conflitos","title":"3. Resolvendo conflitos","text":"<p>Se durante o <code>pull</code> houver conflito:</p> <ol> <li>O Git marcar\u00e1 os arquivos em conflito com <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>.</li> <li>Edite manualmente os arquivos para escolher a vers\u00e3o correta.</li> <li>Ap\u00f3s resolver, marque o conflito como resolvido:</li> </ol> <pre><code>git add &lt;arquivo-resolvido&gt;\n</code></pre> <ol> <li> <p>Continue o processo:</p> </li> <li> <p>Se estiver em rebase:</p> <pre><code>git rebase --continue\n</code></pre> </li> <li> <p>Se estiver em merge:</p> </li> </ol> <pre><code> git commit\n</code></pre>"},{"location":"CONTRIBUTING/#4-boas-praticas","title":"4. Boas pr\u00e1ticas","text":"<ul> <li>Nunca fa\u00e7a <code>rebase</code> em commits j\u00e1 publicados em <code>main</code> ou <code>dev</code>.</li> <li>Sempre comunique ao time se precisar resolver conflitos grandes.</li> <li>Evite commits grandes e misturados \u2014 quanto menores, mais f\u00e1ceis de resolver.</li> <li>Documente o que foi resolvido no commit para facilitar auditoria no futuro.</li> </ul>"},{"location":"CONTRIBUTING/#duvidas","title":"\ud83d\ude4b\u200d\u2642\ufe0f D\u00favidas?","text":"<p>Qualquer d\u00favida, n\u00e3o hesite em perguntar no nosso canal de comunica\u00e7\u00e3o!</p> <p>Obrigado por construir o Aton com a gente!</p>"},{"location":"API/auth/","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o","text":""},{"location":"API/auth/#autenticacao-e-autorizacao","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o","text":"<p>Esta sess\u00e3o aborda os conceitos de autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o da API, incluindo m\u00e9todos de autentica\u00e7\u00e3o, gerenciamento de tokens e pr\u00e1ticas recomendadas para proteger recursos.</p>"},{"location":"API/group/","title":"Endpoints de Grupo","text":""},{"location":"API/group/#endpoints-de-grupo-api","title":"Endpoints de Grupo API","text":"<p>Esta se\u00e7\u00e3o documenta os endpoints relacionados \u00e0 funcionalidade de grupos na API do Aton.</p>"},{"location":"API/introducao/","title":"Introdu\u00e7\u00e3o \u00e0 API","text":""},{"location":"API/match/","title":"Endpoints de Partidas","text":""},{"location":"API/match/#endpoints-de-partidas-api","title":"Endpoints de partidas API","text":"<p>Este documento descreve os endpoints dispon\u00edveis na API de Partidas do Aton, detalhando suas funcionalidades, m\u00e9todos HTTP, par\u00e2metros e exemplos de uso.</p>"},{"location":"API/post/","title":"Endpoint de Posts/eventos","text":""},{"location":"API/post/#endpoint-de-postseventos-api","title":"Endpoint de Posts/eventos API","text":"<p>Este documento descreve os endpoints dispon\u00edveis para gerenciar posts/eventos na API.</p>"},{"location":"API/ref/","title":"Refer\u00eancias","text":""},{"location":"API/user/","title":"Endpoints de Usu\u00e1rio","text":""},{"location":"API/user/#endpoints-de-usuario-api","title":"Endpoints de Usu\u00e1rio API","text":"<p>Este documento descreve os endpoints dispon\u00edveis para gerenciar usu\u00e1rios na API do Aton, detalhando suas funcionalidades, m\u00e9todos HTTP, par\u00e2metros e exemplos de uso.</p>"},{"location":"API/user/#modulo-autenticacao-login","title":"M\u00f3dulo: Autentica\u00e7\u00e3o (Login)","text":"<p>Este m\u00f3dulo gerencia a autentica\u00e7\u00e3o e o login de usu\u00e1rios.</p>"},{"location":"API/user/#1-login-de-usuario","title":"1. Login de Usu\u00e1rio","text":"<p>Autentica um usu\u00e1rio com e-mail e senha. Em caso de sucesso, retorna um token JWT para ser usado em rotas protegidas, junto com os dados do usu\u00e1rio e quaisquer avisos (como a necessidade de definir um perfil).</p> <p><code>POST localhost:4000/login</code></p>"},{"location":"API/user/#request-body","title":"Request Body","text":"<p>O corpo da requisi\u00e7\u00e3o deve ser um JSON contendo o e-mail e a senha do usu\u00e1rio.</p> <p>Exemplo:</p> <pre><code>{\n  \"email\": \"usuario@exemplo.com\",\n  \"password\": \"minhasenha123\"\n}\n</code></pre> <p>Campos:</p> Campo Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o <code>email</code> string Sim O e-mail de cadastro do usu\u00e1rio. Deve ter um formato v\u00e1lido. <code>password</code> string Sim A senha do usu\u00e1rio. (M\u00ednimo 1 caractere)."},{"location":"API/user/#success-response-200-ok","title":"Success Response (<code>200 OK</code>)","text":"<p>Retorna um objeto com tr\u00eas chaves:</p> <ol> <li><code>token</code>: O token de acesso JWT.</li> <li><code>user</code>: Um objeto com as informa\u00e7\u00f5es b\u00e1sicas do usu\u00e1rio.</li> <li><code>warns</code>: Um array de strings contendo avisos. Este array incluir\u00e1 <code>\"Configura\u00e7\u00e3o de perfil pendente.\"</code> se o <code>profileType</code> do usu\u00e1rio for <code>null</code>, sinalizando ao frontend que o usu\u00e1rio deve ser redirecionado para a tela de escolha de perfil.</li> </ol> <p>Exemplo (Usu\u00e1rio com perfil pendente):</p> <pre><code>{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNseGFiY2RlMTIzIiwiZXhwIjoxNjk4NDI4MjIyfQ.exemploToken\",\n  \"user\": {\n    \"id\": \"clxabcde123\",\n    \"name\": \"Nome do Usu\u00e1rio\",\n    \"email\": \"usuario@exemplo.com\"\n  },\n  \"warns\": [\n    \"Configura\u00e7\u00e3o de perfil pendente.\"\n  ]\n}\n</code></pre> <p>Exemplo (Usu\u00e1rio com perfil j\u00e1 definido):</p> <pre><code>{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNseGFiY2RlMTIzIiwiZXhwIjoxNjk4NDI4MjIyfQ.exemploToken\",\n  \"user\": {\n    \"id\": \"clxabcde123\",\n    \"name\": \"Nome do Usu\u00e1rio\",\n    \"email\": \"usuario@exemplo.com\"\n  },\n  \"warns\": []\n}\n</code></pre>"},{"location":"API/user/#error-responses","title":"Error Responses","text":"<p>O endpoint trata os erros e retorna mensagens claras.</p> C\u00f3digo Status Motivo Exemplo de Resposta (JSON) <code>400</code> Bad Request Erro de valida\u00e7\u00e3o do Zod (ex: e-mail inv\u00e1lido, senha n\u00e3o enviada). <code>{\"error\": \"Erro de valida\u00e7\u00e3o\", \"issues\": { ... }}</code> <code>401</code> Unauthorized O e-mail fornecido n\u00e3o foi encontrado no banco de dados. <code>{\"error\": \"E-mail n\u00e3o encontrado.\"}</code> <code>401</code> Unauthorized A senha fornecida n\u00e3o corresponde ao hash no banco de dados. <code>{\"error\": \"E-mail ou senha incorretos.\"}</code> <code>500</code> Internal Server Erro raro (ex: o usu\u00e1rio existe, mas n\u00e3o possui <code>passwordHash</code>). <code>{\"error\": \"Conta de usu\u00e1rio inv\u00e1lida.\"}</code>"},{"location":"API/user/#modulo-usuarios","title":"M\u00f3dulo: Usu\u00e1rios","text":"<p>Este m\u00f3dulo gerencia o CRUD de usu\u00e1rios.</p>"},{"location":"API/user/#1-cadastro-de-novo-usuario","title":"1. Cadastro de Novo Usu\u00e1rio","text":"<p>Registra um novo usu\u00e1rio na plataforma.</p> <p><code>POST localhost:4000/users</code></p> <p>Nota Importante: Conforme a regra de neg\u00f3cio do <code>user.service.ts</code>, o <code>profileType</code> n\u00e3o \u00e9 enviado nesta rota. Ele \u00e9 automaticamente definido como <code>NULL</code> no banco de dados. O usu\u00e1rio ser\u00e1 solicitado a escolher um perfil no primeiro login (o endpoint de Login retornar\u00e1 um \"aviso\" sobre isso).</p>"},{"location":"API/user/#request-body_1","title":"Request Body","text":"<p>O corpo da requisi\u00e7\u00e3o \u00e9 validado pelo <code>createUserSchema</code> e deve conter os seguintes campos:</p> <p>Exemplo:</p> <pre><code>{\n  \"name\": \"Nome\",\n  \"userName\": \"meu_username\",\n  \"email\": \"usuario@exemplo.com\",\n  \"password\": \"senhaSegura123\"\n}\n</code></pre> <p>Campos:</p> Campo Tipo Obrigat\u00f3rio Descri\u00e7\u00e3o (Regras do <code>user.validation.ts</code>) <code>name</code> string Sim Nome do usu\u00e1rio (m\u00ednimo 2 caracteres). <code>userName</code> string Sim Nome de usu\u00e1rio \u00fanico (m\u00ednimo 1 caractere). <code>email</code> string Sim E-mail \u00fanico do usu\u00e1rio (deve ter formato v\u00e1lido). <code>password</code> string Sim Senha do usu\u00e1rio (m\u00ednimo 6 caracteres)."},{"location":"API/user/#success-response-201-created","title":"Success Response (<code>201 Created</code>)","text":"<p>Em caso de sucesso, a API retorna o objeto completo do novo usu\u00e1rio (sem a senha). Note que o <code>profileType</code> \u00e9 <code>null</code>, conforme a regra de neg\u00f3cio.</p> <p>Exemplo:</p> <pre><code>{\n  \"id\": \"clxzyxw456\",\n  \"name\": \"Nome Sobrenome\",\n  \"email\": \"usuario@exemplo.com\",\n  \"userName\": \"meu_username\",\n  \"profileType\": null,\n  \"createdAt\": \"2025-10-27T17:30:00.000Z\",\n  \"updatedAt\": \"2025-10-27T17:30:00.000Z\"\n}\n</code></pre>"},{"location":"API/user/#error-responses_1","title":"Error Responses","text":"C\u00f3digo Status Motivo Exemplo de Resposta (JSON) <code>400</code> Bad Request Erro de Valida\u00e7\u00e3o (Zod): Os dados enviados n\u00e3o seguem as regras (ex: senha curta, e-mail inv\u00e1lido, campos faltando). <code>{\"error\": \"Erro de valida\u00e7\u00e3o\", \"issues\": { ... }}</code> <code>400</code> Bad Request Conflito (Service): O <code>email</code> enviado j\u00e1 est\u00e1 cadastrado no banco de dados. <code>{\"error\": \"Email j\u00e1 cadastrado\"}</code> <code>400</code> Bad Request Conflito (Service): O <code>userName</code> (n\u00e3o verificado no seu service atual, mas pode ser adicionado) j\u00e1 est\u00e1 cadastrado. <code>{\"error\": \"Username j\u00e1 cadastrado\"}</code>"},{"location":"arquitetura/abstracao_implemantacao/","title":"Abstra\u00e7\u00e3o e Implementa\u00e7\u00e3o","text":""},{"location":"arquitetura/abstracao_implemantacao/#24-abstracao-e-implementacao","title":"2.4 Abstra\u00e7\u00e3o e Implementa\u00e7\u00e3o","text":""},{"location":"arquitetura/abstracao_implemantacao/#241-visao-logica","title":"2.4.1 Vis\u00e3o L\u00f3gica","text":"<p>Seguindo a estrutura de Cliente-Servidor em constru\u00e7\u00e3o de software MonoRepo, temos a seguinte vis\u00e3o l\u00f3gida do software:</p> <p>Estrutura Macro</p> <p>O projeto \u00e9 estuturado em monorepo, com gerenciamento feito pelo <code>PNPM</code> e possui otimiza\u00e7\u00e3o pelo Turborepo, com diferencia\u00e7\u00e3o entra FrontEnd e BackEnd.</p> <p>A ra\u00edz do projeto possui o arquivo pnpm-workspace.yaml, que define:</p> <ul> <li><code>apps/*</code> contendo as aplica\u00e7\u00f5es execut\u00e1veis do aplicativo m\u00f3vel e API</li> <li><code>packages/*</code> contendo as configura\u00e7\u00f5es compartilhadas como Linters, Configs de testes e outros, usados pela aplica\u00e7\u00e3o em apps.</li> </ul> <p>M\u00f3dulos Principais</p> <p>A pasta <code>apps/</code> possui os componentes principais do sistema:</p>"},{"location":"arquitetura/abstracao_implemantacao/#a-o-modulo-appsapi","title":"a) O m\u00f3dulo <code>apps/api</code>","text":"<p>\u00c9 o m\u00f3dulo de API do backend do Projeto, constitu\u00eddo em Node.js com TypeScript</p> <ul> <li>O Framework utiliza Express.JS e ExpoRouter para roteamento e gerenciamento de requisi\u00e7\u00f5es.</li> <li>O Banco de dados utiliza o Prisma <code>(Prisma/schema.prisma)</code> para se comunicar com o banco de dados Postgres.SQL, rodando a partir de um container do DOCKER.</li> <li>A estrutura de m\u00f3dulos: A API \u00e9 organizada por features como visto em <code>src/modules/user</code> e <code>src/modules/auth</code> e cada m\u00f3dulo cont\u00e9m: <code>routes.ts</code> para definir endpoints da API, <code>controllers.ts</code> para orquestrar a l\u00f3gica de requisi\u00e7\u00e3o, <code>services.ts</code> contendo a l\u00f3gica de neg\u00f3cios. <code>repository.ts</code> que abstrai o acesso direto ao banco de dados do Prisma.</li> <li>Os testes de API s\u00e3o configurados com o JEST e est\u00e1o na pasta <code>src/__tests__</code>, com foco em testes de integra\u00e7\u00e3o e testes unit\u00e1rios.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#b-modulos-frontend-appsmobile","title":"b) M\u00f3dulos FrontEnd <code>apps/mobile</code>","text":"<p>\u00c9 o aplicativo m\u00f3vel principal, desenvolvido com REACT NATIVE e EXPO.</p> <ul> <li>Roteamento: \u00c9 feito atrav\u00e9s do ExpoRouter, com uma abordagem file based routing em que a estrutura de diret\u00f3rios define a rota de navega\u00e7\u00f5a do app.</li> <li><code>(Auth)</code>: Define a tela de autentica\u00e7\u00e3o como: <code>login.tsc</code> e <code>cadastro.tsx</code>.</li> <li><code>(Dashboard)</code>: Define a \u00e1rea logada do aplicativo, e possui p\u00e1ginas como (<code>Home.tsx</code> e <code>Teams.tsx</code>).</li> <li>Componentiza\u00e7\u00e3o: O sistema est\u00e1 organizado com uma pasta dedicada a componentes reutiliz\u00e1veis em (<code>components/</code>).</li> <li>Estiliza\u00e7\u00e3o e temas: S\u00e3o definidos por designs (<code>constants/Colors.ts</code> e <code>constants/Fonts.ts</code> e <code>constants/Theme.ts</code>).</li> <li>Os Testes: s\u00e3o encontrados na pasta (<code>__tests__/</code>) e utilizam o JEST (com o React Native Testing Library) para testar componentes e p\u00e1ginas (<code>components/</code> e <code>paginas/</code>)</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#c-modulos-compartilhados-packages","title":"C) M\u00f3dulos Compartilhados (packages)","text":"<p>O diret\u00f3rio packages \u00e9 fundamental para a estrat\u00e9gia do monorepo, garantindo que todas as apps sigam os mesmos padr\u00f5es de qualidade de c\u00f3digo:</p> <ul> <li> <p><code>packages/eslint-config</code>: Configura\u00e7\u00e3o base do ESLint, compartilhada entre api e mobile.</p> </li> <li> <p><code>packages/jest-config</code>: Presets de configura\u00e7\u00e3o do Jest.</p> </li> <li> <p><code>packages/prettier-config</code>: Regras de formata\u00e7\u00e3o de c\u00f3digo (Prettier).</p> </li> <li> <p><code>packages/typescript-config</code>: Arquivos tsconfig.json base, garantindo consist\u00eancia nas configura\u00e7\u00f5es do TypeScript.</p> </li> </ul> <p>Diagrama UML:</p> <p></p> <p>Figura 2.4.1 - Diagrama de pacotes UML</p> <p>Fonte: Samuel Leite</p> <p>O diagrama de classes em alto n\u00edvel representa a estrutura l\u00f3gica do backend, destacando a separa\u00e7\u00e3o entre camada de l\u00f3gica de neg\u00f3cio e camada de persist\u00eancia.</p> <p>Na parte superior do fluxo est\u00e3o as classes App e Server, respons\u00e1veis pela configura\u00e7\u00e3o e inicializa\u00e7\u00e3o da aplica\u00e7\u00e3o, incluindo o registro das rotas e middlewares globais. As rotas direcionam as requisi\u00e7\u00f5es HTTP para os Controllers, que s\u00e3o os pontos de entrada da l\u00f3gica de neg\u00f3cio.</p> <p>A classe Controller representa a camada de controle, respons\u00e1vel por receber as requisi\u00e7\u00f5es, acionar as valida\u00e7\u00f5es (via middlewares e schemas Zod) e encaminhar as opera\u00e7\u00f5es \u00e0 camada de servi\u00e7o. A Service implementa a l\u00f3gica de neg\u00f3cio, verificando regras como unicidade de email, autentica\u00e7\u00e3o e consist\u00eancia dos dados. Ela n\u00e3o acessa o banco diretamente, para isso utiliza a Repository.</p> <p>A Repository representa a camada de persist\u00eancia, respons\u00e1vel por consultar, criar, atualizar e excluir dados no banco atrav\u00e9s do PrismaClient, que \u00e9 o ORM usado para interagir com o banco de dados relacional. Assim, o reposit\u00f3rio isola o acesso ao banco, permitindo que a l\u00f3gica de neg\u00f3cio permane\u00e7a independente da tecnologia de persist\u00eancia.</p> <p>As classes Validation e Middlewares aparecem como suporte transversal, garantindo a valida\u00e7\u00e3o dos dados, autentica\u00e7\u00e3o e tratamento padronizado de erros. A classe ApiError centraliza a forma como exce\u00e7\u00f5es s\u00e3o propagadas e tratadas, mantendo consist\u00eancia nas respostas de erro.</p> <p>Em resumo, o diagrama mostra uma arquitetura em camadas bem definidas:</p> <ul> <li> <p>Controller: interface entre a API e a l\u00f3gica de neg\u00f3cio.</p> </li> <li> <p>Service: regras e opera\u00e7\u00f5es do dom\u00ednio.</p> </li> <li> <p>Repository: acesso e manipula\u00e7\u00e3o de dados persistentes.</p> </li> <li> <p>PrismaClient: integra\u00e7\u00e3o direta com o banco, cliente ORM respons\u00e1vel pela execu\u00e7\u00e3o das queries no Postgres</p> </li> <li> <p>Middlewares e ApiError padronizam valida\u00e7\u00e3o e tratamento de erros.</p> </li> </ul> <p>Essas camadas interagem de forma sequencial: Controller \u2192 Service \u2192 Repository \u2192 Banco de Dados, com middlewares e valida\u00e7\u00f5es atuando de forma transversal. Essa estrutura favorece organiza\u00e7\u00e3o, testabilidade e manuten\u00e7\u00e3o do sistema.</p> <p></p> <p>Figura 2.4.2 - Diagrama de classes - User</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>UserController: exp\u00f5e endpoints REST (createUser, getUserById, updateUser, deleteUser). Recebe requisi\u00e7\u00f5es, aplica valida\u00e7\u00f5es com o ValidateRequestMiddleware e delega a l\u00f3gica ao UserService. Em caso de erro, lan\u00e7a ApiError.</p> </li> <li> <p>UserService: cont\u00e9m as regras de neg\u00f3cio (ex.: impedir e-mail duplicado, validar permiss\u00f5es de atualiza\u00e7\u00e3o/exclus\u00e3o). Utiliza o UserRepository para acessar o banco e lan\u00e7a ApiError em casos de viola\u00e7\u00e3o de regras.</p> </li> <li> <p>UserRepository: respons\u00e1vel pela persist\u00eancia via PrismaClient. Executa opera\u00e7\u00f5es CRUD (create, findById, update, delete) e consultas espec\u00edficas. Isola o acesso ao banco, mantendo o service independente da tecnologia usada.</p> </li> <li> <p>User (modelo de dom\u00ednio): representa os dados do usu\u00e1rio: id, name, userName, email, createdAt, updatedAt. Pode incluir campos adicionais como profileType.</p> </li> </ul> <p></p> <p>Figura 2.4.3 - Diagrama de classes - Group</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>GroupController: entrada das requisi\u00e7\u00f5es REST para grupos, aplica valida\u00e7\u00e3o (middleware) e delega para o service.</p> </li> <li> <p>GroupService: cont\u00e9m l\u00f3gica de dom\u00ednio (ex.: garantir unicidade de nome, checar permiss\u00f5es do ownerId, regras de groupType), n\u00e3o acessa o DB diretamente.</p> </li> <li> <p>GroupRepository: camada de persist\u00eancia, encapsula consultas e comandos ao Prisma (prisma.group.*) e retorna objetos Group (tipados conforme o MER do projeto).</p> </li> </ul> <p></p> <p>Figura 2.4.4 - Diagrama de classes - Post</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>PostController: \u00e9 o ponto de entrada das requisi\u00e7\u00f5es HTTP, valida o request (via middleware Zod), extrai contexto de autentica\u00e7\u00e3o e delega ao PostService. N\u00e3o cont\u00e9m l\u00f3gica de neg\u00f3cio al\u00e9m do roteamento e prepara\u00e7\u00e3o de respostas.</p> </li> <li> <p>PostService: centraliza as regras de neg\u00f3cio do dom\u00ednio Post:</p> </li> <li> <p>valida permiss\u00f5es (por exemplo, s\u00f3 admins do groupId podem publicar eventos),</p> </li> <li> <p>garante regras espec\u00edficas de postType (se <code>EVENTO</code>, exige eventDate e possivelmente location),</p> </li> <li> <p>orquestra a\u00e7\u00f5es compostas (criar post + notificar membros, atualizar caches, etc.),</p> </li> <li> <p>lan\u00e7a ApiError para erros de neg\u00f3cio (404, 403, 400).</p> </li> <li> <p>PostRepository: abstrai o acesso ao banco, traduz chamadas da camada de servi\u00e7o em opera\u00e7\u00f5es do ORM (<code>prisma.post.create/findUnique/findMany/update/delete</code>) e faz joins/queries relacionadas (ex.: buscar comments, contar likes, listar posts de um group). Aqui tamb\u00e9m fica a l\u00f3gica de persist\u00eancia de relacionamentos N:M (postLikes) e opera\u00e7\u00f5es que afetam m\u00faltiplas tabelas (recomend\u00e1vel usar transa\u00e7\u00f5es do Prisma nesses casos).</p> </li> </ul> <p></p> <p>Figura 2.4.5 - Diagrama de classes - Comment</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>CommentController: recebe as requisi\u00e7\u00f5es HTTP relacionadas a coment\u00e1rios (criar, listar por post, obter, atualizar, excluir). Aplica valida\u00e7\u00f5es via middleware (Zod) e extrai contexto de autentica\u00e7\u00e3o antes de delegar \u00e0 camada de servi\u00e7o.</p> </li> <li> <p>CommentServic: cont\u00e9m a l\u00f3gica de neg\u00f3cio dos coment\u00e1rios, valida\u00e7\u00f5es espec\u00edficas (ex.: post existe, usu\u00e1rio n\u00e3o est\u00e1 banido do grupo), autoriza\u00e7\u00e3o (s\u00f3 autor ou moderador pode editar/excluir), regras de formata\u00e7\u00e3o/normaliza\u00e7\u00e3o (ex.: sanitiza\u00e7\u00e3o do content) e orquestra chamadas a reposit\u00f3rios e poss\u00edveis side-effects (notifica\u00e7\u00f5es, incrementos de contadores). Em caso de viola\u00e7\u00e3o de regra, lan\u00e7a ApiError. Essa separa\u00e7\u00e3o mant\u00e9m regras de dom\u00ednio fora do controller. (baseado na vis\u00e3o l\u00f3gica e MER do projeto).</p> </li> <li> <p>CommentRepository: encapsula a persist\u00eancia com Prisma, mapeia DTOs para <code>prisma.comment.create/findUnique/findMany/update/delete</code>. Tamb\u00e9m resolve associa\u00e7\u00f5es (trazer autor, ou contar coment\u00e1rios do post) e \u00e9 o local apropriado para usar transa\u00e7\u00f5es quando opera\u00e7\u00f5es afetam m\u00faltiplas tabelas (ex.: criar coment\u00e1rio + atualizar contador de coment\u00e1rios no post). O modelo entidade-relacionamento define a rela\u00e7\u00e3o 1:N entre Post e Comment e 1:N entre User e Comment, que o reposit\u00f3rio materializa nas queries.</p> </li> </ul> <p></p> <p>Figura 2.4.6 - Diagrama de classes - Match</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>MatchController: ponto de entrada HTTP para opera\u00e7\u00f5es relacionadas a partidas (criar, listar, atualizar, excluir, inscrever usu\u00e1rio). As rotas aplicam valida\u00e7\u00e3o (middleware Zod) e autentica\u00e7\u00e3o, e s\u00f3 orquestram chamadas ao servi\u00e7o.</p> </li> <li> <p>MatchService: cont\u00e9m a l\u00f3gica de neg\u00f3cio da entidade Match:</p> </li> <li> <p>valida regras do dom\u00ednio (por exemplo: limites de participantes, regras de hor\u00e1rio, somente organizador pode finalizar/editar placar),</p> </li> <li> <p>verifica permiss\u00f5es (quem pode criar/editar/excluir),</p> </li> <li> <p>orquestra a\u00e7\u00f5es compostas (criar partida + criar 2 Team como entidades fracas, notificar inscritos),</p> </li> <li> <p>usa transa\u00e7\u00f5es quando necess\u00e1rio (criar Match e Team em uma opera\u00e7\u00e3o at\u00f4mica),</p> </li> <li> <p>MatchRepository: abstrai acesso ao banco via PrismaClient (delegate match, team, tabela de participantes N:M). Implementa queries: findById, findMany (com joins para times/participantes), addParticipant/removeParticipant (N:M), update e delete. \u00c9 aqui que se usa prisma.$transaction(...) quando m\u00faltiplas tabelas precisam ser alteradas de forma at\u00f4mica (ex.: adicionar participante e incrementar contadores).</p> </li> <li> <p>Domain Model: Match guarda metadados da partida (times referenciais, data, local, placar, criador). Team \u00e9 uma entidade fraca ligada a Match que relaciona userId a um time (home/away) e modela a composi\u00e7\u00e3o 1:2 descrita no MER. Usu\u00e1rios podem se inscrever em Matches (N:M), essa inscri\u00e7\u00e3o \u00e9 representada por uma tabela de liga\u00e7\u00e3o (e gerenciada pelo reposit\u00f3rio).</p> </li> </ul> <p></p> <p>Figura 2.4.7 - Diagrama de classes - Teams</p> <p>Fonte: Gabriel Mota</p> <p>A entidade Team \u00e9 uma entidade fraca ligada a uma Match (cada Match tem dois Teams: home e away). Um Team relaciona usu\u00e1rios (membros) \u00e0quela equipe, isso pode ser modelado como array de userId ou, preferivelmente, por uma tabela N:M team_members.</p> <ul> <li> <p>TeamController: Expondo endpoints REST (criar time, adicionar/remover membro, listar times de uma partida, atualizar, excluir). Recebe requests validados por middleware (Zod) e contexto de autentica\u00e7\u00e3o; delega a l\u00f3gica ao service.</p> </li> <li> <p>TeamService: Cont\u00e9m regras de neg\u00f3cio como, quem pode criar/alterar times (ex.: s\u00f3 o organizador da Match), limites de membros por time, verifica\u00e7\u00e3o de conflito (usu\u00e1rio n\u00e3o pode estar em dois times da mesma Match), e decis\u00e3o de usar transa\u00e7\u00e3o quando uma opera\u00e7\u00e3o altera m\u00faltiplas tabelas (por exemplo, ao adicionar membro: inserir em team_members + atualizar contador em team ou match). Em viola\u00e7\u00f5es de regras lan\u00e7a ApiError.</p> </li> <li> <p>TeamRepository: Faz o mapeamento para o banco (Prisma): prisma.team.create, prisma.team.update, prisma.teamMembers.create / delete, prisma.team.findMany com where: { matchId } e includes para membros. Opera\u00e7\u00f5es compostas que alteram team e a tabela de membros devem ser feitas via prisma.$transaction(...) para garantir atomicidade.</p> </li> <li> <p>Modelo de dados: Team armazena metadados (role, refer\u00eancia a matchId) enquanto a associa\u00e7\u00e3o team_members materializa os membros (teamId, userId). Essa separa\u00e7\u00e3o facilita consultas (listar membros, checar inscri\u00e7\u00f5es) e mant\u00e9m normaliza\u00e7\u00e3o.</p> </li> </ul> <p></p> <p>Figura 2.4.8 - Diagrama de classes - Report</p> <p>Fonte: Gabriel Mota</p> <ul> <li> <p>ReportController: exp\u00f5e endpoints REST (criar, listar, obter, atualizar status, excluir). Aplica valida\u00e7\u00e3o (Zod) e autentica\u00e7\u00e3o via middlewares, e limita-se a orquestrar chamadas aos servi\u00e7os.</p> </li> <li> <p>ReportService: concentra regras de neg\u00f3cio, por exemplo: garantir que targetPostId ou targetCommentId seja informado (mas n\u00e3o ambos), validar que o alvo existe, impedir den\u00fancias duplicadas do mesmo usu\u00e1rio sobre o mesmo alvo, definir status inicial (OPEN) e decidir side-effects (notificar moderadores). Em viola\u00e7\u00f5es de regras lan\u00e7a ApiError.</p> </li> <li> <p>ReportRepository: encapsula a persist\u00eancia com Prisma (prisma.report.create/findUnique/findMany/update/delete) e traz queries espec\u00edficas (relat\u00f3rios por alvo, contagem de den\u00fancias por post/comment). Opera\u00e7\u00f5es que afetam m\u00faltiplas tabelas (ex.: criar report + marcar post como under_review) devem usar transa\u00e7\u00e3o (prisma.$transaction) aqui.</p> </li> <li> <p>Integra\u00e7\u00e3o com Post/Comment/User: um Report referencia um Post ou um Comment (1:N do alvo para reports) e sempre referencia o reporter (User). O reposit\u00f3rio resolve essas associa\u00e7\u00f5es ao devolver o objeto Report com includes quando solicitado (por exemplo, include do reporter e do target para a interface administrativa).</p> </li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#242-visao-de-dados-mer","title":"2.4.2 Vis\u00e3o de Dados (MER)","text":"<p>O Modelo Entidade-Relacionamento (MER) do sistema foi desenvolvido para representar de forma clara e estruturada as entidades principais, seus atributos e os relacionamentos entre elas. Este modelo serve como base para a cria\u00e7\u00e3o do esquema do banco de dados relacional, garantindo que os dados sejam armazenados de maneira eficiente e consistente.</p> <p></p> <p>Figura 2.4.9 - Modelo Entidade-Relacionamento (MER) do Sistema</p> <p>Fonte: Gabriel Alves</p> <p>O MER inclui as seguintes entidades principais:</p> <ul> <li>User (Usu\u00e1rio): Representa os usu\u00e1rios do sistema, com atributos principais como ID, nome, userName, email e senha, ProfileType (tipo de perfil).</li> <li>Group (Grupo): Representa grupos de usu\u00e1rios, com atributos como ID, nome, bio, groupType (tipo de grupo que pode ser ATL\u00c9TICA ou AMADOR).</li> <li>Post (Publica\u00e7\u00e3o): Representa as publica\u00e7\u00f5es feitas pelos usu\u00e1rios admins de grupos, contendo atributos como ID, title, content (conte\u00fado), date_of_post (data e hora da publica\u00e7\u00e3o), postType (tipo de publica\u00e7\u00e3o que pode ser EVENTO ou GERAL), location e event_date opcionais para eventos.</li> <li>Comment (Coment\u00e1rio): Representa os coment\u00e1rios feitos pelos usu\u00e1rios nas publica\u00e7\u00f5es, com atributos como ID, content (conte\u00fado) e createdAt (data e hora do coment\u00e1rio).</li> <li>Match (Partida): Representa partidas esportivas organizadas por grupos, com atributos como ID, home_team (time da casa), away_team (time visitante), match_date (data e hora da partida), location (local) e score_home e score_away para o placar.</li> <li>Teams (Times): Entidade fraca que representa os times associados as partidas, com apenas um atributo userId.</li> <li>Report (Den\u00fancia): Representa den\u00fancias feitas por usu\u00e1rios contra publica\u00e7\u00f5es ou coment\u00e1rios, com atributos como ID, reason (motivo) e createdAt (data e hora da den\u00fancia).</li> </ul> <p>Os relacionamentos entre as entidades s\u00e3o definidos para refletir as intera\u00e7\u00f5es e depend\u00eancias do sistema, como a associa\u00e7\u00e3o entre usu\u00e1rios e grupos, publica\u00e7\u00f5es e coment\u00e1rios, e partidas e times. Foram identificados os tipos de relacionamentos (1:1, 1:N, N:M) e as cardinalidades para garantir a integridade dos dados.</p> <p>Os relacionamentos principais incluem:</p> <ul> <li>Um User pode pertencer a muitos Groups (N:M), e um Group pode ter muitos Users.</li> <li>Um User pode seguir (Follow) muitos Groups (N:M), e um Group pode ser seguido por muitos Users.</li> <li>Um User pode criar muitas Posts (1:N), e cada Post \u00e9 criado por um \u00fanico User desde que seja um admin de um Group.</li> <li>Um Post pode ter muitos Comments (1:N), e cada Comment \u00e9 associado a um \u00fanico Post.</li> <li>Um User pode curtir (postLike) muitas Posts (N:M), e um Post pode ser curtido por muitos Users.</li> <li>Um User pode fazer v\u00e1rios Comments (1:N), e cada Comment \u00e9 feito por um \u00fanico User.</li> <li>Um User pode marcar presen\u00e7a (attendance) em muitos Events (N:M), e um Event pode ter muitos Users presentes.</li> <li>Um User pode denunciar (Report) muitas Posts e Comments (1:N), e cada Report \u00e9 feito por um \u00fanico User.</li> <li>Um User pode criar (publish) muitas Matches (1:N), e cada Match \u00e9 criada por um \u00fanico User.</li> <li>Um User pode se inscrever em muitas Matches (N:M), e uma Match pode ter muitos Users inscritos.</li> <li>Uma Match tem dois Teams (1:2), e cada Team est\u00e1 associada a uma \u00fanica Match.</li> </ul> <p>Os atributos de cada entidade foram cuidadosamente definidos para capturar todas as informa\u00e7\u00f5es necess\u00e1rias para o funcionamento do sistema, garantindo que o modelo atenda aos requisitos funcionais e n\u00e3o funcionais estabelecidos, sabendo que podem sofrer altera\u00e7\u00f5es futuras de acordo com a evolu\u00e7\u00e3o do projeto.</p>"},{"location":"arquitetura/abstracao_implemantacao/#25-visao-de-implantacao","title":"2.5 Vis\u00e3o de Implanta\u00e7\u00e3o","text":"<p>A vis\u00e3o de implanta\u00e7\u00e3o deste projeto detalha a infraestrutura de software e as configura\u00e7\u00f5es de execu\u00e7\u00e3o do sistema em um ambiente de desenvolvimento local (<code>localhost</code>).</p> <p>O foco \u00e9 garantir a paridade de ambiente entre os desenvolvedores, facilitando a colabora\u00e7\u00e3o e eliminando inconsist\u00eancias de configura\u00e7\u00e3o.</p>"},{"location":"arquitetura/abstracao_implemantacao/#251-descricao-da-infraestrutura-de-implantacao","title":"2.5.1 Descri\u00e7\u00e3o da Infraestrutura de Implanta\u00e7\u00e3o","text":"<p>O sistema \u00e9 executado inteiramente em m\u00e1quinas locais, por adotarmos a estrat\u00e9gia de constru\u00e7\u00e3o com monorreposit\u00f3rio, e uma arquitetura cliente-servidor.</p> <ul> <li>Cliente (Front-end): A aplica\u00e7\u00e3o \u00e9 desenvolvida em React Native . Ela \u00e9 executada em um emulador de dispositivo m\u00f3vel (Android Studio ou iOS Simulator) ou em um dispositivo f\u00edsico conectado \u00e0 m\u00e1quina de desenvolvimento.</li> <li>Servidor (Back-end): Desenvolvido em Node.js com o framework Express. O Express \u00e9 respons\u00e1vel por criar e gerenciar os endpoints da API RESTful.</li> <li>Armazenamento de Dados: O sistema utiliza PostgreSQL para armazenamento de dados.</li> <li>Comunica\u00e7\u00e3o: A aplica\u00e7\u00e3o React Native utiliza a biblioteca Axios para realizar as requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE) aos endpoints expostos pela API Express. Para que essa comunica\u00e7\u00e3o entre \"origens\" diferentes (o app e a API, rodando em portas distintas) seja permitida, o middleware CORS (Cross-Origin Resource Sharing) est\u00e1 configurado no servidor Express.</li> <li>Reposit\u00f3rio: O c\u00f3digo-fonte de todos os componentes (front-end e back-end) \u00e9 gerenciado em um Monoreposit\u00f3rio no GitHub.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#252-justificativa-das-tecnologias","title":"2.5.2 Justificativa das Tecnologias","text":"<p>A sele\u00e7\u00e3o de tecnologias foi baseada na simplicidade, produtividade e no objetivo de simular uma arquitetura de cliente-servidor em ambiente local.</p> <ul> <li>Implanta\u00e7\u00e3o Local (<code>localhost</code>): por ser um projeto acad\u00eamico, n\u00e3o se enxergou motivos para ado\u00e7\u00e3o de uma hospedagem pela complexidade e os custos da configura\u00e7\u00e3o de provedores de nuvem (AWS, Azure).</li> <li>Docker: Garante que todos os desenvolvedores e clientes executem inst\u00e2ncias id\u00eanticas do banco de dados PostgreSQL e dos servi\u00e7os de back-end.</li> <li>PostgreSQL: Escolhido por ser um banco de dados robusto, de c\u00f3digo aberto e amplamente utilizado no mercado.</li> <li>React Native: Selecionado por permitir o desenvolvimento de aplica\u00e7\u00f5es m\u00f3veis para iOS e Android a partir de uma \u00fanica base de c\u00f3digo (codebase), otimizando o esfor\u00e7o de desenvolvimento.</li> <li>Express (Node.js): Sendo uma ferramenta leve, flex\u00edvel e perform\u00e1tica, sendo ideal para a constru\u00e7\u00e3o de APIs RESTful de forma r\u00e1pida e eficiente.</li> <li>Monoreposit\u00f3rio: A abordagem de monorepo foi escolhida para facilitar a gest\u00e3o do c\u00f3digo, o compartilhamento de tipos e bibliotecas entre o front-end e o back-end, e simplificar a visualiza\u00e7\u00e3o do projeto como um todo, pelo fato de todo o projeto estar em um \u00fanico reposit\u00f3rio.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#26-restricoes-adicionais","title":"2.6 Restri\u00e7\u00f5es Adicionais","text":"<p>Esta aplica\u00e7\u00e3o foi projetada para atender restri\u00e7\u00f5es adicionais que garantem seu poder de neg\u00f3cio da aplica\u00e7\u00e3o, requisitos t\u00e9cnicos, qualidade e seguran\u00e7a dos dados de usu\u00e1rios.</p>"},{"location":"arquitetura/abstracao_implemantacao/#261-restricoes-negociais","title":"2.6.1 Restri\u00e7\u00f5es Negociais","text":"<ul> <li>O sistema destina-se \u00e0 avalia\u00e7\u00e3o acad\u00eamica, havendo planos para implanta\u00e7\u00e3o em produ\u00e7\u00e3o caso solicitado pela comunidade acad\u00eamica.</li> <li>O projeto n\u00e3o deve gerar custos de infraestrutura, limitando-se a ferramentas gratuitas e de c\u00f3digo aberto.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#262-restricoes-tecnicas-pre-requisitos-de-ambiente","title":"2.6.2 Restri\u00e7\u00f5es T\u00e9cnicas (Pr\u00e9-requisitos de Ambiente)","text":"<p>Para a correta execu\u00e7\u00e3o e avalia\u00e7\u00e3o do projeto em um ambiente de desenvolvimento local, a m\u00e1quina do usu\u00e1rio deve atender aos seguintes pr\u00e9-requisitos de software:</p> <ul> <li>Node.js: \u00c9 necess\u00e1ria a instala\u00e7\u00e3o do Node.js.</li> <li>Gerenciador de Pacotes <code>pnpm</code>: O projeto utiliza o <code>pnpm</code> para gerenciamento de depend\u00eancias. Ele deve estar instalado e ser\u00e1 o comando utilizado para instalar os pacotes.</li> <li>Banco de Dados PostgreSQL: Um servidor de banco de dados PostgreSQL deve estar em execu\u00e7\u00e3o e acess\u00edvel pela m\u00e1quina local. (apesar de citar o docker como estrat\u00e9gia de containeriza\u00e7\u00e3o, uma instala\u00e7\u00e3o local do PostgreSQL tamb\u00e9m \u00e9 compat\u00edvel).</li> <li>App M\u00f3vel (Para Testes F\u00edsicos): Para executar o aplicativo em um dispositivo m\u00f3vel f\u00edsico (iOS ou Android), o usu\u00e1rio deve ter o aplicativo Expo Go instalado e estar conectado na mesma rede Wi-Fi que o computador que est\u00e1 executando o projeto.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#263-restricoes-de-qualidade","title":"2.6.3 Restri\u00e7\u00f5es de Qualidade","text":"<ul> <li>Disponibilidade: O sistema deve estar funcional durante os per\u00edodos de desenvolvimento e para a apresenta\u00e7\u00e3o final.</li> <li>Testabilidade: O foco dos testes unit\u00e1rios e automatizados deve ser a integra\u00e7\u00e3o local entre o aplicativo React Native e os endpoints da API, garantindo que os fluxos de dados ocorram corretamente.</li> </ul>"},{"location":"arquitetura/abstracao_implemantacao/#264-restricoes-de-seguranca-e-conformidade","title":"2.6.4 Restri\u00e7\u00f5es de Seguran\u00e7a e Conformidade","text":"<p>Embora este seja um projeto acad\u00eamico sem o uso de dados pessoais reais, o design do sistema busca seguir conceitualmente os princ\u00edpios da Lei Geral de Prote\u00e7\u00e3o de Dados (LGPD, Lei n\u00ba 13.709/2018).</p> <p>O desenvolvimento da API (back-end) deve, como boa pr\u00e1tica, mitigar os riscos de seguran\u00e7a mais cr\u00edticos listados no OWASP, como Injection (Inje\u00e7\u00e3o de C\u00f3digo) e Broken Authentication (Autentica\u00e7\u00e3o Quebrada).</p>"},{"location":"arquitetura/arquitetura_produto/","title":"Arquitetura x Produto","text":""},{"location":"arquitetura/arquitetura_produto/#23-arquitetura-x-produto","title":"2.3 Arquitetura x Produto","text":""},{"location":"arquitetura/arquitetura_produto/#231-metas-e-restricoes-arquiteturais","title":"2.3.1 Metas e restri\u00e7\u00f5es arquiteturais","text":"<p>Assegurando que o produto final atenda aos requisitos n\u00e3o funcionais de desempenho, disponibilidade, seguran\u00e7a e padroniza\u00e7\u00e3o de c\u00f3digo, as metas e restri\u00e7\u00f5es arquiteturiais do Aton garantem qualidade organizacional para o desenvolvimento da nossa plataforma.</p> <p>As metas e restri\u00e7\u00f5es arquiteturais descritas a seguir definem princ\u00edpios essenciais de cada t\u00f3pico, assegurando que o sistema mantenha estabilidade e coer\u00eancia t\u00e9cnica ao longo do desenvolvimento.</p> Categoria Meta Justificativa Desempenho O tempo m\u00e9dio de resposta da API REST deve ser inferior a 500 ms para opera\u00e7\u00f5es simples e at\u00e9 2 s para consultas mais complexas (como listagem de eventos). Garante uma experi\u00eancia responsiva no aplicativo m\u00f3vel, evitando travamentos e lentid\u00e3o percept\u00edvel para o usu\u00e1rio final. Desempenho O servidor deve ser capaz de lidar com 100 requisi\u00e7\u00f5es simult\u00e2neas sem degrada\u00e7\u00e3o significativa. Mant\u00e9m a estabilidade da API mesmo durante picos de acesso, como eventos ou atualiza\u00e7\u00f5es em tempo real. Disponibilidade O sistema deve atingir 99% de disponibilidade, especialmente nos m\u00f3dulos de autentica\u00e7\u00e3o e feed. A confiabilidade \u00e9 essencial para garantir o acesso cont\u00ednuo de usu\u00e1rios ao aplicativo, evitando falhas cr\u00edticas. Seguran\u00e7a Toda comunica\u00e7\u00e3o entre cliente e servidor deve ocorrer via HTTPS. Garante a confidencialidade dos dados trafegados entre o aplicativo e a API. Seguran\u00e7a As senhas devem ser armazenadas com hash utilizando bcrypt. Protege credenciais de usu\u00e1rios contra acesso indevido em caso de vazamento de dados. Seguran\u00e7a O acesso \u00e0s rotas privadas deve ser controlado por autentica\u00e7\u00e3o JWT (JSON Web Token). Assegura que apenas usu\u00e1rios autenticados possam acessar recursos sens\u00edveis. Seguran\u00e7a Implementa\u00e7\u00e3o de middlewares no Express para valida\u00e7\u00e3o e sanitiza\u00e7\u00e3o de entradas. Evita inje\u00e7\u00f5es e falhas de seguran\u00e7a decorrentes de dados malformados. Padr\u00f5es de Codifica\u00e7\u00e3o O c\u00f3digo deve seguir as conven\u00e7\u00f5es do ESLint e Prettier definidas no monorepo. Mant\u00e9m a consist\u00eancia entre os reposit\u00f3rios e facilita a colabora\u00e7\u00e3o entre desenvolvedores. Padr\u00f5es de Codifica\u00e7\u00e3o A arquitetura deve manter a separa\u00e7\u00e3o entre rotas, controladores, servi\u00e7os e reposit\u00f3rios. Ajuda a manter o sistema bem estruturado e simples de modificar. <p>Esses crit\u00e9rios orientam tanto o desenvolvimento do cliente m\u00f3vel quanto da API central, garantindo padr\u00f5es e qualidade para os usu\u00e1rios da aplica\u00e7\u00e3o.</p>"},{"location":"arquitetura/arquitetura_produto/#232-backlog-do-produto-escopo-do-produto","title":"2.3.2 Backlog do Produto (escopo do produto)","text":"<ul> <li> <p>Funcionamento: O aplicativo Aton tem como objetivo promover a sa\u00fade e o lazer entre os estudantes da Universidade de Bras\u00edlia (UnB) por meio da pr\u00e1tica esportiva. Para isso, o sistema permite que os usu\u00e1rios se cadastrem e escolham entre tr\u00eas tipos de perfil  (Jogador, Torcedor ou Atl\u00e9tica), definindo assim a experi\u00eancia inicial dentro do aplicativo. Ap\u00f3s realizar o login, o usu\u00e1rio pode visualizar informa\u00e7\u00f5es sobre eventos, criar ou participar de partidas, seguir atl\u00e9ticas, criar e gerenciar times, acompanhar resultados e interagir com outros usu\u00e1rios por meio de curtidas e coment\u00e1rios em postagens de eventos e partidas.</p> </li> <li> <p>Influ\u00eancia na Arquitetura: A arquitetura escolhida foi a Cliente-Servidor, principalmente por permitir uma melhor organiza\u00e7\u00e3o entre as camadas de interface e de neg\u00f3cio, al\u00e9m de oferecer reutiliza\u00e7\u00e3o de servi\u00e7os, facilidade de manuten\u00e7\u00e3o do c\u00f3digo e possibilidade de escalabilidade futura. Nesse modelo, o cliente (aplicativo mobile desenvolvido em React Native com Expo) \u00e9 respons\u00e1vel pela interface e intera\u00e7\u00e3o com o usu\u00e1rio, enquanto o servidor (implementado em Node.js, com Prisma e PostgreSQL e Express) centraliza a l\u00f3gica de neg\u00f3cio e fornece APIs REST para comunica\u00e7\u00e3o com o app.</p> </li> <li> <p>Dentre os requisitos que influenciaram a escolha do padr\u00e3o de arquitetura:</p> <p>-Disponibilidade em dispositivos m\u00f3veis (Android e iOS), facilitada pela utiliza\u00e7\u00e3o do React Native;</p> <p>-Necessidade de autentica\u00e7\u00e3o e gerenciamento centralizado de usu\u00e1rios</p> <p>-Intera\u00e7\u00e3o constante com dados din\u00e2micos (eventos, times, postagens)</p> <p>-Facilidade de manuten\u00e7\u00e3o e evolu\u00e7\u00e3o do sistema</p> <p>-Separa\u00e7\u00e3o clara de responsabilidades</p> </li> </ul>"},{"location":"arquitetura/definicoes_gerais/","title":"Defini\u00e7\u00f5es Gerais","text":""},{"location":"arquitetura/definicoes_gerais/#2-arquitetura","title":"2. Arquitetura","text":""},{"location":"arquitetura/definicoes_gerais/#21-definicoes-gerais","title":"2.1 Defini\u00e7\u00f5es Gerais","text":""},{"location":"arquitetura/definicoes_gerais/#211-definicoes","title":"2.1.1 Defini\u00e7\u00f5es","text":""},{"location":"arquitetura/definicoes_gerais/#estilo-arquitetural-adotado-cliente-servidor","title":"Estilo Arquitetural Adotado: Cliente-Servidor","text":"<p>O sistema adota o estilo arquitetural cliente-servidor, amplamente utilizado em aplica\u00e7\u00f5es que exigem comunica\u00e7\u00e3o estruturada entre uma interface de usu\u00e1rio e um servidor central respons\u00e1vel pelo processamento e persist\u00eancia dos dados.</p> <p>Nesse modelo, existe uma divis\u00e3o clara de responsabilidades:</p> <ul> <li> <p>O cliente \u00e9 respons\u00e1vel pela intera\u00e7\u00e3o com o usu\u00e1rio e pela coleta/envio de informa\u00e7\u00f5es.  </p> </li> <li> <p>O servidor executa as regras de neg\u00f3cio, processa as requisi\u00e7\u00f5es e gerencia o acesso seguro aos dados.</p> </li> </ul> <p>Essa separa\u00e7\u00e3o facilita a escalabilidade, manuten\u00e7\u00e3o e evolu\u00e7\u00e3o do sistema, permitindo que as camadas sejam desenvolvidas e atualizadas de forma independente.</p>"},{"location":"arquitetura/definicoes_gerais/#componentes-conceituais-do-sistema","title":"Componentes Conceituais do Sistema","text":"<ol> <li> <p>Frontend (Cliente): </p> <ul> <li>Desenvolvido em React Native, possibilitando o uso do sistema em dispositivos m\u00f3veis (Android e iOS).</li> <li>Respons\u00e1vel pela interface e experi\u00eancia do usu\u00e1rio (UI/UX), com base em prot\u00f3tipos elaborados no Figma.</li> <li>Consome os servi\u00e7os do backend por meio de requisi\u00e7\u00f5es HTTP/HTTPS, trocando dados no formato JSON.</li> <li>Implementa as principais funcionalidades de intera\u00e7\u00e3o, como autentica\u00e7\u00e3o, exibi\u00e7\u00e3o de dados e envio de formul\u00e1rios.</li> </ul> </li> <li> <p>Backend (Servidor):</p> <ul> <li>Implementa uma API RESTful, centralizando as regras de neg\u00f3cio e o controle de acesso.</li> <li>Recebe requisi\u00e7\u00f5es dos clientes, processa as informa\u00e7\u00f5es e retorna respostas estruturadas.</li> <li>Gerencia a l\u00f3gica de autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o e persist\u00eancia de dados.</li> <li>Utiliza padr\u00f5es de organiza\u00e7\u00e3o como MVC (Model-View-Controller) ou equivalentes, garantindo modularidade e clareza.</li> <li>Interage com o banco de dados via Prisma ORM, simplificando consultas, migra\u00e7\u00f5es e manuten\u00e7\u00e3o do esquema de dados.</li> </ul> </li> <li> <p>Banco de Dados:</p> <ul> <li>Utiliza o PostgreSQL, um sistema gerenciador de banco de dados relacional (SGBD) robusto e open source.</li> <li>Respons\u00e1vel pelo armazenamento seguro e persistente das informa\u00e7\u00f5es do sistema.</li> <li>Oferece recursos avan\u00e7ados como integridade referencial, transa\u00e7\u00f5es ACID e consultas otimizadas.</li> <li>O Prisma ORM atua como camada de abstra\u00e7\u00e3o, permitindo que o backend execute opera\u00e7\u00f5es no banco de dados de forma segura, tipada e eficiente.</li> </ul> </li> <li> <p>Camada de Comunica\u00e7\u00e3o:</p> <ul> <li>A comunica\u00e7\u00e3o entre cliente e servidor \u00e9 feita via protocolo HTTP/HTTPS.</li> <li>Segue o padr\u00e3o REST, com endpoints organizados por recursos.</li> <li>Os dados trafegam em formato JSON, garantindo compatibilidade entre plataformas.</li> <li>A autentica\u00e7\u00e3o \u00e9 realizada por meio de tokens JWT, assegurando sess\u00f5es seguras e controle de permiss\u00f5es.</li> </ul> </li> </ol>"},{"location":"arquitetura/definicoes_gerais/#beneficios-da-arquitetura-cliente-servidor","title":"Benef\u00edcios da Arquitetura Cliente-Servidor","text":"<ul> <li>Separa\u00e7\u00e3o de responsabilidades: frontend e backend podem evoluir de forma independente.  </li> <li>Escalabilidade: o servidor pode ser replicado para atender m\u00faltiplas conex\u00f5es simult\u00e2neas.  </li> <li>Portabilidade: o uso do React Native permite acesso multiplataforma (Android e iOS).  </li> <li>Seguran\u00e7a: as regras de neg\u00f3cio e o controle de acesso permanecem centralizados no servidor.  </li> <li>Padroniza\u00e7\u00e3o: o uso de HTTP/HTTPS, JSON e REST facilita integra\u00e7\u00e3o com outros servi\u00e7os.  </li> <li>Produtividade e manuten\u00e7\u00e3o facilitada: o uso do Prisma ORM permite consultas tipadas, migra\u00e7\u00f5es autom\u00e1ticas e menor risco de erros em opera\u00e7\u00f5es de banco de dados.</li> </ul> <p>Resumo: O modelo cliente-servidor foi adotado por proporcionar uma estrutura modular, segura e escal\u00e1vel. A combina\u00e7\u00e3o de React Native para o cliente, PostgreSQL + Prisma para persist\u00eancia de dados e Figma como ferramenta de design oferece uma base s\u00f3lida para o desenvolvimento e evolu\u00e7\u00e3o do sistema.</p>"},{"location":"arquitetura/definicoes_gerais/#212-justificativa-de-escolha","title":"2.1.2  Justificativa de escolha","text":""},{"location":"arquitetura/definicoes_gerais/#motivo-da-escolha","title":"Motivo da escolha","text":"<p>A arquitetura cliente-servidor foi escolhida por atender de forma eficiente aos requisitos funcionais e n\u00e3o funcionais definidos para o sistema. Esse modelo garante uma separa\u00e7\u00e3o clara entre as responsabilidades de interface (frontend) e processamento de dados (backend). Esse modelo de organiza\u00e7\u00e3o separa claramente a  responsabilidade da apresenta\u00e7\u00e3o com o processamento, o que permite que uma interface foque na total experi\u00eancia do usu\u00e1rio e a outra concentre toda a l\u00f3gica, persist\u00eancia e aut\u00eantica\u00e7\u00f5es. </p> <p>A escolha por esta arquitetura foi motivada pela necessidade de entregar um produto multiplataforma com rapidez, manter o controle centralizado das regras de neg\u00f3cio e reduzir a complexidade operacional na fase inicial do projeto. O uso de PostgreSQL combinado com Prisma oferece persist\u00eancia relacional robusta, migra\u00e7\u00f5es tipadas e seguran\u00e7a nas opera\u00e7\u00f5es de banco de dados.</p> <p>Em resumo, a arquitetura cliente\u2011servidor equilibra rapidez de desenvolvimento, seguran\u00e7a e capacidade de evolu\u00e7\u00e3o do Aton, oferecendo uma base pragm\u00e1tica e escal\u00e1vel para suportar as funcionalidades de gerenciamento de eventos, feed social e autentica\u00e7\u00e3o de usu\u00e1rios demandadas pelo sistema.</p> <p>entrega: <code>Texto anal\u00edtico com refer\u00eancias</code></p>"},{"location":"arquitetura/detalhamento/","title":"Detalhamento","text":""},{"location":"arquitetura/detalhamento/#22-detalhamento-da-arquitetura","title":"2.2 Detalhamento da Arquitetura","text":""},{"location":"arquitetura/detalhamento/#221-detalhamento","title":"2.2.1 Detalhamento","text":"<p>A plataforma Aton \u00e9 estruturada em uma arquitetura de Cliente-Servidor. Esta estrutura separa as responsabilidades em duas aplica\u00e7\u00f5es distintas: um aplicativo m\u00f3vel (o cliente) e uma API central (o servidor). O c\u00f3digo-fonte de ambas as aplica\u00e7\u00f5es \u00e9 gerenciado de forma coesa dentro de um monorepo, utilizando Turborepo e pnpm para otimizar o desenvolvimento e as depend\u00eancias.</p> <p>O Cliente da plataforma \u00e9 o aplicativo m\u00f3vel, desenvolvido em React Native com o ecossistema Expo. Esta camada \u00e9 exclusivamente respons\u00e1vel pela apresenta\u00e7\u00e3o e pela intera\u00e7\u00e3o com o usu\u00e1rio. Sua fun\u00e7\u00e3o \u00e9 renderizar a interface, capturar entradas (como formul\u00e1rios de login ou cadastro) e formatar essas informa\u00e7\u00f5es para envio. O Front-end n\u00e3o cont\u00e9m l\u00f3gica de neg\u00f3cio; ele funciona como um consumidor que apenas solicita e exibe dados, comunicando-se com o servidor atrav\u00e9s de requisi\u00e7\u00f5es HTTP (API REST).</p> <p>O Servidor, que atua como o c\u00e9rebro central da arquitetura, \u00e9 uma API RESTful constru\u00edda em Node.js e Express. Esta camada de aplica\u00e7\u00e3o \u00e9 onde reside toda a l\u00f3gica de neg\u00f3cio do Aton. Ela \u00e9 respons\u00e1vel por receber as requisi\u00e7\u00f5es HTTP do cliente m\u00f3vel, processar as opera\u00e7\u00f5es (como autenticar um usu\u00e1rio, criar um campeonato ou buscar not\u00edcias) e orquestrar o acesso aos dados.</p> <p>A comunica\u00e7\u00e3o entre o cliente e os servi\u00e7os de neg\u00f3cio do Back-end \u00e9 protegida por uma camada de Middlewares do Express. Esta camada funciona como um \"guardi\u00e3o\" que intercepta cada requisi\u00e7\u00e3o. Suas responsabilidades s\u00e3o cruciais para a seguran\u00e7a e integridade dos dados: ela realiza a autentica\u00e7\u00e3o (verificando tokens JWT para proteger rotas) e a valida\u00e7\u00e3o (garantindo que os dados enviados, como um e-mail ou senha, estejam no formato correto), antes que a requisi\u00e7\u00e3o seja processada pela l\u00f3gica de neg\u00f3cio principal.</p> <p>No n\u00edvel mais fundamental da arquitetura est\u00e1 a camada de persist\u00eancia, composta por um banco de dados relacional PostgreSQL. Este banco armazena todos os dados (usu\u00e1rios, partidas, postagens) da plataforma Aton em diferentes tabelas. O Back-end (especificamente, sua camada de reposit\u00f3rio) \u00e9 o \u00fanico componente com permiss\u00e3o para se comunicar com o banco de dados. Essa separa\u00e7\u00e3o garante que o acesso aos dados seja sempre mediado pela l\u00f3gica de neg\u00f3cio e pelas regras de seguran\u00e7a da API.</p> <p></p>"},{"location":"arquitetura/detalhamento/#222-intanciacao-dos-componentes","title":"2.2.2 Intancia\u00e7\u00e3o dos componentes","text":"<p>O Diagrama esquem\u00e1tico acima ilustra a arquitetura de Cliente-Servidor instanciada, mostrando o fluxo de comunica\u00e7\u00e3o entre as tr\u00eas camadas principais (Apresenta\u00e7\u00e3o, Aplica\u00e7\u00e3o e Persist\u00eancia) e seus componentes tecnol\u00f3gicos espec\u00edficos.</p>"},{"location":"arquitetura/detalhamento/#2221-elementos-de-arquitetura","title":"2.2.2.1 Elementos de Arquitetura","text":""},{"location":"arquitetura/detalhamento/#1-camada-apresentacao-front-end","title":"1. Camada Apresenta\u00e7\u00e3o (Front-end)","text":""},{"location":"arquitetura/detalhamento/#componente-react-native","title":"Componente React Native","text":"<ul> <li>Tecnologia: JavaScript/TypeScript</li> <li>Responsabilidade: Interface do usu\u00e1rio; exibi\u00e7\u00e3o de posts, eventos e notifica\u00e7\u00f5es.</li> </ul>"},{"location":"arquitetura/detalhamento/#2-camada-aplicacao-back-end","title":"2. Camada Aplica\u00e7\u00e3o (Back-end)","text":""},{"location":"arquitetura/detalhamento/#componente-express-controllers","title":"Componente Express Controllers","text":"<ul> <li>Tecnologia: Node.js / Express</li> <li>Responsabilidade: Receber requisi\u00e7\u00f5es HTTP e direcionar para os servi\u00e7os.</li> </ul>"},{"location":"arquitetura/detalhamento/#componente-services-regra-de-negocio","title":"Componente Services (Regra de Neg\u00f3cio)","text":"<ul> <li>Tecnologia: Node.js / Express</li> <li>Responsabilidade: Implementar l\u00f3gica de neg\u00f3cio: login, eventos, postagens, curtidas e notifica\u00e7\u00f5es.</li> </ul>"},{"location":"arquitetura/detalhamento/#componente-middleware-auth-errorhandler","title":"Componente \"Middleware (Auth, ErrorHandler)\"","text":"<ul> <li>Tecnologia: Node.js / Express</li> <li>Responsabilidade: Valida\u00e7\u00e3o de tokens JWT (seguran\u00e7a) e tratamento centralizado de erros.</li> </ul>"},{"location":"arquitetura/detalhamento/#3-camada-persistencia","title":"3. Camada Persist\u00eancia","text":""},{"location":"arquitetura/detalhamento/#componente-prisma-orm","title":"Componente Prisma ORM","text":"<ul> <li>Tecnologia: ORM (Object-Relational Mapping)</li> <li>Responsabilidade: Comunica\u00e7\u00e3o com o banco de dados PostgreSQL.</li> </ul>"},{"location":"arquitetura/detalhamento/#componente-postgresql","title":"Componente PostgreSQL","text":"<ul> <li>Tecnologia: Banco de Dados Relacional</li> <li>Responsabilidade: Armazenar dados persistentes: usu\u00e1rios, postagens, eventos, curtidas, seguidores e notifica\u00e7\u00f5es.</li> </ul>"},{"location":"arquitetura/detalhamento/#2222-protocolos","title":"2.2.2.2 Protocolos:","text":""},{"location":"arquitetura/detalhamento/#1-protocolo-de-comunicacao-cliente-servidor","title":"1. Protocolo de Comunica\u00e7\u00e3o Cliente-Servidor","text":"<p>O protocolo prim\u00e1rio que governa a troca de dados entre o aplicativo m\u00f3vel (Cliente) e a API central (Servidor) \u00e9:</p> <ul> <li>HTTP (Hypertext Transfer Protocol) / API RESTful:</li> <li>O cliente se comunica com o servidor por meio de requisi\u00e7\u00f5es HTTP.</li> <li>O servidor segue o padr\u00e3o arquitetural REST (Representational State Transfer), utilizando m\u00e9todos HTTP padr\u00e3o (como <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>) para interagir com recursos (como usu\u00e1rios, postagens ou eventos).</li> </ul>"},{"location":"arquitetura/detalhamento/#2-protocolo-de-seguranca-e-autenticacao","title":"2. Protocolo de Seguran\u00e7a e Autentica\u00e7\u00e3o","text":"<p>Para garantir que apenas usu\u00e1rios autorizados acessem rotas protegidas, o protocolo utilizado \u00e9:</p> <ul> <li>JWT (JSON Web Tokens): Este \u00e9 o protocolo de autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o utilizado.</li> <li>Fluxo:<ol> <li>Ap\u00f3s o login, o servidor gera um token JWT e o envia ao cliente.</li> <li>Em requisi\u00e7\u00f5es subsequentes a rotas protegidas, o cliente envia esse token.</li> <li>O Middleware do Express verifica o token JWT para confirmar a identidade e as permiss\u00f5es do usu\u00e1rio antes que a l\u00f3gica de neg\u00f3cio seja processada.</li> </ol> </li> </ul>"},{"location":"arquitetura/detalhamento/#3-protocolo-de-persistencia-comunicacao-com-o-banco-de-dados","title":"3. Protocolo de Persist\u00eancia (Comunica\u00e7\u00e3o com o Banco de Dados)","text":"<p>O Back-end utiliza uma camada de abstra\u00e7\u00e3o para se comunicar com o banco de dados relacional:</p> <ul> <li>SQL (Structured Query Language):</li> <li>Embora n\u00e3o seja vis\u00edvel para o Front-end, o PostgreSQL usa SQL para manipular os dados (armazenar, buscar, atualizar).</li> <li>Prisma ORM (Object-Relational Mapping):</li> <li>Esta \u00e9 a ferramenta/camada que o Back-end utiliza para traduzir as opera\u00e7\u00f5es da l\u00f3gica de neg\u00f3cio em comandos SQL que o PostgreSQL entende. Ele atua como o mediador do protocolo de persist\u00eancia.</li> </ul>"},{"location":"arquitetura/detalhamento/#exemplo-de-protocolos-da-api-rotas-e-permissoes","title":"Exemplo de Protocolos da API (Rotas e Permiss\u00f5es)","text":"M\u00e9todo Rota Descri\u00e7\u00e3o Permiss\u00f5es POST <code>/users</code> Cadastro de novo usu\u00e1rio P\u00fablico DELETE <code>/users/:username</code> Deleta usu\u00e1rio Autenticado GET <code>/users/:username</code> Busca um usu\u00e1rio pelo username P\u00fablico POST <code>/posts</code> Criar nova postagem Atl\u00e9ticas"},{"location":"arquitetura/introducao/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"arquitetura/introducao/#documento-de-arquitetura-aton-grupo-ra","title":"Documento de Arquitetura \u2014 Aton (Grupo R\u00c1)","text":"<p>Vers\u00e3o: 1.0 Autores: Gabriel Alves, Rodrigo \u00c0tila, Yan Rodrigues, Gabriel Mota, Matheus Pinheiro, \u00c2ngelo Cordova, Giovana Martins de Brito, Guilherme Mendes, Samuel Leite, Pedro In\u00e1cio Santos  </p>"},{"location":"arquitetura/introducao/#1-introducao","title":"1 Introdu\u00e7\u00e3o","text":""},{"location":"arquitetura/introducao/#11-proposito","title":"1.1 Prop\u00f3sito","text":"<p>Este documento descreve a arquitetura do sistema Aton, aplicativo m\u00f3vel para centralizar divulga\u00e7\u00e3o e participa\u00e7\u00e3o em eventos esportivos na Universidade de Bras\u00edlia (UnB). O objetivo \u00e9 servir como guia para desenvolvedores, testadores e demais stakeholders, alinhando decis\u00f5es de arquitetura, vis\u00e3o l\u00f3gica e tecnol\u00f3gica.</p>"},{"location":"arquitetura/introducao/#12-escopo","title":"1.2 Escopo","text":"<p>O Aton suportar\u00e1: - cadastro/gerenciamento de perfis (jogador, torcedor, atl\u00e9tica), - cria\u00e7\u00e3o/gerenciamento de times e eventos (casuais e campeonatos), - feed social (posts, coment\u00e1rios, curtidas, den\u00fancias), - sistema de follow / notifica\u00e7\u00f5es, - gamifica\u00e7\u00e3o (badges, conquistas), - fluxo de verifica\u00e7\u00e3o de representantes de atl\u00e9tica (documenta\u00e7\u00e3o), - filtros de eventos (modalidade, data, n\u00edvel, posi\u00e7\u00e3o), - confirma\u00e7\u00e3o de presen\u00e7a, compartilhamento, calend\u00e1rio integrado, - painel administrativo para gest\u00e3o de usu\u00e1rios e verifica\u00e7\u00f5es.</p>"},{"location":"arquitetura/ref/","title":"Refer\u00eancias","text":""},{"location":"arquitetura/ref/#3-bibliografia","title":"3. Bibliografia","text":"<p>Descrever infraestrutura de implanta\u00e7\u00e3o (cloud, container, rede, etc.), justificar tecnologias; em seguida, documentar restri\u00e7\u00f5es adicionais (negociais, t\u00e9cnicas e de qualidade). Finalizar com refer\u00eancias ABNT.</p> <p>entrega: <code>Texto t\u00e9cnico + formata\u00e7\u00e3o ABNT</code></p> <p>AXIOS. Axios: Promise based HTTP client for the browser and node.js. [S. l.]: Axios, 2024. Dispon\u00edvel em: https://axios-http.com/docs/intro.</p> <p>DOCKER. Docker overview. [S. l.]: Docker Inc., 2024. Dispon\u00edvel em: https://docs.docker.com/get-started/overview/.</p> <p>EXPRESS. Express - Node.js web application framework. [S. l.]: Express, 2024. Dispon\u00edvel em: https://expressjs.com/.</p> <p>FACEBOOK. React Native: Learn once, write anywhere. [S. l.]: Meta, 2024. Dispon\u00edvel em: https://reactnative.dev/docs/getting-started.</p> <p>POSTGRESQL GLOBAL DEVELOPMENT GROUP. PostgreSQL: Documentation. [S. l.], 2024. Dispon\u00edvel em: https://www.postgresql.org/docs/.</p> <p>BRASIL. Lei n\u00ba 13.709, de 14 de agosto de 2018. Lei Geral de Prote\u00e7\u00e3o de Dados Pessoais (LGPD). Bras\u00edlia, DF: Presid\u00eancia da Rep\u00fablica, [2018]. Dispon\u00edvel em: http://www.planalto.gov.br/ccivil_03/_ato2015-2018/2018/lei/l13709.htm.</p> <p>OWASP FOUNDATION. OWASP Top 10: 2021. [S. l.]: OWASP, 2021. Dispon\u00edvel em: https://owasp.org/www-project-top-ten/.</p>"},{"location":"arquitetura/representacao_arquitetural/","title":"Arquitetura","text":""},{"location":"arquitetura/representacao_arquitetural/#arquitetura","title":"Arquitetura","text":""},{"location":"arquitetura/representacao_arquitetural/#sobre-os-microservicos","title":"Sobre os Microservi\u00e7os","text":""},{"location":"arquitetura/representacao_arquitetural/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"arquitetura/representacao_arquitetural/#modelagem-de-dados","title":"Modelagem de Dados","text":""},{"location":"arquitetura/representacao_arquitetural/#modelagem-conceitual-der","title":"Modelagem conceitual (DER)","text":""},{"location":"arquitetura/representacao_arquitetural/#modelagem-logica","title":"Modelagem L\u00f3gica","text":""},{"location":"arquitetura/representacao_arquitetural/#modelagem-fisica","title":"Modelagem F\u00edsica","text":""},{"location":"arquitetura/representacao_arquitetural/#28-visao-de-implantacao","title":"2.8 Vis\u00e3o de Implanta\u00e7\u00e3o","text":"<p>A vis\u00e3o de implanta\u00e7\u00e3o deste projeto detalha a infraestrutura de software e as configura\u00e7\u00f5es de execu\u00e7\u00e3o do sistema em um ambiente de desenvolvimento local (<code>localhost</code>).</p> <p>O foco \u00e9 garantir a paridade de ambiente entre os desenvolvedores, facilitando a colabora\u00e7\u00e3o e eliminando inconsist\u00eancias de configura\u00e7\u00e3o.</p>"},{"location":"arquitetura/representacao_arquitetural/#281-descricao-da-infraestrutura-de-implantacao","title":"2.8.1 Descri\u00e7\u00e3o da Infraestrutura de Implanta\u00e7\u00e3o","text":"<p>O sistema \u00e9 executado inteiramente em m\u00e1quinas locais, por adotarmos a estrat\u00e9gia de contru\u00e7\u00e3o dos microservi\u00e7os com monoreposit\u00f3rio, e uma arquitetura cliente-servidor.</p> <ul> <li>Cliente (Front-end): A aplica\u00e7\u00e3o \u00e9 desenvolvida em React Native . Ela \u00e9 executada em um emulador de dispositivo m\u00f3vel (Android Studio ou iOS Simulator) ou em um dispositivo f\u00edsico conectado \u00e0 m\u00e1quina de desenvolvimento.</li> <li>Servidor (Back-end): Desenvolvido em Node.js com o framework Express. O Express \u00e9 respons\u00e1vel por criar e gerenciar os endpoints da API RESTful.</li> <li>Armazenamento de Dados: O sistema utiliza PostgreSQL para armazenamento de dados.</li> <li>Comunica\u00e7\u00e3o: A aplica\u00e7\u00e3o React Native utiliza a biblioteca Axios para realizar as requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE) aos endpoints expostos pela API Express. Para que essa comunica\u00e7\u00e3o entre \"origens\" diferentes (o app e a API, rodando em portas distintas) seja permitida, o middleware CORS (Cross-Origin Resource Sharing) est\u00e1 configurado no servidor Express.</li> <li>Reposit\u00f3rio: O c\u00f3digo-fonte de todos os componentes (front-end e back-end) \u00e9 gerenciado em um Monoreposit\u00f3rio no GitHub.</li> </ul>"},{"location":"arquitetura/representacao_arquitetural/#282-justificativa-das-tecnologias","title":"2.8.2 Justificativa das Tecnologias","text":"<p>A sele\u00e7\u00e3o de tecnologias foi baseada na simplicidade, produtividade e no objetivo de simular uma arquitetura de microservi\u00e7os em ambiente local.</p> <ul> <li>Implanta\u00e7\u00e3o Local (<code>localhost</code>): por ser um projeto acad\u00eamico, n\u00e3o se enxergou motivos para ado\u00e7\u00e3o de uma hospedagem pela complexidade e os custos da configura\u00e7\u00e3o de provedores de nuvem (AWS, Azure).</li> <li>Docker: Garante que todos os desenvolvedores e clientes executem inst\u00e2ncias id\u00eanticas do banco de dados PostgreSQL e dos servi\u00e7os de back-end.</li> <li>PostgreSQL: Escolhido por ser um banco de dados robusto, de c\u00f3digo aberto e amplamente utilizado no mercado.</li> <li>React Native: Selecionado por permitir o desenvolvimento de aplica\u00e7\u00f5es m\u00f3veis para iOS e Android a partir de uma \u00fanica base de c\u00f3digo (codebase), otimizando o esfor\u00e7o de desenvolvimento.</li> <li>Express (Node.js): Sendo uma ferramenta leve, flex\u00edvel e perform\u00e1tica, sendo ideal para a constru\u00e7\u00e3o de APIs RESTful de forma r\u00e1pida e eficiente.</li> <li>Monoreposit\u00f3rio: A abordagem de monorepo foi escolhida para facilitar a gest\u00e3o do c\u00f3digo, o compartilhamento de tipos e bibliotecas entre o front-end e o back-end, e simplificar a visualiza\u00e7\u00e3o do projeto como um todo, pelo fato de todo o projeto estar em um \u00fanico reposit\u00f3rio.</li> </ul>"},{"location":"arquitetura/representacao_arquitetural/#29-restricoes-adicionais","title":"2.9 Restri\u00e7\u00f5es Adicionais","text":"<p>Esta aplica\u00e7\u00e3o foi projetada para atender restri\u00e7\u00f5es adicionais que garantem seu poder de neg\u00f3cio, requisitos t\u00e9cnicos, qualidade e seguran\u00e7a dos dados de pequenos produtores rurais.</p>"},{"location":"arquitetura/representacao_arquitetural/#291-restricoes-negociais","title":"2.9.1 Restri\u00e7\u00f5es Negociais","text":"<ul> <li>O sistema destina-se \u00e0 avalia\u00e7\u00e3o acad\u00eamica, havendo planos para implanta\u00e7\u00e3o em produ\u00e7\u00e3o caso solicitado pela comunidade acad\u00eamica.</li> <li>O projeto n\u00e3o deve gerar custos de infraestrutura, limitando-se a ferramentas gratuitas e de c\u00f3digo aberto.</li> </ul>"},{"location":"arquitetura/representacao_arquitetural/#292-restricoes-tecnicas-pre-requisitos-de-ambiente","title":"2.9.2 Restri\u00e7\u00f5es T\u00e9cnicas (Pr\u00e9-requisitos de Ambiente)","text":"<p>Para a correta execu\u00e7\u00e3o e avalia\u00e7\u00e3o do projeto em um ambiente de desenvolvimento local, a m\u00e1quina do usu\u00e1rio deve atender aos seguintes pr\u00e9-requisitos de software:</p> <ul> <li>Node.js: \u00c9 necess\u00e1ria a instala\u00e7\u00e3o do Node.js.</li> <li>Gerenciador de Pacotes <code>pnpm</code>: O projeto utiliza o <code>pnpm</code> para gerenciamento de depend\u00eancias. Ele deve estar instalado e ser\u00e1 o comando utilizado para instalar os pacotes.</li> <li>Banco de Dados PostgreSQL: Um servidor de banco de dados PostgreSQL deve estar em execu\u00e7\u00e3o e acess\u00edvel pela m\u00e1quina local. (apesar de citar o docker como estrat\u00e9gia de containeriza\u00e7\u00e3o, uma instala\u00e7\u00e3o local do PostgreSQL tamb\u00e9m \u00e9 compat\u00edvel).</li> <li>App M\u00f3vel (Para Testes F\u00edsicos): Para executar o aplicativo em um dispositivo m\u00f3vel f\u00edsico (iOS ou Android), o usu\u00e1rio deve ter o aplicativo Expo Go instalado e estar conectado na mesma rede Wi-Fi que o computador que est\u00e1 executando o projeto.</li> </ul>"},{"location":"arquitetura/representacao_arquitetural/#293-restricoes-de-qualidade","title":"2.9.3 Restri\u00e7\u00f5es de Qualidade","text":"<ul> <li>Disponibilidade: O sistema deve estar funcional durante os per\u00edodos de desenvolvimento e para a apresenta\u00e7\u00e3o final.</li> <li>Testabilidade: O foco dos testes unit\u00e1rios e automatizados deve ser a integra\u00e7\u00e3o local entre o aplicativo React Native e os endpoints da API, garantindo que os fluxos de dados ocorram corretamente.</li> </ul>"},{"location":"arquitetura/representacao_arquitetural/#294-restricoes-de-seguranca-e-conformidade","title":"2.9.4 Restri\u00e7\u00f5es de Seguran\u00e7a e Conformidade","text":"<p>Embora este seja um projeto acad\u00eamico sem o uso de dados pessoais reais, o design do sistema busca seguir conceitualmente os princ\u00edpios da Lei Geral de Prote\u00e7\u00e3o de Dados (LGPD, Lei n\u00ba 13.709/2018).</p> <p>O desenvolvimento da API (back-end) deve, como boa pr\u00e1tica, mitigar os riscos de seguran\u00e7a mais cr\u00edticos listados no OWASP, como Injection (Inje\u00e7\u00e3o de C\u00f3digo) e Broken Authentication (Autentica\u00e7\u00e3o Quebrada).</p>"},{"location":"atas/ata1/","title":"Concep\u00e7\u00e3o de produto e ideias","text":""},{"location":"atas/ata1/#data-15092025","title":"Data: 15/09/2025","text":""},{"location":"atas/ata1/#horario-de-inicio-2100","title":"Hor\u00e1rio de in\u00edcio: 21:00","text":""},{"location":"atas/ata1/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>Yan Rodrigues</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> </ul>"},{"location":"atas/ata1/#objetivos","title":"Objetivos","text":"<p>Decidir \u00e1rea/problema a ser aplicada a solu\u00e7\u00e3o por software como discutido via whatsapp, sanar d\u00favidas com a monitora Sophia.</p>"},{"location":"atas/ata1/#resumo","title":"Resumo","text":""},{"location":"atas/ata1/#o-que-foi-decidido","title":"O que foi decidido:","text":"<p>Seguir + ou - a ideia de rede social voltada para eventos para as atl\u00e9ticas</p> <p>tema escolhido: Rede de eventos e partidas Problema: n\u00e3o conseguir organizar reuni\u00f5es para a pr\u00e1tica de algum esporte</p> <ul> <li>Organizador de jogos por modalidades</li> <li>P\u00fablico alvo: Qualquer aluno da UnB que deseja praticar esportes</li> <li>Plataforma: multi</li> <li>Principais funcionalidades:</li> <li>Login/ cadastro</li> <li>Feed de not\u00edcias(propostas de jogos mostrando quantos se inscreveram) </li> <li>Cria\u00e7\u00e3o de jogos (POST de uma proposta de jogo de alguma modalidade com data, hora e local)</li> <li>Inscri\u00e7\u00e3o em uma proposta de jogo</li> <li>Seguir Atl\u00e9ticas / Grupos informais</li> <li>Fluxo: Usu\u00e1rio de cadastra procura uma proposta de jogo da sua modalidade preferida que se encaixa em sua agenda.  Se n\u00e3o acha, prop\u00f5e postando no feed. Outros usu\u00e1rios se inscrevem e confirmam o local em um sistema de coment\u00e1rios  do post da proposta do jogo.</li> </ul>"},{"location":"atas/ata1/#proxima-reuniao-dia-2209-quarta","title":"Pr\u00f3xima Reuni\u00e3o dia 22/09 quarta","text":"<p>Objetivo: Definir escopo do projeto e do produto, Escrever no word a ser entregue</p>"},{"location":"atas/ata1/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>Fazer o documento entrega dia 04/10/2025 </li> <li>Revisar formata\u00e7\u00e3o ABNT para os arquivos a serem entregues</li> </ul>"},{"location":"atas/ata2/","title":"Defini\u00e7\u00f5es de pap\u00e9is","text":""},{"location":"atas/ata2/#data-17092025","title":"Data: 17/09/2025","text":""},{"location":"atas/ata2/#horario-de-inicio-2000-2100","title":"Hor\u00e1rio de in\u00edcio: 20:00-21:00","text":""},{"location":"atas/ata2/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>Yan Rodrigues</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>\u00c2ngelo Cordova</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> </ul>"},{"location":"atas/ata2/#objetivos","title":"Objetivos","text":"<p>Alinhar sobre os pap\u00e9is no time. Definir o(a) Product Owner (PO) , o(a) QA (Quality Assurance) e o(a)s clientes (Externos e internos) e o Scrum Master como l\u00edder. Al\u00e9m de definir poss\u00edveis tecnologias dispon\u00edveis para uso pelo time.</p>"},{"location":"atas/ata2/#resumo","title":"Resumo","text":""},{"location":"atas/ata2/#o-que-foi-decidido","title":"O que foi decidido:","text":"<p>Abaixo o que realmente significa cada um dos pap\u00e9is:</p>"},{"location":"atas/ata2/#product-owner-po-rodrigo-atila","title":"Product Owner (PO): Rodrigo \u00c0tila","text":"<p>O Product Owner \u00e9 respons\u00e1vel por garantir que o time desenvolva o que realmente gera valor para o produto e para os usu\u00e1rios. Ele atua como a ponte entre os clientes e a equipe de desenvolvimento. Suas principais responsabilidades s\u00e3o:</p> <ul> <li>Definir e priorizar as funcionalidades no backlog do produto.</li> <li>Comunicar a vis\u00e3o do produto e alinhar expectativas com todos os envolvidos.</li> <li>Dizer \u201cn\u00e3o\u201d para funcionalidades que n\u00e3o tragam valor imediato.</li> <li>Garantir que o time compreenda os requisitos de forma clara. O PO precisa ter perfil comunicativo, organizado, estrat\u00e9gico e negociador, pois ser\u00e1 constantemente cobrado por resultados.</li> </ul>"},{"location":"atas/ata2/#qa-quality-assurance-gabriel-mota-angelo-cordova","title":"QA (Quality Assurance): Gabriel Mota &amp; \u00c2ngelo Cordova","text":"<p>O QA \u00e9 o guardi\u00e3o da qualidade. Sua miss\u00e3o \u00e9 assegurar que o software entregue atenda aos padr\u00f5es definidos e funcione corretamente, evitando problemas em produ\u00e7\u00e3o. Suas principais responsabilidades s\u00e3o:</p> <ul> <li>Criar e executar casos de teste (manuais ou automatizados).</li> <li>Identificar e reportar bugs antes que cheguem ao usu\u00e1rio final.</li> <li>Trabalhar junto com desenvolvedores e PO para validar requisitos.</li> <li>Promover a cultura de qualidade no time, ajudando a definir crit\u00e9rios de aceita\u00e7\u00e3o. O QA deve ser detalhista, paciente, anal\u00edtico e persistente, sempre atento aos m\u00ednimos erros e com foco na experi\u00eancia do usu\u00e1rio.</li> </ul>"},{"location":"atas/ata2/#cliente-interno-ou-externo-pedro-inacio-santos-pedro-lucas-barbosa-representante-da-pesadelo","title":"Cliente (Interno ou Externo): Pedro In\u00e1cio Santos &amp; Pedro Lucas Barbosa (Representante da Pesadelo)","text":"<p>O Cliente \u00e9 quem representa as necessidades e expectativas dos usu\u00e1rios finais. Ele pode ser externo (um contratante real) ou interno (um colega do time que assume o papel de usu\u00e1rio). Suas principais responsabilidades s\u00e3o:</p> <ul> <li>Descrever as necessidades e dores reais que o software deve resolver.</li> <li>Validar as entregas e dar feedback cont\u00ednuo.</li> <li>Participar de reuni\u00f5es de alinhamento para esclarecer d\u00favidas.</li> <li>Aprovar ou rejeitar funcionalidades com base no valor agregado. O Cliente deve ser algu\u00e9m emp\u00e1tico, comunicativo e capaz de se colocar no lugar do usu\u00e1rio final, garantindo que o software n\u00e3o perca de vista seu objetivo principal.</li> </ul>"},{"location":"atas/ata2/#scrum-master-gabriel-alves","title":"Scrum Master: Gabriel Alves","text":"<p>O Scrum Master \u00e9 o respons\u00e1vel por facilitar o processo de desenvolvimento dentro do time, garantindo que o framework Scrum seja bem aplicado. Ele n\u00e3o \u00e9 chefe nem gestor, mas sim um l\u00edder servidor, que ajuda o time a se organizar e remover impedimentos. Suas principais responsabilidades s\u00e3o: - Garantir que o time entenda e siga os princ\u00edpios do Scrum. - Facilitar cerim\u00f4nias como Daily Scrum, Sprint Planning, Sprint Review e Retrospective. - Atuar como facilitador, removendo obst\u00e1culos que possam atrapalhar o progresso. - Proteger o time de press\u00f5es externas que prejudiquem o foco. - Estimular a melhoria cont\u00ednua dentro do grupo. O Scrum Master precisa ter perfil colaborativo, paciente, diplom\u00e1tico e proativo, pois deve ajudar o time a trabalhar de forma aut\u00f4noma, sem impor autoridade, mas sim orientando e apoiando.</p>"},{"location":"atas/ata2/#tecnologias","title":"Tecnologias:","text":"<ul> <li>Frontend: React Native + Expo</li> <li>Backend: Node.js + Express + TypeScript</li> <li>Banco de dados: a definir (possivelmente PostgreSQL ou MongoDB)</li> </ul>"},{"location":"atas/ata2/#logo-e-identidade","title":"Logo e identidade","text":"<p>At\u00e9 agora o nome mais aceito: UnB&amp;Fit mas ainda estamos decidindo, se vier uma ideia est\u00e1 em aberto para discuss\u00e3o. Sobre as cores para logo e identidade tamb\u00e9m, sugest\u00f5es s\u00e3o sempre bem vindas.</p>"},{"location":"atas/ata2/#inicio-de-prototipo-na-proxima-sprint","title":"In\u00edcio de prot\u00f3tipo na pr\u00f3xima sprint:","text":""},{"location":"atas/ata2/#sobre-a-questao-do-rodizio-e-especialidades","title":"Sobre a quest\u00e3o do rod\u00edzio e especialidades:","text":"<p>A ideia era conhecer melhor o time, respeito o desejo de cada um sobre sua participa\u00e7\u00e3o no projeto entendo que cada um tem uma carga hor\u00e1ria diferente e sabe o tempo dispon\u00edvel para resolver as tasks.</p> <p>Para aqueles que t\u00eam ou n\u00e3o o conhecimento na stack mas desejam operar somente nela, fica a crit\u00e9rio de vcs. Se especializar na \u00e1rea que ficar e estar disposto a aprender e ensinar. Estes provavelmente estar\u00e3o naturalmente liderando cada task de sua \u00e1rea depois de estudarem/desenvolverem somente sobre aquilo. </p> <p>Para os que querem explorar as vertentes, Entender que ser\u00e1 necess\u00e1rio \"sair um pouco do comodismo\" pois trabalhar com as duas \u00e1reas demanda mais tempo de aprendizado e de dedica\u00e7\u00e3o para a entrega das tasks, por\u00e9m a recompensa final ser\u00e1 o conhecimento pr\u00f3prio por qual \u00e1rea deseja atuar futuramente. </p> <p>\u00c9 necess\u00e1rio a compreens\u00e3o de todos, o frontend n\u00e3o \u00e9 mais importante que o backend e vice e versa. Ent\u00e3o caso precisemos de pessoas em um ou outro, contar com a disponibilidade de todos. </p> <p>Fazendo isso creio que teremos um time equilibrado e que agradar\u00e1 a maioria durante o processo, pois simular\u00e1 um time com pessoas com mais experi\u00eancia que lidam com que tem menos, o que se assemelha bastante com o mercado real.</p>"},{"location":"atas/ata2/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<p>Fazer o documento entrega dia 04/10/2025  Revisar formata\u00e7\u00e3o ABNT para os arquivos a serem entregues</p>"},{"location":"atas/ata3/","title":"Lean inception","text":""},{"location":"atas/ata3/#data-22092025","title":"Data: 22/09/2025","text":""},{"location":"atas/ata3/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00-22:00","text":""},{"location":"atas/ata3/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>Yan Rodrigues</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> </ul>"},{"location":"atas/ata3/#objetivos","title":"Objetivos","text":"<p>Definir o escopo do projeto e do produto atrav\u00e9s da lean inception, preparar para escrever no documento Word a ser entregue ao final desta sprint.</p>"},{"location":"atas/ata3/#resumo","title":"Resumo","text":"<p>Foi realizada uma din\u00e2mica seguindo o modelo de Lean Inception pela ferramenta figma, voltado para a defini\u00e7\u00e3o do MVP do projeto de software. A reuni\u00e3o contemplou: - Constru\u00e7\u00e3o de personas - Jornadas de usu\u00e1rio - Brainstorm de funcionalidades - Revis\u00e3o T\u00e9cnica de Neg\u00f3cio e de UX - Cria\u00e7\u00e3o de um sequenciador</p>"},{"location":"atas/ata3/#figma-da-leaninception","title":"Figma da Leaninception:","text":""},{"location":"atas/ata3/#o-que-foi-decidido","title":"O que foi decidido:","text":"<p>As funcionalidades previstas definidas para o MVP foram: - Login/Cadastro - Perfil de usu\u00e1rio (ser um usu\u00e1rio como \"procurando por time\", posi\u00e7\u00e3o, n\u00edvel, etc) - Cria\u00e7\u00e3o de eventos - Inscri\u00e7\u00e3o em eventos - Feed de eventos - Sistema de curtidas, coment\u00e1rios, compartilhamentos e den\u00fancias - Sistema de notifica\u00e7\u00f5es - Sistema de busca e filtros - cria\u00e7\u00e3o e gerenciamento de grupos e times amadores - verifica\u00e7\u00e3o de atl\u00e9ticas oficiais - adicionar amigos, times e atl\u00e9ticas</p> <p>p\u00f3s-mvp (futuras funcionalidades): - Integra\u00e7\u00e3o com calend\u00e1rio - Sistema de suporte ao usu\u00e1rio  - gamifica\u00e7\u00e3o (badges, rankings, etc para incentivar o uso da plataforma) - Hist\u00f3rico de atividades e estat\u00edsticas pessoais - Bot\u00e3o de \"eu vou\" para eventos - compartilhamento em redes sociais - Visualizar calend\u00e1rio de eventos e partidas - divulgar placares e estat\u00edsticas com formul\u00e1rios p\u00f3s-jogo</p> <p>incrementos (melhorias cont\u00ednuas): - \u201cx amigos seus v\u00e3o a este evento!\u201d em posts - Cat\u00e1logo de produtos da atl\u00e9tica cadastrada (ou link para o cat\u00e1logo) - pr\u00e9via do cheers - Avaliar Time/Evento - Hist\u00f3rico de eventos participados - Declarar torcida \u00e0 alguma equipe da partida</p>"},{"location":"atas/ata3/#observacoes","title":"Observa\u00e7\u00f5es","text":"<p>A reuni\u00e3o contemplou: - Constru\u00e7\u00e3o de personas - Jornadas de usu\u00e1rio - Brainstorm de funcionalidades - Revis\u00e3o T\u00e9cnica de Neg\u00f3cio e de UX - Cria\u00e7\u00e3o de um sequenciador  </p> <p>A din\u00e2mica seguiu o modelo de Lean Inception, voltado para a defini\u00e7\u00e3o do MVP do projeto de software.</p>"},{"location":"atas/ata3/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 29/09 (segunda-feira) Objetivo: In\u00edcio de prot\u00f3tipo de alta fidelidade para o produto e prepara\u00e7\u00e3o de documenta\u00e7\u00e3o no mkdocs.</p>"},{"location":"atas/ata3/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>Iniciar prot\u00f3tipo de alta fidelidade no Figma</li> <li>Definir identidade visual + paleta de cores</li> <li>Produzir o documento de vis\u00e3o a ser entregue no dia 04/10/2025 </li> <li>Revisar formata\u00e7\u00e3o ABNT dos arquivos a serem entregues  </li> </ul>"},{"location":"atas/ata4/","title":"Cont. de Lean inception","text":""},{"location":"atas/ata4/#data-29092025","title":"Data: 29/09/2025","text":""},{"location":"atas/ata4/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00 - 22:00","text":""},{"location":"atas/ata4/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> </ul>"},{"location":"atas/ata4/#objetivos","title":"Objetivos","text":"<p>Continuar a defini\u00e7\u00e3o do escopo e abrang\u00eancia do projeto e do produto atrav\u00e9s da lean inception, discutir sobre mudan\u00e7a de identidade visual e logo.</p>"},{"location":"atas/ata4/#resumo","title":"Resumo","text":"<p>Foi realizada uma din\u00e2mica seguindo o modelo de Lean Inception pela ferramenta figma continuando o que j\u00e1 tinha sido feito, voltado para a defini\u00e7\u00e3o do MVP do projeto de software e os problemas das personas a serem resolvidos. A reuni\u00e3o contemplou:</p> <ul> <li>Brainstorm de ideias</li> <li>Vis\u00e3o do produto</li> <li>O que o produto \u00e9 e o que n\u00e3o \u00e9, o que o produto faz e o que n\u00e3o faz</li> <li>Objetivos do produto</li> <li>Personas</li> <li>Jornadas de usu\u00e1rio</li> </ul>"},{"location":"atas/ata4/#figma-da-leaninception","title":"Figma da Leaninception:","text":""},{"location":"atas/ata4/#o-que-foi-decidido","title":"O que foi decidido:","text":"<p>Personas definidas:</p> <ul> <li> <p>Atleta amador (jogador de futebol, basquete, v\u00f4lei, etc)</p> </li> <li> <p>Organizador de eventos esportivos (atl\u00e9ticas, clubes esportivos, etc)</p> </li> <li> <p>Torcedor (pessoa que gosta de acompanhar eventos esportivos, mas n\u00e3o pratica esportes)</p> </li> </ul> <p>Problemas a serem resolvidos:</p> <ul> <li> <p>Dificuldade em encontrar eventos esportivos locais</p> </li> <li> <p>Falta de uma plataforma centralizada para inscri\u00e7\u00e3o e gerenciamento de eventos</p> </li> <li> <p>Necessidade de conectar atletas amadores e organizadores de eventos</p> </li> <li> <p>Falta de visibilidade para eventos esportivos locais</p> </li> <li> <p>Dificuldade em formar times e grupos para participar de eventos</p> </li> <li> <p>Necessidade de um sistema de notifica\u00e7\u00f5es para atualiza\u00e7\u00f5es de eventos</p> </li> <li> <p>Falta de intera\u00e7\u00e3o social dentro da plataforma (curtidas, coment\u00e1rios, compartilhamentos)</p> </li> <li> <p>Necessidade de incentivos para engajamento dos usu\u00e1rios (gamifica\u00e7\u00e3o)</p> </li> </ul> <p>Vis\u00e3o do produto: A vis\u00e3o do produto \u00e9 criar uma plataforma que conecte alunos atletas amadores, organizadores de eventos e torcedores, facilitando a descoberta, inscri\u00e7\u00e3o e participa\u00e7\u00e3o em eventos esportivos locais. A plataforma deve ser intuitiva, social e gamificada, promovendo a intera\u00e7\u00e3o entre os usu\u00e1rios e incentivando a pr\u00e1tica esportiva.</p>"},{"location":"atas/ata4/#observacoes","title":"Observa\u00e7\u00f5es","text":"<p>A reuni\u00e3o contemplou:</p> <ul> <li>Brainstorm de ideias</li> <li>Vis\u00e3o do produto</li> <li>O que o produto \u00e9 e o que n\u00e3o \u00e9, o que o produto faz e o que n\u00e3o faz</li> <li>Objetivos do produto</li> <li>Constru\u00e7\u00e3o de personas</li> <li>Jornadas de usu\u00e1rio</li> </ul> <p>A din\u00e2mica continuou a seguir o modelo de Lean Inception, voltado para a defini\u00e7\u00e3o do MVP do projeto de software.</p>"},{"location":"atas/ata4/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 06/10 (segunda-feira) Objetivo: In\u00edcio de prot\u00f3tipo de baixa fidelidade para o produto e prepara\u00e7\u00e3o de documenta\u00e7\u00e3o no mkdocs .</p>"},{"location":"atas/ata4/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>Reformular prot\u00f3tipo de baixa fidelidade no Figma com novas cores e logo e discuss\u00e3o do MVP.</li> <li>Traduzir o documento de vis\u00e3o para documenta\u00e7\u00e3o online</li> </ul>"},{"location":"atas/ata5/","title":"Sequenciador do MVP","text":""},{"location":"atas/ata5/#data-06102025","title":"Data: 06/10/2025","text":""},{"location":"atas/ata5/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00 - 22:00","text":""},{"location":"atas/ata5/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> <li>PEDRO LUCAS BARBOSA ( Representante da Pesadelo )</li> <li>Yan Rodrigues</li> </ul>"},{"location":"atas/ata5/#objetivos","title":"Objetivos","text":"<p>Estruturar o sequenciador de funcionalidades da Lean Inception e apresentar a estrutura de montagem do backlog.</p>"},{"location":"atas/ata5/#resumo","title":"Resumo","text":"<p>Foi realizada uma din\u00e2mica seguindo o modelo de Lean Inception pela ferramenta figma continuando o que j\u00e1 tinha sido feito, voltado para a defini\u00e7\u00e3o do MVP do produto. A reuni\u00e3o contemplou:</p> <ul> <li>Discuss\u00e3o sobre o posicionamento do MVP e do incremento </li> <li>Apresenta\u00e7\u00e3o da p\u00e1gina do Figma com o template de backlog separando <code>\u00e9picos</code>, <code>funcionalidades</code>, <code>Est\u00f3rias de usu\u00e1rio</code> e <code>Crit\u00e9rios de Aceita\u00e7\u00e3o</code></li> </ul>"},{"location":"atas/ata5/#figma-da-leaninception","title":"Figma da Leaninception:","text":""},{"location":"atas/ata5/#figma-do-backlog","title":"Figma do Backlog:","text":""},{"location":"atas/ata5/#o-que-foi-decidido","title":"O que foi decidido:","text":"<p>Features a serem implementadas no MVP at\u00e9 o momento:</p> <ol> <li> <p>E $$$ &lt;3&lt;3&lt;3 - Login / cadastro</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - Registro como jogador, torcedor ou atl\u00e9tica</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - cadastrar seu perfil (foto, bio, banner)</p> </li> <li> <p>EE $$$ &lt;3&lt;3&lt;3 - CRUD partidas</p> </li> <li> <p>E $$ &lt;3&lt;3&lt;3 - Bot\u00e3o de \u201cEu vou\u201d (contabilizar pessoas que ir\u00e3o ao evento)</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - CRUD de posts tipo Instagram/ Curtir/Comentar/denunciar postagens</p> </li> <li> <p>E $ &lt;3&lt;3&lt;3 - Remover conta</p> </li> <li> <p>EE $$$ &lt;3&lt;3&lt;3 - Criar/encontrar times/grupos \u201cinformais/amadores\u201d</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - Seguir adicionar perfis/ atl\u00e9ticas</p> </li> <li> <p>EE $$$ &lt;3&lt;3&lt;3 - Pedir para entrar em um grupo</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - Cadastro de pessoas em seu pr\u00f3prio time</p> </li> <li> <p>E $$$ &lt;3&lt;3 - Avalia\u00e7\u00e3o do nosso pr\u00f3prio app</p> </li> <li> <p>EE $$$ &lt;3&lt;3&lt;3 - Sistema de notifica\u00e7\u00f5es para os eventos</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - Divulgar placares das partidas</p> </li> </ol> <p>Features a serem implementadas no incremento:</p> <ol> <li> <p>EEE $$$ &lt;3&lt;3&lt;3 - Obter status para quem mais participa de eventos como forma de incentivo Ins\u00edgnias de eventos participados e de torcedor. Ex: 5 eventos participados ganha um badge, ganha um badge da sua atl\u00e9tica ao declarar torcida.</p> </li> <li> <p>EE $$ &lt;3&lt;3&lt;3 - \u201cx pessoas que voc\u00ea segue seus v\u00e3o a este evento!\u201d em posts</p> </li> <li> <p>EEE $$$ &lt;3&lt;3&lt;3 - Visualizar calend\u00e1rio de pr\u00f3ximos jogos</p> </li> <li> <p>EE $ &lt;3&lt;3 - Hist\u00f3rico de eventos participados</p> </li> <li> <p>EEE $ &lt;3&lt;3&lt;3 - Sistema de filtragem de partidas (data, modalidade, esporte, n\u00edvel, posi\u00e7\u00e3o)</p> </li> <li> <p>E $$ &lt;3&lt;3 - Ser um usu\u00e1rio como \u201cprocurando por time\u201d que outros podem chamar Open to work linkedin</p> </li> </ol> <p>A din\u00e2mica continuou a seguir o modelo de Lean Inception, voltado para a defini\u00e7\u00e3o do MVP do Aton.</p>"},{"location":"atas/ata5/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 13/10 (segunda-feira) Objetivo: Levantamento de requisitos, constru\u00e7\u00e3o do backlog do produto e prepara\u00e7\u00e3o de documenta\u00e7\u00e3o no mkdocs.</p>"},{"location":"atas/ata5/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>In\u00edcio de documenta\u00e7\u00e3o de arquitetura do sistema no mkdocs</li> <li>In\u00edcio de prot\u00f3tipo de alta fidelidade no Figma para as primeiras telas do produto</li> <li>Incluir altera\u00e7\u00f5es e atualiza\u00e7\u00f5es do backlog no mkdocs </li> </ul>"},{"location":"atas/ata6/","title":"Inicia\u00e7\u00e3o do projeto","text":""},{"location":"atas/ata6/#data-13102025","title":"Data: 13/10/2025","text":""},{"location":"atas/ata6/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00 - 22:00","text":""},{"location":"atas/ata6/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> <li>Yan Rodrigues</li> </ul>"},{"location":"atas/ata6/#objetivos","title":"Objetivos","text":"<p>Iniciar a primeira sprint de desenvolvimento separando as responsabilidades pelos componentes do sistema para cada membro da equipe.</p>"},{"location":"atas/ata6/#resumo","title":"Resumo","text":"<p>A reuni\u00e3o contemplou a divis\u00e3o de tarefas para a primeira sprint com as primeiras funcionalidades do sequanciador.</p> <ul> <li>Divis\u00e3o das duplas para o Pair programming seguindo as pr\u00e1ticas do ScrumXP</li> </ul>"},{"location":"atas/ata6/#dupla-1-devops-criacao-de-issues-workflow-de-testes-github-actions-diagramacao-e-modelagem-de-dados","title":"Dupla 1 (<code>DevOps</code>): Cria\u00e7\u00e3o de issues, workflow de testes github actions, diagrama\u00e7\u00e3o e modelagem de dados","text":"<ul> <li>Gabriel Alves</li> <li>Yan Santos </li> </ul>"},{"location":"atas/ata6/#dupla-2-frontend-desenvolvimento-do-frontend-da-tela-de-cadastro-do-app","title":"Dupla 2 (<code>Frontend</code>): Desenvolvimento do frontend da tela de cadastro do app","text":"<ul> <li>Matheus</li> <li>Rodrigo </li> </ul>"},{"location":"atas/ata6/#dupla-3-backend-desenvolvimento-da-api-para-o-cadastro-no-app","title":"Dupla 3 (<code>Backend</code>): Desenvolvimento da API para o cadastro no app","text":"<ul> <li>Gabriel Mota</li> <li>Guilherme</li> </ul>"},{"location":"atas/ata6/#dupla-4-frontend-desenvolvimento-do-frontend-da-tela-de-login-do-app","title":"Dupla 4 (<code>Frontend</code>): Desenvolvimento do frontend da tela de login do app","text":"<ul> <li>Samuel</li> <li>\u00c2ngelo</li> </ul>"},{"location":"atas/ata6/#dupla-5-backend-desenvolvimento-da-api-para-login","title":"Dupla 5 (<code>Backend</code>): Desenvolvimento da API para login.","text":"<ul> <li>Pedro </li> <li>Giovana </li> </ul>"},{"location":"atas/ata6/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 20/10 (segunda-feira) Objetivo: Sprint Review, Sprint planning e </p>"},{"location":"atas/ata6/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>Proseguimento para as pr\u00f3ximas funcionalidades do backlog.</li> </ul>"},{"location":"atas/ata7/","title":"Sprint 2","text":""},{"location":"atas/ata7/#data-20102025","title":"Data: 20/10/2025","text":""},{"location":"atas/ata7/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00 - 22:00","text":""},{"location":"atas/ata7/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Guilherme Mendes</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> <li>Yan Rodrigues</li> </ul>"},{"location":"atas/ata7/#objetivos","title":"Objetivos","text":"<p>Sprint Review e Sprint Planning</p>"},{"location":"atas/ata7/#resumo","title":"Resumo","text":"<p>Na reuni\u00e3o de hoje, realizamos a Sprint Review da sprint atual, onde cada dupla apresentou o progresso das funcionalidades atribu\u00eddas. Discutimos os desafios enfrentados e as solu\u00e7\u00f5es implementadas e o andamento das tarefas. Ap\u00f3s a revis\u00e3o, planejamos as pr\u00f3ximas etapas do projeto, definindo novas tarefas e objetivos para a pr\u00f3xima sprint mesmo com pend\u00eancias da sprint anterior.</p>"},{"location":"atas/ata7/#dupla-1-authbackend_refactor-criacao-de-issues-diagramacao-e-modelagem-de-dados-integracao-de-autenticacao-frontend-e-backend-refatoracao-do-backend-com-separacao-de-responsabilidades","title":"Dupla 1 (<code>Auth+Backend_Refactor</code>): Cria\u00e7\u00e3o de + issues, diagrama\u00e7\u00e3o e modelagem de dados integra\u00e7\u00e3o de autentica\u00e7\u00e3o frontend e backend, Refatora\u00e7\u00e3o do backend com separa\u00e7\u00e3o de responsabilidades","text":"<ul> <li>Gabriel Alves</li> <li>Yan Santos </li> </ul>"},{"location":"atas/ata7/#dupla-2-frontend-desenvolvimento-da-requisicao-http-do-frontend-para-o-backend-e-tela-de-selecao-de-perfil-com-requisicao-put-para-atualizacao-do-perfil-do-usuario","title":"Dupla 2 (<code>Frontend</code>): Desenvolvimento da requisi\u00e7\u00e3o http do frontend para o backend e tela de sele\u00e7\u00e3o de perfil com requisi\u00e7\u00e3o PUT para atualiza\u00e7\u00e3o do perfil do usu\u00e1rio.","text":"<ul> <li>Matheus</li> <li>Rodrigo</li> </ul>"},{"location":"atas/ata7/#dupla-3-backend-desenvolvimento-da-api-para-o-cadastro-no-app-backend-feed-de-posts-de-quem-publica","title":"Dupla 3 (<code>Backend</code>): Desenvolvimento da API para o cadastro no app, backend feed de posts de quem publica.","text":"<ul> <li>Gabriel Mota</li> <li>Guilherme</li> </ul>"},{"location":"atas/ata7/#dupla-4-frontend-desenvolvimento-do-frontend-da-tela-de-login-do-app-e-integracao-com-autenticacao-jwt","title":"Dupla 4 (<code>Frontend</code>): Desenvolvimento do frontend da tela de login do app e integra\u00e7\u00e3o com autentica\u00e7\u00e3o JWT.","text":"<ul> <li>Samuel</li> <li>\u00c2ngelo</li> </ul>"},{"location":"atas/ata7/#dupla-5-backend-desenvolvimento-da-api-para-login-com-jwt-backend-feed-de-posts-de-quem-interage","title":"Dupla 5 (<code>Backend</code>): Desenvolvimento da API para login com JWT, backend feed de posts de quem interage.","text":"<ul> <li>Pedro </li> <li>Giovana </li> </ul>"},{"location":"atas/ata7/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 27/10 (segunda-feira) Objetivo: Sprint Review, Sprint planning e </p>"},{"location":"atas/ata7/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>T\u00e9rmino de funcionalidades pendentes e proseguimento para as pr\u00f3ximas funcionalidades do backlog.</li> </ul>"},{"location":"atas/ata8/","title":"Ata8","text":""},{"location":"atas/ata8/#data-27102025","title":"Data: 27/10/2025","text":""},{"location":"atas/ata8/#horario-de-inicio-2000-2200","title":"Hor\u00e1rio de in\u00edcio: 20:00 - 22:00","text":""},{"location":"atas/ata8/#participantes","title":"Participantes:","text":"<ul> <li>Gabriel Alves</li> <li>Rodrigo \u00c0tila</li> <li>\u00c2ngelo Cordova</li> <li>Gabriel Mota</li> <li>Matheus Pinheiro</li> <li>Giovana Martins de Brito</li> <li>Samuel Leite</li> <li>Pedro In\u00e1cio Santos</li> <li>Yan Rodrigues</li> </ul>"},{"location":"atas/ata8/#objetivos","title":"Objetivos","text":"<p>Sprint Review e Sprint Planning</p>"},{"location":"atas/ata8/#resumo","title":"Resumo","text":"<p>Na reuni\u00e3o de hoje, realizamos a Sprint Review da sprint atual, onde cada dupla apresentou o progresso das funcionalidades atribu\u00eddas. Discutimos os desafios enfrentados e as solu\u00e7\u00f5es implementadas e o andamento das tarefas. Ap\u00f3s a revis\u00e3o, planejamos as pr\u00f3ximas etapas do projeto, definindo novas tarefas e objetivos para a pr\u00f3xima sprint mesmo com pend\u00eancias da sprint anterior.</p>"},{"location":"atas/ata8/#dupla-1-auth-diagramacao-e-modelagem-de-dados-integracao-de-autenticacao-frontend-e-backend","title":"Dupla 1 (<code>Auth+</code>): Diagrama\u00e7\u00e3o e modelagem de dados integra\u00e7\u00e3o de autentica\u00e7\u00e3o frontend e backend, .","text":"<ul> <li>Gabriel Alves</li> <li>Yan Santos </li> </ul>"},{"location":"atas/ata8/#dupla-2-frontend-desenvolvimento-da-requisicao-http-do-frontend-para-o-backend-e-tela-de-selecao-de-perfil-com-requisicao-putpatch-para-atualizacao-do-perfil-do-usuario","title":"Dupla 2 (<code>Frontend</code>): Desenvolvimento da requisi\u00e7\u00e3o http do frontend para o backend e tela de sele\u00e7\u00e3o de perfil com requisi\u00e7\u00e3o PUT/PATCH para atualiza\u00e7\u00e3o do perfil do usu\u00e1rio.","text":"<ul> <li>Matheus</li> <li>Rodrigo</li> </ul>"},{"location":"atas/ata8/#dupla-3-backend-backend-feed-de-posts-de-quem-publica","title":"Dupla 3 (<code>Backend</code>): backend feed de posts de quem publica,","text":"<ul> <li>Gabriel Mota</li> <li>Guilherme</li> </ul>"},{"location":"atas/ata8/#dupla-4-frontend-desenvolvimento-do-frontend-da-tela-de-login-do-app-e-integracao-com-autenticacao-jwt","title":"Dupla 4 (<code>Frontend</code>): Desenvolvimento do frontend da tela de login do app e integra\u00e7\u00e3o com autentica\u00e7\u00e3o JWT.","text":"<ul> <li>Samuel</li> <li>\u00c2ngelo</li> </ul>"},{"location":"atas/ata8/#dupla-5-backend-desenvolvimento-da-api-para-login-com-jwt-backend-feed-de-posts-de-quem-interage","title":"Dupla 5 (<code>Backend</code>): Desenvolvimento da API para login com JWT, backend feed de posts de quem interage.","text":"<ul> <li>Pedro </li> <li>Giovana </li> </ul>"},{"location":"atas/ata8/#proxima-reuniao","title":"Pr\u00f3xima Reuni\u00e3o","text":"<p>Data: 03/11 (segunda-feira) Objetivo: Sprint Review, Sprint planning e </p>"},{"location":"atas/ata8/#proximas-etapas","title":"<code>Pr\u00f3ximas etapas</code>:","text":"<ul> <li>T\u00e9rmino de funcionalidades pendentes e proseguimento para as pr\u00f3ximas funcionalidades do backlog.</li> </ul>"},{"location":"visao/escopo_projeto/","title":"Escopo do Projeto","text":""},{"location":"visao/escopo_projeto/#escopo-de-projeto","title":"Escopo de projeto","text":""},{"location":"visao/escopo_projeto/#backlog-do-produto","title":"Backlog do produto","text":"<p>O Backlog do Produto (Product Backlog) \u00e9 uma lista ordenada e emergente de tudo o que \u00e9 necess\u00e1rio para melhorar o produto.</p> <p>Um produto \u00e9 um ve\u00edculo para entregar valor. Ele possui um limite claro, partes interessadas conhecidas e usu\u00e1rios ou clientes bem definidos. Um produto pode ser um servi\u00e7o, um produto f\u00edsico ou algo mais abstrato. Itens do product backlog que podem ser conclu\u00eddos em uma sprint (O cora\u00e7\u00e3o do Scrum, onde as ideias s\u00e3o transformadas em valor) s\u00e3o considerados prontos para sele\u00e7\u00e3o no evento de planejamento da sprint. Eles geralmente adquirem esse grau de transpar\u00eancia ap\u00f3s as atividades de refinamento. O ato de decompor e definir com mais detalhes os itens do Product Backlog em itens menores e mais precisos \u00e9 conhecido como refinamento do product backlog. Essa \u00e9 uma atividade cont\u00ednua para adicionar detalhes, como descri\u00e7\u00e3o, ordem e tamanho.</p> <p>O Product Goal descreve um estado futuro do produto. Ele est\u00e1 no Product Backlog. O restante do Product Backlog emerge para definir \"o qu\u00ea\" ir\u00e1 cumprir o Product Goal. Product Goal \u00e9 o objetivo de longo prazo, ele deve ser cumprido (ou abandonado) antes de assumir um pr\u00f3ximo.</p> <p>Os Desenvolvedores que realizar\u00e3o o trabalho s\u00e3o respons\u00e1veis pelo dimensionamento (estimativa de tamanho). O Product Owner (Dono do Produto) pode influenciar os Developers ajudando-os a entender e selecionar as compensa\u00e7\u00f5es</p> <p>Um backlog do produto bem estruturado e atualizado permite um alinhamento da equipe \u00e0s metas do produto; visibilidade ao progresso e \u00e0s pr\u00f3ximas entregas; facilidade de adapta\u00e7\u00e3o a mudan\u00e7as de prioridade e a garantia de que o time esteja sempre focado em entregar valor ao usu\u00e1rio final.</p>"},{"location":"visao/escopo_projeto/#figma-do-backlog","title":"Figma do Backlog:","text":"<p>O Backlog do Produto \u00e9 o resultado direto das decis\u00f5es tomadas durante a Lean Inception do projeto Vai Pela Sombra. Ele organiza de forma hier\u00e1rquica e visual os \u00e9picos, funcionalidades, hist\u00f3rias de usu\u00e1rio e crit\u00e9rios de aceita\u00e7\u00e3o que guiar\u00e3o o desenvolvimento incremental da aplica\u00e7\u00e3o. Essa estrutura permite priorizar entregas, facilitar a comunica\u00e7\u00e3o entre os membros da equipe e garantir que o valor entregue ao usu\u00e1rio esteja sempre alinhado com os objetivos estrat\u00e9gicos do produto.</p> <p>A decomposi\u00e7\u00e3o foi feita em cinco grandes \u00e9picos, que representam blocos centrais de valor: cadastro de usu\u00e1rios, itiner\u00e1rios, promo\u00e7\u00f5es, recomenda\u00e7\u00f5es e avalia\u00e7\u00e3o da experi\u00eancia. Cada \u00e9pico foi desdobrado em funcionalidades espec\u00edficas, que por sua vez foram traduzidas em hist\u00f3rias de usu\u00e1rio com crit\u00e9rios claros de aceita\u00e7\u00e3o \u2014 respeitando os princ\u00edpios de clareza, valor e testabilidade. A seguir, o backlog est\u00e1 organizado em tabelas em Markdown, separadas por \u00e9pico, para facilitar a leitura e o acompanhamento.</p>"},{"location":"visao/escopo_projeto/#epico-1-infraestrtura-tecnica-inicial","title":"\u00c9pico 1: Infraestrtura T\u00e9cnica Inicial","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o Cria\u00e7\u00e3o de issues/\u00e9picos no zenhub para organiza\u00e7\u00e3o do time e divis\u00e3o das sprints -- -- Cria\u00e7\u00e3o da estrutura Cliente - Servidor no monorepo -- -- Cria\u00e7\u00e3o de estrutura base da API e do Expo -- -- Cria\u00e7\u00e3o/modelagem de banco de dados relacional (talvez noSQL) -- -- Cria\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade das telas dos primeiros requisitos -- --"},{"location":"visao/escopo_projeto/#epico-2-autenticacao-e-gerenciamento-de-conta","title":"\u00c9pico 2: Autentica\u00e7\u00e3o e gerenciamento de conta","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o Autentica\u00e7\u00e3o e Cria\u00e7\u00e3o de Conta  abrange todo o processo de entrada e registro na plataforma Aton. Ela garante que os usu\u00e1rios possam criar uma conta de maneira simples e segura, escolher seu tipo de intera\u00e7\u00e3o principal com o aplicativo (jogador, torcedor ou atl\u00e9tica) e acessar a plataforma atrav\u00e9s de um sistema de login. US1 F1 EP2: Como um aluno da UnB interessado em eventos esportivos, eu quero poder me cadastrar no aplicativo Aton usando meu e-mail e uma senha, para que eu possa ter acesso \u00e0 plataforma e suas funcionalidades. - CA1: O campo de e-mail deve validar o formato (ex: usuario@exemplo.com).  - CA2: O campo de senha deve exigir um m\u00ednimo de 8 caracteres.   - CA3: Deve haver uma confirma\u00e7\u00e3o de senha para evitar erros de digita\u00e7\u00e3o.   - CA4: O aplicativo deve verificar se o e-mail j\u00e1 est\u00e1 em uso e informar o usu\u00e1rio.  - CA5: Ap\u00f3s o preenchimento correto dos dados, o usu\u00e1rio deve ser direcionado para a pr\u00f3xima etapa (sele\u00e7\u00e3o de tipo de perfil).  - CA6: O sistema deve garantir a seguran\u00e7a da senha (armazenamento criptografado). US2 F1 EP2: Como um novo usu\u00e1rio rec\u00e9m-cadastrado, eu quero poder escolher meu tipo de perfil principal (Jogador, Torcedor ou Atl\u00e9tica), para que o aplicativo personalize minha experi\u00eancia inicial e as funcionalidades dispon\u00edveis. -CA1: A tela de sele\u00e7\u00e3o deve apresentar claramente as tr\u00eas op\u00e7\u00f5es: \"Jogador\", \"Torcedor\" e \"Atl\u00e9tica\".  - CA2: Deve haver uma breve descri\u00e7\u00e3o para cada tipo de perfil, explicando seu prop\u00f3sito no aplicativo.  -CA3: A sele\u00e7\u00e3o de um tipo de perfil deve ser obrigat\u00f3ria para continuar.  - CA4: O sistema deve adaptar o fluxo de onboarding com base na escolha, se \"Atl\u00e9tica\", pode pedir informa\u00e7\u00f5es adicionais da organiza\u00e7\u00e3o e verifica\u00e7\u00e3o atrav\u00e9s de um formul\u00e1rio enviando documenta\u00e7\u00e3o comprobat\u00f3ria para o time Aton conceder um selo de verificado e permitir a cria\u00e7\u00e3o do grupo, se \u201cJogador\u201d, Levar para uma p\u00e1gina de entrar ou criar um time, se \u201ctorcedor\u201d, levar direto para o campo de pesquisa de perfis de atl\u00e9tica para seguir. US3 F1 EP2: Como um usu\u00e1rio j\u00e1 cadastrado, eu quero poder fazer login na minha conta usando meu e-mail e senha, para que eu possa acessar meu perfil e as informa\u00e7\u00f5es da plataforma de forma segura. - CA1: A tela de login deve ter campos para e-mail e senha.  - CA2:  O sistema deve validar as credenciais e conceder acesso se estiverem corretas.  - CA3: Em caso de credenciais incorretas, uma mensagem de erro clara (\"E-mail ou senha inv\u00e1lidos\") deve ser exibida.  - CA4: Deve haver um link ou bot\u00e3o para \"Esqueci minha senha\" para iniciar o processo de recupera\u00e7\u00e3o. Perfil de Usu\u00e1rio Personaliz\u00e1vel e Informativo  Uma vez autenticado, o usu\u00e1rio precisa de um espa\u00e7o para expressar sua identidade. Esta feature permite que todos os tipos de perfis (jogadores, torcedores e atl\u00e9ticas) configurem e personalizem suas informa\u00e7\u00f5es, como foto, nome de usu\u00e1rio, biografia e um banner, tornando o perfil \u00fanico e informativo para outros membros da comunidade. US4 F2 EP2: Como um jogador ou torcedor, eu quero poder adicionar e editar informa\u00e7\u00f5es b\u00e1sicas no meu perfil, como uma foto, nome de usu\u00e1rio, e uma pequena biografia, para que outros usu\u00e1rios possam me identificar e conhecer meus interesses esportivos. -CA1: O usu\u00e1rio deve poder fazer o upload de uma foto de perfil a partir da galeria do celular.  - CA2: A foto de perfil deve ser redimensionada e exibida em um formato circular padr\u00e3o no aplicativo.  - CA3: O usu\u00e1rio deve poder definir um nome de usu\u00e1rio \u00fanico (o sistema deve verificar a disponibilidade).  - CA4: O campo de biografia deve ter um limite de caracteres (ex: 150 caracteres) para manter a concis\u00e3o.  - CA5: O usu\u00e1rio deve poder salvar as altera\u00e7\u00f5es, e elas devem ser refletidas imediatamente em seu perfil. US5 F2 EP2: Como um usu\u00e1rio (jogador, torcedor ou atl\u00e9tica), eu quero poder adicionar uma imagem de banner (foto de capa) ao meu perfil, para que eu possa personalizar ainda mais minha p\u00e1gina e expressar minha identidade ou a da minha equipe/atl\u00e9tica de forma mais visual. CA1: Deve haver uma \u00e1rea designada no topo do perfil para a imagem do banner.  - CA2: O usu\u00e1rio deve poder fazer o upload de uma imagem da galeria do celular.  - CA3: A imagem deve ser ajustada para as dimens\u00f5es corretas do banner, permitindo um reposicionamento b\u00e1sico.  - CA4: As altera\u00e7\u00f5es no banner devem ser salvas e exibidas publicamente no perfil do usu\u00e1rio.  - CA5: O perfil deve ter uma apar\u00eancia visualmente agrad\u00e1vel tanto com quanto sem a imagem de banner. Remover Conta US6 F3 EP2: Como um usu\u00e1rio eu quero ser capaz de deletar minha pr\u00f3pria conta, para que eu n\u00e3o seja mais encontrado dentro do app -CA1:  Dentro da \u00e1rea de configura\u00e7\u00f5es o usu\u00e1rio dever\u00e1 ver um bot\u00e3o escrito \u201cDeletar minha conta\u201d  -CA2: Caso o usu\u00e1rio clique em deletar, ele dever\u00e1 receber um aviso de confirma\u00e7\u00e3o para a exclus\u00e3o de conta.   -CA3: No aviso de confirma\u00e7\u00e3o, o usu\u00e1rio, dever\u00e1 confirmar a senha de sua conta.  - CA4: Com o processo de exclus\u00e3o bem sucedido, TODOS os dados do usu\u00e1rio dever\u00e3o ser apagados do banco de dados.  - CA5: Com o processo de exclus\u00e3o bem sucedido, o usu\u00e1rio n\u00e3o ser\u00e1 capaz de recuperar os dados de sua conta, uma vez que j\u00e1 exclu\u00edda."},{"location":"visao/escopo_projeto/#epico-3-feed-de-eventospartidas","title":"\u00c9pico 3: Feed de Eventos/Partidas","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o Crud de Post, tipo Instagram(comentar, denunciar, curtir postagens). US7 F4 EP4: Eu como organizador de um evento,  quero poder criar/editar/excluir postagens, para que eu possa compartilhar informa\u00e7\u00f5es ou momentos do evento com os usu\u00e1rios. - CA1: Organizadores devem poder criar postagens com (talvez foto e v\u00eddeo) texto.  - CA2: O organizador criador do post deve poder excluir qualquer coment\u00e1rio em seu post.   - CA3: O usu\u00e1rio que postou deve poder editar os campos da postagem.  - CA4: Apenas o organizador criador do post deve ter permiss\u00e3o para excluir a pr\u00f3pria postagem, mediante confirma\u00e7\u00e3o da a\u00e7\u00e3o.  - CA5: Ap\u00f3s criar, editar ou excluir uma postagem, o sistema deve exibir uma notifica\u00e7\u00e3o ou mensagem de confirma\u00e7\u00e3o de sucesso ou erro. US8 F4 EP3: Eu, como usu\u00e1rio logado, quero curtir, comentar, compartilhar e interagir com postagens no feed de eventos e partidas, para expressar minhas opini\u00f5es, engajar com outros usu\u00e1rios e acompanhar o conte\u00fado de que gosto. - CA1: O campo de coment\u00e1rios deve ser v\u00edsivel para todos os usu\u00e1rios logados.  -CA2: O usu\u00e1rio deve conseguir curtir e descurtir postagens, com a contagem de curtidas sendo atualizada em tempo real.  - CA3:  O usu\u00e1rio deve conseguir adicionar coment\u00e1rios e visualizar os coment\u00e1rios feitos por outros usu\u00e1rios em ordem cronol\u00f3gica.  - CA4: O usu\u00e1rio deve conseguir compartilhar postagens, podendo escolher entre copiar o link.  - CA5: O usu\u00e1rio deve poder denunciar postagens e coment\u00e1rios que infrinjam as regras da plataforma, informando o motivo da den\u00fancia. Contabilizar Presen\u00e7a com Bot\u00e3o \"Eu vou\" US9 F5 EP3: Como um usu\u00e1rio que quer ir ao evento, eu quero poder confirmar minha presen\u00e7a em eventos clicando em um bot\u00e3o \u201cEU VOU\u201d, para que os organizadores tenham uma contagem de pessoas que v\u00e3o. -CA1: Dado que estou visualizando os detalhes de um evento, devo ver um bot\u00e3o claro com a op\u00e7\u00e3o \u201cEU VOU\u201d.  -CA2: Ao clicar no bot\u00e3o, minha presen\u00e7a deve ser registrada e o bot\u00e3o deve mudar de estado para indicar minha confirma\u00e7\u00e3o (ex: \"Presen\u00e7a Confirmada\") e depois redireciona para a descri\u00e7\u00e3o do evento.  -CA3: Devo poder cancelar minha confirma\u00e7\u00e3o de presen\u00e7a clicando novamente no bot\u00e3o ou em uma op\u00e7\u00e3o \u201cN\u00e3o vou\u201d dentro da descri\u00e7\u00e3o do evento.  -CA4: A contagem de pessoas que confirmaram presen\u00e7a deve ser vis\u00edvel na p\u00e1gina do evento. CRUD partidas US10 F6 EP3: Eu como um organizador, quero poder criar, atualizar, visualizar e deletar partidas para que pessoas possam demonstrar interesse e se inscreverem. - CA1:  Organizadores devem poder criar uma nova partida definindo informa\u00e7\u00f5es necess\u00e1rias como data, hora, local, esporte e times.  -CA2: As  informa\u00e7\u00f5es de partidas agendadas devem poder ser vistos pelos usu\u00e1rios.  -CA3:  Organizadores devem poder atualizar as informa\u00e7\u00f5es de uma partida j\u00e1 criada.  -CA4: Organizadores devem poder deletar/remover partida.  -CA5: Ao criar uma partida o usu\u00e1rio deve poder indicar quantas pessoas estar\u00e3o em cada time.  -CA6: Ao final de cada partida o dono do post tem at\u00e9 2 horas para cadastrar a pontua\u00e7\u00e3o Placares de partidas US11 F7 EP3: eu como um jogador ou torcedor,  quero saber o resultados de jogos passados que tenho interesse para que eu possa ter uma m\u00e9trica do desempenho do time/jogador em quest\u00e3o. CA1: O usu\u00e1rio deve poder entrar na tela de partidas e procurar a partida de interesse, e ao clicar nela ver as informa\u00e7\u00f5es como placar, equipes e jogadores que competiram. CA2: O placar deve estar dispon\u00edvel em at\u00e9 2 horas ap\u00f3s o jogo. CA3:  O placar deve ser simples de f\u00e1cil visualiza\u00e7\u00e3o e entendimento CA4: deve haver a possibilidade de clicar no nome ou foto da equipe e ir para sua p\u00e1gina (BIO)."},{"location":"visao/escopo_projeto/#epico-4-atleticas-times-amadores","title":"\u00c9pico 4: (Atl\u00e9ticas / Times Amadores )","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o Criar grupos ( Times amadores / Atl\u00e9ticas ) US12 F8 EP4: Como um representante de atl\u00e9tica, eu quero poder criar um grupo/perfil de atl\u00e9tica verificado para que eu possa postar eventos treinos e campeonatos da minha atl\u00e9tica. CA1: O Usu\u00e1rio deve poder criar um grupo em uma tela onde pe\u00e7a as informa\u00e7\u00f5es para aquele grupo CA2: Na tela de cria\u00e7\u00e3o de um grupo o sistema deve mostrar um checkbox de \u201cverifica\u00e7\u00e3o de atl\u00e9tica\u201d onde o usu\u00e1rio possa requisitar por meio de um formul\u00e1rio externo (google forms) a verifica\u00e7\u00e3o por meio de documenta\u00e7\u00e3o comprobat\u00f3ria a ser analisada e verificada pelo time Aton. CA3: Um grupo deve ter: nome;Descri\u00e7\u00e3o;Esportes praticados;Admins;Demais usu\u00e1rios. US13 F8 EP4: Como um estudante jogador, eu quero poder criar grupos (times amadores) para que eu possa criar partidas casuais onde outros usu\u00e1rios possam se inscrever. CA1: O Usu\u00e1rio deve poder criar um grupo em uma tela onde pe\u00e7a as informa\u00e7\u00f5es para aquele grupo.CA2: O usu\u00e1rio deve preencher uma tela que pede as informa\u00e7\u00f5es sobre o grupo a ser criado.CA3: Um grupo deve ter: nome; Descri\u00e7\u00e3o; Esportes praticados; Admins; Demais usu\u00e1rios.CA4: ao final da cria\u00e7\u00e3o do grupo o usu\u00e1rio deve poder cadastrar pessoas em seu grupo rec\u00e9m criadoCA5: O usu\u00e1rio criador deve ter no grupo o status de \u201cadmin\u201d (um admin pode adicionar e remover pessoas de seu grupo) Encontrar grupos ( Times amadores ) para ingressar US14 F9 EP4: Como uma atl\u00e9tica, eu quero adicionar e gerenciar atletas oficiais no elenco para que eu possa ter um controle centralizado dos membros. CA1: A atl\u00e9tica deve poder adicionar novos atletas ao elenco, informando dados b\u00e1sicos como nome completo, posi\u00e7\u00e3o, matr\u00edcula, e contato.CA2: A atl\u00e9tica deve poder editar as informa\u00e7\u00f5es dos atletas j\u00e1 cadastrados.CA3: A atl\u00e9tica deve poder remover atletas do elenco oficial, com confirma\u00e7\u00e3o antes da exclus\u00e3o.CA4: Apenas usu\u00e1rios com perfil de administrador da atl\u00e9tica devem ter permiss\u00e3o para adicionar, editar ou excluir atletas. Seguir grupos US15 F10 EP4: Como um usu\u00e1rio eu quero poder seguir os grupos que eu quiser, para que eu consiga acompanhar as novidades mais recentes. CA1: Na aba de pesquisar, o usu\u00e1rio dever\u00e1 colocar o nome do grupo que ele pretende seguir.CA2: Ser\u00e3o exibidos em formato de lista, todos os perfis com o nome \u201csimilar\u201d ao da busca feita. CA3: Ao selecionar o grupo, o usu\u00e1rio ser\u00e1 redirecionado a p\u00e1gina do perfil.CA4: Na aba do perfil dever\u00e1 conter um bot\u00e3o escrito \u201cSeguir\u201d.CA5: Ao clicar o usu\u00e1rio passar\u00e1 a seguir o grupo e o nome do bot\u00e3o dever\u00e1 ser alterado para \u201cSeguindo\u201d. US16 F10 EP4: Como um usu\u00e1rio eu quero parar de seguir grupos, para que eu deixe de receber suas novas atualiza\u00e7\u00f5es (postagens) no meu feed. CA1: O usu\u00e1rio, seja pesquisando na aba \u201cPesquisar\u201d ou indo nos perfis que ele segue, ser\u00e1 redirecionado ao perfil do grupo.CA2: No perfil do grupo, o usu\u00e1rio estar\u00e1 como \u201cSeguindo\u201d, ao clicar no bot\u00e3o, o usu\u00e1rio receber\u00e1 uma mensagem confirmando a a\u00e7\u00e3o, \u201cDeseja realmente parar de seguir @perfil...\u201d . CA3: Ao confirmar a a\u00e7\u00e3o, o bot\u00e3o dever\u00e1 ser alterado para \u201cSeguir\u201d, e o grupo dever\u00e1 ser removido da lista de \u201cSeguindo\u201d do usu\u00e1rio. Solicitar a entrada em um grupo US17 F11 EP4: Como um usu\u00e1rio, eu quero poder participar de grupos que est\u00e3o disponiveis no app para que eu possa interagir mais com a comunidade. CA1: O usus\u00e1rio deve visualizar um bot\u00e3o como \u201cPedir para entrar\u201d, solicitando sua entrada ao grupo. CA2: O usu\u00e1rio s\u00f3 pode enviar pedidos para entrar caso o grupo ainda tenha vagas sobrando. CA3: O usu\u00e1rio deve receber uma mensagem ap\u00f3s sua solicita\u00e7\u00e3o, como: \u201cSolicita\u00e7\u00e3o enviada com sucesso\u201d ou \u201cErro ao enviar solicita\u00e7\u00e3o: [ERRO]\u201d. CA4: O usu\u00e1rio deve conseguir ver o status de sua solicita\u00e7\u00e3o. CA5: Usu\u00e1rio deve ser capaz de cancelar sua solicita\u00e7\u00e3o caso necess\u00e1rio CA6: O usu\u00e1rio deve ser capaz de visualizar quantas pessoas existem no grupo que deseja entrar. Cadastro de pessoas em seu pr\u00f3prio time US18 F12 EP4: Como uma atl\u00e9tica, eu quero adicionar e gerenciar atletas oficiais no elenco para que eu possa ter um controle centralizado dos membros. CA1: O usu\u00e1rio (administrador da p\u00e1gina da atl\u00e9tica), quando acessar a aba das equipes, deve ver um bot\u00e3o para \u201cAdicionar Atleta\u201d. CA2: Quando o usu\u00e1rio clicar no bot\u00e3o, deve informar o e-mail do estudante a ser convidado. Ent\u00e3o, o sistema deve enviar um invite para ao estudante, que precisar\u00e1 aceit\u00e1-lo. CA3: O usu\u00e1rio deve conseguir visualizar o nome e perfil do estudante caso o mesmo tenha aceitado o convite na aba das equipes. CA4: O usu\u00e1rio, ao visualizar a lista de membros, deve ter a op\u00e7\u00e3o de adicionar cargos (tesouraria, marketing, etc...) e remover o estudante da equipe, revogando seu acesso como membro da atl\u00e9tica. US19 F12 EP4: Como um grupo amador, eu quero uma forma r\u00e1pida e simples de convidar pessoas para o meu time para que possamos nos organizar facilmente para marcar jogos casuais. CA1: O usu\u00e1rio, quando acessar a aba de time amador, deve ver um bot\u00e3o para \u201cConvidar para o time\u201d.CA2: Quando o usu\u00e1rio clicar no bot\u00e3o, deve informar o e-mail do estudante a ser convidado. Ent\u00e3o, o sistema deve enviar um invite para ao estudante, que precisar\u00e1 aceit\u00e1-lo.CA3: Quando o usu\u00e1rio clicar no bot\u00e3o, deve haver a op\u00e7\u00e3o de buscar e convidar amigos j\u00e1 adicionados na plataforma diretamente. CA4: O usu\u00e1rio, ao visualizar a lista de membros, deve ter a op\u00e7\u00e3o de remover o estudante da equipe, e os outros membros n\u00e3o podem remover outros membros."},{"location":"visao/escopo_projeto/#epico-5-sistema-de-notificacoes","title":"\u00c9pico 5: Sistema de Notifica\u00e7\u00f5es","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o funcionalidade1 US1 F1 EP2: - CA1:  - CA2:   - CA3:   - CA4: Funcionalidade2 US2 F2 EP2: - CA1:  - CA2:   - CA3:   - CA4:   - CA5:"},{"location":"visao/escopo_projeto/#epico-6-gerenciamento-do-app","title":"\u00c9pico 6: Gerenciamento do app","text":"Funcionalidade Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o funcionalidade1 US1 F1 EP2: - CA1:  - CA2:   - CA3:   - CA4: Funcionalidade2 US2 F2 EP2: - CA1:  - CA2:   - CA3:   - CA4:   - CA5:"},{"location":"visao/escopo_projeto/#perfis-personas","title":"Perfis &amp; Personas","text":"<p>Na idealiza\u00e7\u00e3o do projeto concebida por Lean inception todo usu\u00e1rio tem as mesmas permiss\u00f5es de acesso, exceto o usu\u00e1rio Administrador. Cada permiss\u00e3o \u00e9 concedida a depender o fluxo de uso do usu\u00e1rio ao criar um grupo onde este usu\u00e1rio ser\u00e1 ter\u00e1 permiss\u00f5es avan\u00e7adas para aquele grupo. Ap\u00f3s a tabela, mais especifica\u00e7\u00f5es sobre a verifica\u00e7\u00e3o e gest\u00e3o de usu\u00e1rios.  </p> <p>Tabela : Perfis de acesso </p> Nome do Perfil Caracteristicas do perfil permiss\u00f5es Usu\u00e1rio comum Cliente final a utilizar o aplicativo, sendo ativo em esportes ou apenas espectador de eventos promovidos por terceiros. Criar times/equipes, Acesso a publica\u00e7\u00f5es de usu\u00e1rios que ele segue. Gerente de time Persona ativa em esportes que gerencia uma equipe amadora. Adicionar e remover pessoas \u00e0 sua equipe + Permiss\u00f5es de Usu\u00e1rio comum Representante de atl\u00e9tica Persona cujo objetivo \u00e9 representar a atl\u00e9tica e suas a\u00e7\u00f5es, bem como publicar eventos e competi\u00e7\u00f5es. Ter um selo de verificado ao ser submetido a uma verifica\u00e7\u00e3o de comprova\u00e7\u00e3o + permiss\u00f5es de gerente de time <p>Na cria\u00e7\u00e3o de um grupo/time/equipe, o usu\u00e1rio ser\u00e1 submetido a uma classifica\u00e7\u00e3o por exemplo para as atl\u00e9ticas, um representante da organiza\u00e7\u00e3o dever\u00e1 criar uma equipe/grupo/time e ao preencher o formul\u00e1rio de cria\u00e7\u00e3o dever\u00e1 marcar uma op\u00e7\u00e3o como \u201c\u00e9 representante de uma atl\u00e9tica da UnB? Solicite sua verifica\u00e7\u00e3o: [ ]\u201d onde ser\u00e1 enviado um link para um formul\u00e1rio externo para envio de documenta\u00e7\u00e3o comprobat\u00f3ria que ser\u00e1 analisada pela equipe de desenvolvimento.</p>"},{"location":"visao/metricas_medicoes/","title":"M\u00e9tricas e Medi\u00e7\u00f5es","text":""},{"location":"visao/metricas_medicoes/#gqm-de-medicoes","title":"GQM de Medi\u00e7\u00f5es","text":"<p>Para o nosso produto de software Aton, foram escolhidos dois objetivos comuns e essenciais: qualidade do produto (c\u00f3digo) e gerenciamento de processo (andamento do projeto).</p>"},{"location":"visao/metricas_medicoes/#1-objetivo-da-medicao-1-garantir-a-qualidade-e-manutenibilidade-do-codigo","title":"1: Objetivo da Medi\u00e7\u00e3o 1: Garantir a qualidade e manutenibilidade do c\u00f3digo","text":"<ul> <li>Finalidade: Analisar</li> <li>Objeto: C\u00f3digo-fonte do projeto</li> <li>Com o prop\u00f3sito de: avaliar</li> <li>Foco: a sua qualidade e manutenibilidade</li> <li>Do ponto de vista: da equipe de desenvolvimento</li> <li>No contexto de: Desenvolvimento de novas funcionalidades e corre\u00e7\u00f5es de bugs no projeto.</li> </ul>"},{"location":"visao/metricas_medicoes/#questoes-e-metricas-associadas-a-medicao-1","title":"Quest\u00f5es e m\u00e9tricas associadas \u00e0 Medi\u00e7\u00e3o 1:","text":""},{"location":"visao/metricas_medicoes/#11-a-complexidade-do-codigo-esta-sob-controle-facilitando-manutencao-e-refatoracao-futura","title":"1.1: A complexidade do c\u00f3digo est\u00e1 sob controle, facilitando manuten\u00e7\u00e3o e refatora\u00e7\u00e3o futura?","text":""},{"location":"visao/metricas_medicoes/#111-metrica-da-complexidade-ciclomatica-por-funcao","title":"1.1.1: M\u00e9trica da complexidade ciclom\u00e1tica por fun\u00e7\u00e3o","text":"<ul> <li> <p>Defini\u00e7\u00e3o: Mede o n\u00famero de caminhos linearmente independentes atrav\u00e9s do c\u00f3digo de uma fun\u00e7\u00e3o. Em termos simples, indica qu\u00e3o complexa (muitos <code>if</code>s, <code>else</code>s, <code>loops</code>) uma fun\u00e7\u00e3o \u00e9.</p> </li> <li> <p>Forma de c\u00e1lculo: Ser\u00e1 calculada automaticamente por ferramentas de an\u00e1lise est\u00e1tica de c\u00f3digo (linters) no projeto, por meio de plugins do ESLint.</p> </li> <li> <p>Escala de unidade: N\u00famero inteiro.</p> </li> <li>Valores esperados: Idealmente, a complexidade ciclom\u00e1tica deve ser menor que \\(10\\). Valores acima de \\(15\\) s\u00e3o um sinal de alerta para refatora\u00e7\u00e3o.</li> <li>Forma de an\u00e1lise (5W, 1H): <ul> <li>O qu\u00ea?: Analisar relat\u00f3rios de linter.</li> <li>Por qu\u00ea?: Para identificar fun\u00e7\u00f5es que s\u00e3o dif\u00edceis de entender, testar e manter.</li> <li>Quem?: O desenvolvedor respons\u00e1vel pela funcionalidade e o revisor do PR, juntamente com a equipe de QA.</li> <li>Quando?: Durante o desenvolvimento e obrigatoriamente antes de aprovar um PR para a branch <code>develop</code>.</li> <li>Onde?: No ambiente de desenvolvimento local.</li> <li>Como?: Se uma fun\u00e7\u00e3o excede o limite, a equipe deve decidir se refatora imediatamente ou cria uma task de d\u00e9bito t\u00e9cnico.</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#12-estamos-construindo-uma-interface-consistente-e-evitando-duplicacao-de-codigo","title":"1.2: Estamos construindo uma interface consistente e evitando duplica\u00e7\u00e3o de c\u00f3digo?","text":""},{"location":"visao/metricas_medicoes/#121-taxa-de-reutilizacao-de-componentes-de-ui","title":"1.2.1: Taxa de reutiliza\u00e7\u00e3o de componentes de UI","text":"<ul> <li>Defini\u00e7\u00e3o: Mede a propor\u00e7\u00e3o de elementos na interface que s\u00e3o constru\u00eddos a partir de uma biblioteca de componentes compartilhada (ex: um <code>Button</code> customizado) em vez de estilos ou c\u00f3digos espec\u00edficos para cada tela.</li> <li>Forma de c\u00e1lculo: Esta m\u00e9trica \u00e9 mais qualitativa. \\(\\frac{\\text{N\u00famero de componentes reutilizados na tela}}{\\text{N\u00famero total de elementos de UI na tela}}\\). Pode ser calculada durante a revis\u00e3o de c\u00f3digo (Code Review).</li> <li>Escala de unidade: Percentual (\\(\\%\\)).</li> <li>Valores esperados: N\u00e3o h\u00e1 um n\u00famero fixo, mas a equipe deve buscar uma tend\u00eancia crescente na reutiliza\u00e7\u00e3o. Sempre prefira criar/usar um componente gen\u00e9rico a criar um espec\u00edfico.</li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: O design e o c\u00f3digo de novas telas.</li> <li>Por qu\u00ea?: Para garantir consist\u00eancia visual, reduzir o c\u00f3digo duplicado e acelerar o desenvolvimento futuro.</li> <li>Quem?: A equipe de Frontend, especialmente durante o planejamento de novas telas e na revis\u00e3o de PR.</li> <li>Quando?: Durante a revis\u00e3o de c\u00f3digo de qualquer nova funcionalidade de UI.</li> <li>Onde?: No GitHub.</li> <li>Como?: Se for identificada a cria\u00e7\u00e3o de um componente que poderia ser gen\u00e9rico, o revisor deve solicitar a refatora\u00e7\u00e3o para a biblioteca compartilhada do time.</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#13-estamos-entregando-um-codigo-com-um-nivel-aceitavel-de-defeitos","title":"1.3: Estamos entregando um c\u00f3digo com um n\u00edvel aceit\u00e1vel de defeitos?","text":""},{"location":"visao/metricas_medicoes/#131-densidade-de-defeitos-defect-density","title":"1.3.1: Densidade de defeitos (Defect Density)","text":"<ul> <li>Defini\u00e7\u00e3o: Rela\u00e7\u00e3o entre o n\u00famero de defeitos (bugs confirmados) encontrados e o tamanho do c\u00f3digo, medido em milhares de linhas de c\u00f3digo (KLOC, Kilo Lines of Code).</li> <li>Forma de c\u00e1lculo: \\(\\text{Densidade} =  \\frac{\\text{(N\u00famero total de  Bugs V\u00e1lidos)}}{\\text{Total de linhas de c\u00f3digo} \\div 1000}\\)</li> <li>Escala de unidade: Defeitos/KLOC.</li> <li>Valores Esperados: Um valor alvo seria menor que \\(5\\) Defeitos/KLOC ao final do ciclo de entrega (Sprint).</li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: Acompanhar a tend\u00eancia de densidade de defeitos.</li> <li>Por qu\u00ea?: Para avaliar a efic\u00e1cia do processo de testes e da qualidade geral das entregas. Um aumento s\u00fabito pode indicar problemas no processo.</li> <li>Quem?: Equipe de QA.</li> <li>Quando?: Ao final de cada sprint.</li> <li>Onde?: Nas reuni\u00f5es de retrospectiva da Sprint.</li> <li>Como?: Comparar o valor atual com o hist\u00f3rico. Se a m\u00e9trica estiver piorando, a equipe deve discutir poss\u00edveis causas (ex: testes insuficientes, pressa na entrega, complexidade do novo m\u00f3dulo).</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#2-objetivo-da-medicao-2-acompanhar-a-eficiencia-do-processo-de-desenvolvimento","title":"2: Objetivo da Medi\u00e7\u00e3o 2: Acompanhar a efici\u00eancia do processo de desenvolvimento","text":"<ul> <li>Finalidade: Analisar</li> <li>Objeto: o processo de desenvolvimento da equipe</li> <li>Com o prop\u00f3sito de: avaliar</li> <li>Foco: a previsibilidade e a efici\u00eancia das entregas</li> <li>Do ponto de vista: do Scrum Master</li> <li>No contexto de: planejamento e execu\u00e7\u00e3o das Sprints de desenvolvimento.</li> </ul>"},{"location":"visao/metricas_medicoes/#questoes-e-metricas-associadas-ao-objetivo-2","title":"Quest\u00f5es e m\u00e9tricas associadas ao Objetivo 2:","text":""},{"location":"visao/metricas_medicoes/#21-nossa-equipe-consegue-prever-e-entregar-o-trabalho-planejado-a-cada-ciclo","title":"2.1: Nossa equipe consegue prever e entregar o trabalho planejado a cada ciclo?","text":""},{"location":"visao/metricas_medicoes/#211-debito-tecnico-tech-debt-da-sprint","title":"2.1.1: D\u00e9bito T\u00e9cnico (Tech Debt) da Sprint.","text":"<ul> <li>Defini\u00e7\u00e3o: Mede a quantidade de trabalho (representado pelas tasks) que a equipe consegue concluir (entregar) dentro de uma Sprint.</li> <li>Forma de c\u00e1lculo: \\(\\text{Total de tarefas conclu\u00eddas} = \\sum_{i=1}^{n} \\text{tarefas}_i\\), onde \\(i\\) \u00e9 cada item movido para \"Conclu\u00eddo\" ao fim da Sprint.</li> <li>Escala de unidade: N\u00famero de tarefas.</li> <li>Valores esperados: N\u00e3o existe um valor esperado. A objetivo \u00e9 que, ap\u00f3s 2 ou 3 Sprints, o valor se torne est\u00e1vel e previs\u00edvel. Uma grande varia\u00e7\u00e3o entre Sprints sugere problemas de planejamento ou impedimentos.</li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: A medi\u00e7\u00e3o de velocidade/d\u00e9bito da equipe ao longo do tempo.</li> <li>Por qu\u00ea?: Para melhorar a capacidade de planejamento futuro (previsibilidade) e entender a capacidade real de trabalho da equipe.</li> <li>Quem?: Toda a equipe, liderada pelo Scrum Master.</li> <li>Quando?: Na reuni\u00e3o de retrospectiva da Sprint.</li> <li>Onde?: No quadro Scrum da equipe.</li> <li>Como?: Analisar por que o d\u00e9bito foi maior ou menor que o esperado (ex: a equipe foi superestimada, muitos impedimentos). A an\u00e1lise traz m\u00e9tricas para o planejamento da pr\u00f3xima Sprint.</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#3-objetivo-da-medicao-3-garantir-a-performance-e-a-boa-experiencia-de-usuario-ux","title":"3: Objetivo da Medi\u00e7\u00e3o 3: Garantir a performance e a boa Experi\u00eancia de Usu\u00e1rio (UX)","text":"<ul> <li>Finalidade: Analisar</li> <li>Objeto: a aplica\u00e7\u00e3o mobile (frontend)</li> <li>Com o prop\u00f3sito de: avaliar</li> <li>Foco: o desempenho de renderiza\u00e7\u00e3o e a fluidez da intera\u00e7\u00e3o</li> <li>Do ponto de vista: do usu\u00e1rio final</li> <li>No contexto de: uso da aplica\u00e7\u00e3o em diferentes dispositivos e condi\u00e7\u00f5es de rede.</li> </ul>"},{"location":"visao/metricas_medicoes/#questoes-e-metricas-associadas-ao-objetivo-3","title":"Quest\u00f5es e m\u00e9tricas associadas ao Objetivo 3:","text":""},{"location":"visao/metricas_medicoes/#31-o-aplicativo-parece-rapido-e-responsivo-para-o-usuario","title":"3.1: O aplicativo parece r\u00e1pido e responsivo para o usu\u00e1rio?","text":""},{"location":"visao/metricas_medicoes/#311-tempo-de-carregamento-da-tela-screen-load-time","title":"3.1.1: Tempo de carregamento da tela (Screen Load Time)","text":"<ul> <li>Defini\u00e7\u00e3o: Mede o tempo, em milissegundos, desde que o usu\u00e1rio realiza uma a\u00e7\u00e3o (ex: clica em um item) at\u00e9 que a tela seguinte esteja completamente carregada e interativa.</li> <li>Forma de c\u00e1lculo: \\(\\frac{\\text{Tempo de interatividade}}{\\text{Tempo do input de usu\u00e1rio}}\\). O c\u00e1lculo \u00e9 feito por ferramentas de monitoramente de performance (APM). \u00c9 poss\u00edvel medir com as ferramentas de desenvolvedor do React Native.</li> <li>Escala de unidade: Milissegundos (\\(\\text{ms}\\)).</li> <li>Valores esperados: $ \\lt 500\\text{ms}$ para telas cr\u00edticas (ex: feed de eventos, login), $ \\lt 200\\text{ms}$ para telas mais simples (ex: configura\u00e7\u00f5es).</li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: Relat\u00f3rios de performance das telas mais acessadas.</li> <li>Por qu\u00ea?: Para identificar gargalos que prejudicam a percep\u00e7\u00e3o de velocidade do app.</li> <li>Quem?: Equipe de Frontend e Equipe de QA.</li> <li>Quando?: Em ciclos de teste antes de uma nova vers\u00e3o.</li> <li>Onde?: Na ferramenta de APM escolhida.</li> <li>Como?: Telas lentas devem gerar tarefas de otimiza\u00e7\u00e3o (ex: otimizar imagens, reduzir chamadas de API, lazy loading).</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#32-o-aplicativo-e-estavel-e-nao-fecha-inesperadamente","title":"3.2: O aplicativo \u00e9 est\u00e1vel e n\u00e3o fecha inesperadamente?","text":""},{"location":"visao/metricas_medicoes/#321-taxa-de-sessoes-livres-de-crash-crash-free-sessions-rate","title":"3.2.1: Taxa de sess\u00f5es livres de crash (Crash-Free Sessions Rate)","text":"<ul> <li>Defini\u00e7\u00e3o: Percentual de sess\u00f5es de uso do aplicativo que s\u00e3o conclu\u00eddas sem que ocorra nenhum crash (erro fatal que fecha o app).</li> <li>Forma de c\u00e1lculo: \\((1 - \\frac{\\text{N\u00famero de sess\u00f5es com crash}}{\\text{N\u00famero total de sess\u00f5es}}) \\times 100\\). Com ferramentas como o Sentry,  esse dado \u00e9 coletado automaticamente.</li> <li>Escala de unidade: Percentual (\\(\\%\\)).</li> <li>Valores esperados: A meta deve ser \\(\\geq 98\\%\\).</li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: O painel de estabilidade da ferramenta utilizada (como Sentry), ou a medi\u00e7\u00e3o da taxa das sess\u00f5es ao longo do tempo.</li> <li>Por qu\u00ea?: Para garantir a confiabilidade do produto e a confian\u00e7a do usu\u00e1rio.</li> <li>Quem?: Equipe de Frontend e Equipe de QA.</li> <li>Quando?: Continuamente, a cada ciclo de teste.</li> <li>Onde?: No painel de estabilidade ou nas medi\u00e7\u00f5es feitas.</li> <li>Como?: Analisar os relat\u00f3rios de crash para entender a causa (dispositivo, vers\u00e3o do sistema, a\u00e7\u00e3o do usu\u00e1rio) e priorizar a corre\u00e7\u00e3o dos bugs mais impactantes.</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#4-objetivo-da-medicao-4-avaliar-a-eficacia-e-abrangencia-dos-testes-automatizados","title":"4: Objetivo da Medi\u00e7\u00e3o 4: Avaliar a efic\u00e1cia e abrang\u00eancia dos testes automatizados","text":"<ul> <li>Finalidade: Analisar</li> <li>Objeto: Suite de testes automatizados (unit\u00e1rios e de integra\u00e7\u00e3o)</li> <li>Com o prop\u00f3sito de: avaliar</li> <li>Foco: a sua abrang\u00eancia, efic\u00e1cia na detec\u00e7\u00e3o de defeitos e o seu impacto na produtividade</li> <li>Do ponto de vista: da equipe de desenvolvimento e da equipe de QA</li> <li>No contexto de: garantir a estabilidade do software a cada nova altera\u00e7\u00e3o do c\u00f3digo-fonte.</li> </ul>"},{"location":"visao/metricas_medicoes/#questoes-associadas-ao-objetivo-4","title":"Quest\u00f5es associadas ao Objetivo 4:","text":""},{"location":"visao/metricas_medicoes/#41-nossos-testes-unitarios-estao-cobrindo-uma-parte-significativa-e-critica-do-nosso-codigo-fonte","title":"4.1: Nossos testes unit\u00e1rios est\u00e3o cobrindo uma parte significativa e cr\u00edtica do nosso c\u00f3digo-fonte?","text":""},{"location":"visao/metricas_medicoes/#411-cobertura-de-codigo-por-testes-unitarios-code-coverage","title":"4.1.1: Cobertura de c\u00f3digo por testes unit\u00e1rios (Code Coverage)","text":"<ul> <li>Defini\u00e7\u00e3o: Mede o percentual de linhas, branches (<code>if/else</code>), e fun\u00e7\u00f5es do c\u00f3digo-fonte que s\u00e3o executados pela suite de testes unit\u00e1rios.</li> <li>Forma de c\u00e1lculo: \u00c9 calculada automaticamente por ferramentas como o Jest durante a execu\u00e7\u00e3o dos testes. O Jest gera relat\u00f3rios de cobertura com o comando <code>npm test -- --coverage</code>.</li> <li>Escala de Unidade: Percentual (\\(\\%\\)).</li> <li>Valores esperados:<ul> <li>Backend: \\(\\gt 80\\%\\) para as camadas de servi\u00e7o e l\u00f3gica de neg\u00f3cio (as regras mais importantes).</li> <li>Frontend: \\(\\gt 70\\%\\) para componentes complexos e fun\u00e7\u00f5es de manipula\u00e7\u00e3o de estado.</li> <li>Importante: A qualidade dos testes \u00e9 fundamental.</li> </ul> </li> <li>Forma de an\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: Relat\u00f3rio de cobertura gerado a cada execu\u00e7\u00e3o de testes na pipeline de CI/CD.</li> <li>Por qu\u00ea?: Para identificar partes cr\u00edticas do sistema que n\u00e3o est\u00e3o testadas e que representam um risco a cada nova altera\u00e7\u00e3o.</li> <li>Quem?: O desenvolvedor que submete o PR e orevisor.</li> <li>Quando?: A cada PR. A pipeline pode ser configurada para falhar se a cobertura do novo c\u00f3digo for inferior ao alvo definido.</li> <li>Onde?: GitHub Actions.</li> <li>Como?: Analisar quais arquivos ou fun\u00e7\u00f5es tem baixa cobertura. Se forem partes cr\u00edticas, deve-se criar tarefas para escrever mais testes unit\u00e1rios antes da aprova\u00e7\u00e3o do c\u00f3digo.</li> </ul> </li> </ul>"},{"location":"visao/metricas_medicoes/#42-nossos-testes-de-integracao-estao-sendo-eficazes-em-encontrar-problemas-de-comunicacao-entre-componentes-antes-que-o-codigo-seja-mesclado","title":"4.2: Nossos testes de integra\u00e7\u00e3o est\u00e3o sendo eficazes em encontrar problemas de comunica\u00e7\u00e3o entre componentes antes que o c\u00f3digo seja mesclado?","text":""},{"location":"visao/metricas_medicoes/#421-taxa-de-sucesso-das-builds-na-branch-de-desenvolvimento-develop","title":"4.2.1: Taxa de sucesso das builds na branch de desenvolvimento (<code>develop</code>).","text":"<ul> <li>Defini\u00e7\u00e3o: Mede o percentual de builds na branch <code>develop</code> (ou <code>main</code>) que s\u00e3o conclu\u00eddos com sucesso, passando por todas as etapas, incluindo a su\u00edte de testes de integra\u00e7\u00e3o.</li> <li>Forma de c\u00e1lculo: \\(\\frac{\\text{N\u00famero de builds com sucesso}}{\\text{N\u00famero total de builds na branch}} \\times 100\\). Esses dados s\u00e3o fornecidos pelo GitHub Actions.</li> <li>Escala de unidade: Percentual (\\(\\%\\)).</li> <li>Valores esperados: Uma taxa \\(\\gt 95\\%\\) \u00e9 um sinal de uma branch saud\u00e1vel. Uma taxa muito baixa pode indicar que os testes de integra\u00e7\u00e3o est\u00e3o constantemente quebrando, o que \u00e9 bom por pegar erros, mas pode tamb\u00e9m sinalizar testes inst\u00e1veis ou problema de configura\u00e7\u00e3o no GitHub Actions.</li> <li>Formas de An\u00e1lise (5W, 1H):<ul> <li>O qu\u00ea?: O hist\u00f3rico de execu\u00e7\u00f5es (workflows) da pipeline de CI/CD.</li> <li>Por qu\u00ea?: Para garantir que a principal branch de desenvolvimento esteja sempre em um estado est\u00e1vel e funcional.</li> <li>Quem?: O l\u00edder t\u00e9cnico da equipe.</li> <li>Quando?: Semanalmente, em uma revis\u00e3o do processo de desenvolvimento.</li> <li>Onde?: No GitHub Actions.</li> <li>Como?: Investigar as falhas. Foram bugs reais que os testes pegaram? Foram problemas de ambiente ou testes inst\u00e1veis? \u00c9 preciso criar tarefas para corrigir a pr\u00f3pria su\u00edte de testes.</li> </ul> </li> </ul>"},{"location":"visao/processo_desenv/","title":"Processo de Desenvolvimento","text":""},{"location":"visao/processo_desenv/#3-processo-de-desenvolvimento-de-software","title":"3 Processo de desenvolvimento de Software","text":"<p>Esta se\u00e7\u00e3o busca aprofundar sobre as decis\u00f5es tomadas acerca da metodologia de desenvolvimento, pr\u00e1ticas adotadas e a maneira como o time escolheu se desenvolver.</p>"},{"location":"visao/processo_desenv/#31-metodologia-adotadas","title":"3.1 Metodologia adotadas","text":"<p>Assim como citado anteriormente, foi escolhido ScrumXP como metodologia principal, que une as pr\u00e1ticas do Scrum e do Extreme Programming (XP), por\u00e9m diferentemente da sua aplica\u00e7\u00e3o habitual, surgiram algumas adapta\u00e7\u00f5es buscando um resultado mais satisfat\u00f3ria do software a ser desenvolvido. O Scrum \u00e9 um framework \u00e1gil, logo, \u00e9 fundamentado em ciclos curtos de trabalho, com reuni\u00f5es di\u00e1rias e revis\u00f5es e rebobina\u00e7\u00f5es a cada encontro.</p> <p>No entanto, para adequar a realidade da equipe e ao escopo do projeto a equipe optou por adpat o formato das reuni\u00f5es. Ao contr\u00e1rio das Daily Scrums, que acontecem diariamente, foram estabelecidades reuni\u00f5es semanais.</p> <p>Al\u00e9m disso o papel de Product Owner foi desempenhado de forma colaborativa entre os membros e com o apoio direto do cliente durante as revis\u00f5es de sprint, possibilitando mais flexibilidade e uma melhor forma de prioriza\u00e7\u00e3o de funcionalidades.</p>"},{"location":"visao/processo_desenv/#32-etapas-do-desenvolvimento","title":"3.2 Etapas do desenvolvimento","text":"<p>Assim como na figura que o mota fez na visao do projeto o processo de desenvolvimento escolhido se baseia em:</p> <ol> <li> <p>Backlog do produto : S\u00e3o listadas todas as funcionalidades e requisitos do sistema e priorizadas, formando assim, o backlog.</p> </li> <li> <p>Planejamento da Sprint: Os itens escolhidos s\u00e3o detalhados e organizados no backlog da sprint, servindo como um guia para o trabalho da equipe.</p> </li> <li> <p>Desevolvimento da equipe: A equipe realiza a implementa\u00e7\u00e3o das funcionalidades planejadas com base na sprint semanal. Esse desenvolvimento, inclui codifica\u00e7\u00e3o, testes unit\u00e1rios e integra\u00e7\u00e3o continua.</p> </li> <li> <p>Revis\u00e3o da Sprint: Ao final da sprint, as funcionalidades implementadas s\u00e3o apresentadas ao product owner para valida\u00e7\u00e3o e feedback.</p> </li> <li> <p>Incremento: As funcionalidades validadas s\u00e3o integradas ao sistema, permitindo assim a prepara\u00e7\u00e3o para a pr\u00f3xima sprint.</p> </li> </ol>"},{"location":"visao/ref/","title":"Refer\u00eancias","text":""},{"location":"visao/ref/#7-referencias-bibliograficas","title":"7. Refer\u00eancias bibliogr\u00e1ficas","text":"<ol> <li> <p>Ciclo de vida Scrum: entenda as etapas e aprenda a aplicar na gest\u00e3o de projetos. Flowup, 19 de fevereiro de 2025. Dispon\u00edvel em: https://www.flowup.me/blog/ciclo-de-vida-scrum/. Acesso em: 18 de setembro de 2025. </p> </li> <li> <p>The 2020 Scrum GuideTM. Scrum Guides. Dispon\u00edvel em: https://scrumguides.org/scrum-guide.html#product-backlog. Acesso em: 18 de setembro de 2025. </p> </li> </ol>"},{"location":"visao/testes/","title":"Testes de Software","text":""},{"location":"visao/testes/#6-testes-de-software","title":"6. TESTES DE SOFTWARE","text":"<p>Nesta se\u00e7\u00e3o, evidenciamos como foram criadas estrat\u00e9gias para aplica\u00e7\u00e3o dos testes desenvolvidos, realizados e validados pelo grupo durante a implementa\u00e7\u00e3o de funcionalidades, al\u00e9m de um roteiro de testes que especifica as altera\u00e7\u00f5es e demonstra a funcionalidade do projeto. Atrav\u00e9s desta metodologia, garantimos a qualidade, responsividade e efici\u00eancia do produto final mediante as exig\u00eancias de nossos clientes.</p>"},{"location":"visao/testes/#61-estrategia-de-testes","title":"6.1 Estrat\u00e9gia de testes","text":"<p>A estrat\u00e9gia de testes do projeto Aton visa garantir que as funcionalidades do sistema estejam corretas, seguras e em conformidade com os requisitos definidos. Para este projeto ser\u00e1 adotada uma estrat\u00e9gia de testes de que comtempla m\u00faltiplos n\u00edveis, tipos, ambientes e formas de an\u00e1lise, garantindo a qualidade e confiabilidade do aplicativo. </p>"},{"location":"visao/testes/#611-niveis-de-testes-abordados","title":"6.1.1 N\u00edveis de testes abordados","text":"<ul> <li> <p>Testes unit\u00e1rios: Valida\u00e7\u00e3o de fun\u00e7\u00f5es e componentes isolados, como cadastro de usu\u00e1rios, cria\u00e7\u00e3o de eventos e autentica\u00e7\u00e3o. </p> </li> <li> <p>Testes de Integra\u00e7\u00e3o: Verifica\u00e7\u00e3o da comunica\u00e7\u00e3o entre m\u00f3dulos, como o fluxo de cria\u00e7\u00e3o de um evento sendo automaticamente exibido no feed de seguidores.</p> </li> <li> <p>Testes de Sistema: Avalia\u00e7\u00e3o do aplicativo de forma completa, considerando o comportamento esperado para opera\u00e7\u00f5es t\u00edpicas do usu\u00e1rio, como confirmar presen\u00e7a em eventos e comentar.</p> </li> </ul>"},{"location":"visao/testes/#612-tipos-de-testes-abordados","title":"6.1.2 Tipos de Testes Abordados","text":"<ul> <li> <p>Testes Funcionais: Validam o comportamento esperado do sistema.</p> </li> <li> <p>Testes N\u00e3o Funcionais:</p> <ul> <li> <p>Usabilidade: Facilidade de navega\u00e7\u00e3o na interface. </p> </li> <li> <p>Desempenho: Tempo de resposta na listagem de eventos e notifica\u00e7\u00f5es. </p> </li> <li> <p>Seguran\u00e7a: Verifica\u00e7\u00e3o de prote\u00e7\u00e3o de dados de usu\u00e1rios e permiss\u00f5es de acesso. </p> </li> <li> <p>Negativo: Testa situa\u00e7\u00f5es inesperadas de entrada com tipos inv\u00e1lidos inseridos intencionalmente.</p> </li> </ul> </li> </ul>"},{"location":"visao/testes/#613-ambientes-de-testes-do-projeto","title":"6.1.3 Ambientes de Testes do projeto","text":"<p>A pol\u00edtica de branches e commits registrada em PROCESSO DE DESENVOLVIMENTO DE SOFTWARE ser\u00e1 adotada para manter a qualidade e rastreabilidade dos testes em branches separadas e identificadas.</p> <ul> <li> <p>Ambiente de desenvolvimento: Os desenvolvedores usam esse ambiente para escrever, depurar e testar c\u00f3digo durante os est\u00e1gios iniciais da cria\u00e7\u00e3o do software. Ele incluir\u00e1 ambientes de desenvolvimento integrado (IDEs), sistema de controle de vers\u00e3o (Git) e ferramentas de depura\u00e7\u00e3o de c\u00f3digo, focando em testes unit\u00e1rios.</p> </li> <li> <p>Controle de acesso: Os mecanismos de controle de acesso garantem que somente pessoal autorizado possa interagir com o ambiente de teste. Isso inclui o usu\u00e1rio autentica\u00e7\u00e3o, acesso baseado em fun\u00e7\u00e3o, e conex\u00f5es seguras para evitar altera\u00e7\u00f5es n\u00e3o autorizadas ou viola\u00e7\u00e3o de dados.</p> </li> <li> <p>Controle de qualidade/teste: Dedicado \u00e0 garantia de qualidade (QA) equipes, este ambiente \u00e9 usado para executar testes funcionais, de regress\u00e3o e de integra\u00e7\u00e3o. Ele espelha o ambiente de produ\u00e7\u00e3o o mais pr\u00f3ximo poss\u00edvel, garantindo que todos os componentes funcionem perfeitamente juntos. O objetivo \u00e9 identificar e corrigir problemas que podem afetar a funcionalidade ou experi\u00eancia do usu\u00e1rio. </p> </li> </ul> <p>O ambiente de testes utilizar\u00e1 containers Docker para simular produ\u00e7\u00e3o, garantindo compatibilidade e previsibilidade dos resultados.</p>"},{"location":"visao/testes/#614-formas-de-analise-dos-testes","title":"6.1.4 Formas de An\u00e1lise dos Testes","text":"<ul> <li> <p>Compara\u00e7\u00e3o entre resultado previsto X realizado. </p> </li> <li> <p>Registro de logs de execu\u00e7\u00e3o para cada caso de teste. </p> </li> <li> <p>Defeitos identificados ser\u00e3o registrados no sistema de issues do GitHub do projeto.</p> </li> </ul>"},{"location":"visao/testes/#615-resultados-obtidos","title":"6.1.5 Resultados Obtidos","text":"<ul> <li> <p>Se resultado previsto = realizado \u2192 teste aprovado. </p> </li> <li> <p>Se resultado previsto \u2260 realizado \u2192 teste reprovado. O defeito ser\u00e1 registrado, corrigido e o teste reexecutado at\u00e9 aprova\u00e7\u00e3o. </p> </li> </ul>"},{"location":"visao/testes/#62-roteiro-de-teste","title":"6.2 Roteiro de teste:","text":"<p>O roteiro de testes constitui o planejamento detalhado dos casos de teste a serem executados. Ele ser\u00e1 representado em formato tabular, contendo: </p> <ul> <li> <p>C\u00f3digo de identifica\u00e7\u00e3o do teste;</p> </li> <li> <p>Nome do teste;</p> </li> <li> <p>Objetivo do teste;</p> </li> <li> <p>N\u00edvel do teste (unit\u00e1rio, integrado, sistema);</p> </li> <li> <p>Tipo de teste (funcional, n\u00e3o funcional. Se n\u00e3o funcional tipo: usabilidade, portabilidade, etc);</p> </li> <li> <p>Precondi\u00e7\u00f5es para o teste ser realizado;</p> </li> <li> <p>Defini\u00e7\u00e3o de Aceito rejeitado dos testes propostos (resultados esperados para o teste ser aceito como OK);</p> </li> <li> <p>Espa\u00e7o para registro dos resultados do teste (com evid\u00eancias objetivas);</p> </li> <li> <p>Reparos executados;</p> </li> <li> <p>Quantidade de ciclos de testes executados para cada caso de teste proposto.</p> </li> </ul>"},{"location":"visao/visao_geral_prod/","title":"Vis\u00e3o Geral do Produto","text":""},{"location":"visao/visao_geral_prod/#visao-geral-do-produto","title":"VIS\u00c3O GERAL DO PRODUTO","text":""},{"location":"visao/visao_geral_prod/#problema","title":"Problema","text":"<p>O sedentarismo no meio acad\u00eamico \u00e9 um problema significativo, associado a altas taxas de inatividade f\u00edsica entre estudantes universit\u00e1rios, o que pode levar a problemas de sa\u00fade f\u00edsica e mental, como estresse e ansiedade, e impactar negativamente o desempenho acad\u00eamico. Como forma a combater este problema de sa\u00fade p\u00fablica existem diversas atl\u00e9ticas que promovem a pr\u00e1tica de esportes e eventos de integraliza\u00e7\u00e3o para os estudantes al\u00e9m das organiza\u00e7\u00f5es de equipes amadoras em determinados esportes.  </p> <p>Atualmente na Universidade de Bras\u00edlia, as atl\u00e9ticas promovem eventos, amistosos e campeonatos e os divulgam em redes sociais como Instagram e Telegram, por\u00e9m para os alunos saberem o que est\u00e1 sendo ofertado al\u00e9m do local, dia e hora \u00e9 necess\u00e1rio estar seguindo as atl\u00e9ticas nestas redes sociais, o que pode ser um problema por falta de divulga\u00e7\u00e3o dos perfis, a n\u00e3o-exclusividade e descentraliza\u00e7\u00e3o do conte\u00fado. </p> <p></p>"},{"location":"visao/visao_geral_prod/#solucao","title":"Solu\u00e7\u00e3o","text":"<p>Neste contexto, visando a promo\u00e7\u00e3o, divulga\u00e7\u00e3o e incentivo \u00e0 estas pr\u00e1ticas esportivas v\u00ea-se necess\u00e1rio a centraliza\u00e7\u00e3o de divulga\u00e7\u00e3o de a\u00e7\u00f5es esportivas em um s\u00f3 lugar por meio de um aplicativo que promova essa divulga\u00e7\u00e3o, al\u00e9m do incentivo por meio de intera\u00e7\u00f5es de usu\u00e1rios para cada a\u00e7\u00e3o, al\u00e9m de permitir a cria\u00e7\u00e3o de grupos que compartilham os mesmos gostos de modalidades, esse objetivo ser\u00e1 alcan\u00e7ado atrav\u00e9s do <code>Aton</code>.</p>"},{"location":"visao/visao_geral_prod/#declaracao-de-posicao-do-produto","title":"Declara\u00e7\u00e3o de Posi\u00e7\u00e3o do Produto","text":"Categoria Descri\u00e7\u00e3o Para: Alunos, Atl\u00e9ticas e equipes amadoras da UnB Necessidade: Centralizar e unificar as informa\u00e7\u00f5es de eventos esportivos da UnB O Aton: \u00c9 um App mobile Que: Possui o benef\u00edcio de facilitar e incentivar a cria\u00e7\u00e3o e a participa\u00e7\u00e3o dos alunos da UnB em eventos esportivos oficiais e amadores, incentivando a sa\u00fade e o lazer dos participantes. Ao contr\u00e1rio: Caso o app n\u00e3o seja implementado, as principais informa\u00e7\u00f5es sobre os eventos esportivos da UnB ir\u00e3o permanecer espalhadas por diferentes redes sociais, descentralizando a informa\u00e7\u00e3o e dificultando o acesso de poss\u00edveis participantes. Nosso produto: Ir\u00e1 permitir a centraliza\u00e7\u00e3o do conte\u00fado de maneira simples, facilitando o acesso e a busca dos usu\u00e1rios."},{"location":"visao/visao_geral_prod/#objetivos-do-produto","title":"Objetivos do Produto","text":""},{"location":"visao/visao_geral_prod/#objetivo-principal","title":"Objetivo principal","text":"<p>Promover a integra\u00e7\u00e3o da comunidade universit\u00e1ria por meio do esporte e do lazer bem como incentivar a\u00e7\u00f5es voltadas a sa\u00fade atrav\u00e9s do esporte;</p>"},{"location":"visao/visao_geral_prod/#objetivos-secundarios","title":"Objetivos secund\u00e1rios","text":"<ul> <li>Facilitar a divulga\u00e7\u00e3o de eventos promovidos pelas atl\u00e9ticas da UnB. </li> <li>Notificar usu\u00e1rios sobre os eventos segundo suas prefer\u00eancias.</li> </ul>"},{"location":"visao/visao_geral_prod/#tecnologias-a-serem-utilizadas","title":"Tecnologias a Serem Utilizadas","text":""},{"location":"visao/visao_geral_prod/#linguagens","title":"Linguagens:","text":"<ul> <li>Typescript/Javascript; </li> <li>Tsx/Jsx (React components); </li> </ul>"},{"location":"visao/visao_geral_prod/#ferramentas","title":"Ferramentas:","text":"<ul> <li>Git &amp; Github; </li> <li>Whatsapp; </li> <li>Teams; </li> <li>Outlook; </li> <li>Notion; </li> <li>SonarQube; </li> <li>Figma;</li> </ul>"},{"location":"visao/visao_geral_prod/#plataformas","title":"Plataformas:","text":"<ul> <li>Android;</li> <li>iOS;</li> <li>Web (Talvez no futuro).</li> </ul>"},{"location":"visao/visao_geral_prod/#frameworks-e-bibliotecas","title":"Frameworks e bibliotecas:","text":"<ul> <li>ScrumXP (adaptado);</li> <li>React Native; </li> <li>Expo;</li> <li>Node JS; </li> <li>Prisma ORM;</li> <li>Turborepo;</li> <li>ESLint;</li> <li>Jest; </li> <li>ExpressJS</li> </ul>"},{"location":"visao/visao_geral_proj/","title":"Vis\u00e3o Geral do Projeto","text":""},{"location":"visao/visao_geral_proj/#visao-geral-do-projeto","title":"VIS\u00c3O GERAL DO PROJETO","text":""},{"location":"visao/visao_geral_proj/#ciclo-de-vida-do-projeto-de-desenvolvimento-de-software","title":"Ciclo de vida do projeto de desenvolvimento de software","text":"<p>A imagem do ciclo de vida acima, demonstra um fluxo Scrum modificado com: Backlog do produto \u2192 Planejamento da Sprint \u2192 Backlog da Sprint \u2192 Equipe de Desenvolvimento (com Scrum semanal) \u2192 Revis\u00e3o da Sprint \u2192 Incremento, com um retorno ao Backlog do produto para refinamento.</p> <p>Justificativas:</p> <ul> <li>Entregas cont\u00ednuas de valor atrav\u00e9s de sprints semanais que permitem validar funcionalidades junto ao usu\u00e1rio em tempo real.</li> <li>Feedback r\u00e1pido com revis\u00f5es de sprints e la\u00e7os de retorno mantendo o produto alinhado as necessidades dos usu\u00e1rios e clientes.</li> <li>Gerenciamento de incertezas para testar hip\u00f3teses e manter a qualidade do produto.</li> <li>Transpar\u00eancia e visibilidade do progresso a partir de um Backlog vis\u00edvel e quadro de sprints, deixando claro o que est\u00e1 feito, em progresso ou bloqueado.</li> <li>Prioriza\u00e7\u00e3o orientada a valor percebido com base em m\u00e9tricas e feedbacks junto do PO, diminuindo a depend\u00eancia de suposi\u00e7\u00f5es.</li> </ul>"},{"location":"visao/visao_geral_proj/#organizacao-do-projeto","title":"Organiza\u00e7\u00e3o do Projeto","text":"Papel Atribui\u00e7\u00f5es Respons\u00e1vel Participantes Desenvolvedor Codificar o produto, codificar testes unit\u00e1rios, realizar refatora\u00e7\u00e3o Todos da equipe Dono do Produto Atualizar o escopo do produto, organizar o escopo das sprints, validar as entregas Rodrigo Analista de Qualidade Garantir a qualidade do produto, garantir o cumprimento do conceito de pronto, realizar inspe\u00e7\u00f5es de c\u00f3digo \u00c2ngelo, Gabriel Mota Cliente Validar se o produto atende \u00e0s necessidades, fornecer feedback cont\u00ednuo, priorizar requisitos e aprovar entregas Pedro Inacio, Samuel Pedro Barbosa (Integrante da atl\u00e9tica)"},{"location":"visao/visao_geral_proj/#planejamento-das-fases-eou-iteracoes-do-projeto","title":"Planejamento das Fases e/ou Itera\u00e7\u00f5es do Projeto","text":"<p>atualizado de maneira sucessiva, a partir da realiza\u00e7\u00e3o de cada ciclo (sprint, itera\u00e7\u00e3o)</p> Sprint Produto (Entrega) Data In\u00edcio Data Fim Entreg\u00e1vel(eis) Respons\u00e1veis % conclus\u00e3o Sprint 0 Planejamento inicial do produto e projeto 15/09/2025 22/09/2025 Parte da Documenta\u00e7\u00e3o de vis\u00e3o do produto e projeto Todos os membros 0% Sprint 1 Concep\u00e7\u00e3o do Backlog/ In\u00edcio de prototipa\u00e7\u00e3o 22/09/2025 29/09/2025 Backlog, Prot\u00f3tipo de alta fidelidade e documento de vis\u00e3o completo Todos os membros + Clientes 0% <p>(*): Podem ser apelidos (Aliases), desde que existam suas defini\u00e7\u00f5es completas, ap\u00f3s o quadro.</p>"},{"location":"visao/visao_geral_proj/#matriz-de-comunicacao","title":"Matriz de Comunica\u00e7\u00e3o","text":"Descri\u00e7\u00e3o \u00c1rea/Envolvidos Periodicidade Produtos gerados - Acompanhamento das Atividades em Andamento - Acompanhamento dos Riscos, Compromissos, A\u00e7\u00f5es Pendentes, Indicadores Equipe do Projeto Semanal Relat\u00f3rio de situa\u00e7\u00e3o do projeto Comunicar situa\u00e7\u00e3o do projeto - Equipe do projeto  - Monitor  - Cliente quinzenal - Ata de reuni\u00e3o - Relat\u00f3rio de situa\u00e7\u00e3o do projeto - Aprova\u00e7\u00e3o de entregas"},{"location":"visao/visao_geral_proj/#gerenciamento-de-riscos","title":"Gerenciamento de Riscos","text":"Risco Categoria Grau de exposi\u00e7\u00e3o (Baixo/M\u00e9dio/Alto) Fonte/Origem Descri\u00e7\u00e3o e Impacto A\u00e7\u00e3o de Mitiga\u00e7\u00e3o/Plano de Contingencia Atrasos Cronograma Baixo Escopo mau dimensionado ou altera\u00e7\u00e3o no plano da disciplina Imprevistos que comprometam o cronograma de releases do projeto Realizar Sprint Review e verifica\u00e7\u00f5es constantes do backlog do produto Mudan\u00e7as de fun\u00e7\u00f5es Equipe Baixo Capacita\u00e7\u00e3o t\u00e9cnica insuficiente para a atividade Altera\u00e7\u00e3o de responsabilidades ou fun\u00e7\u00f5es entre membros de equipe Manter comunica\u00e7\u00e3o direta e transparente quando distribuir atividades para os membros, a fim de equiparar a Task com a capacidade de execu\u00e7\u00e3o do membro Desalinhamento/Conflito Equipe Baixo Comunica\u00e7\u00e3o ineficiente Impacto negativo no clima organizacional Manter a proatividade em ajudar os demais integrantes. Realizar comunica\u00e7\u00f5es oficiais em canais validados Mudan\u00e7a de escopo Escopo Baixo Altera\u00e7\u00e3o no Backlog Pode impactar nos prazos ou na realiza\u00e7\u00e3o de m\u00faltiplas tasks ao mesmo tempo pela equipe Comunicar inten\u00e7\u00e3o de escolhas de tasks na sprint review prescedente Falta ou indisponibilidade de algum membro Equipe M\u00e9dio Doen\u00e7a/Provas Sobrecarga de outros membros Trabalhos realizados em duplas para que haja a continuidade da execu\u00e7\u00e3o Incompatibilidade de stack Ferramentas M\u00e9dio Ambientes de desenvolvimento diversos Pode haver bugs no software Estruturar corretamente o documento de arquitetura e seguir as diretrizes \u00e0 risca"},{"location":"visao/visao_geral_proj/#criterios-de-replanejamento","title":"Crit\u00e9rios de Replanejamento","text":"Crit\u00e9rio A\u00e7\u00e3o Atrasos Caso surjam imprevistos que comprometam o cronograma, faremos uma an\u00e1lise para ajustar as datas de entrega, garantindo que permane\u00e7am vi\u00e1veis. Mudan\u00e7a de fun\u00e7\u00f5es entre os membros Se as responsabilidades da equipe mudarem, vamos dar prioridade a registrar tudo em detalhes, capacitar todos com diversas habilidades, manter a comunica\u00e7\u00e3o transparente e nos adaptar rapidamente aos novos planos. Mudan\u00e7as significativas no escopo Caso o escopo sofra mudan\u00e7as significativas que venham a afetar os objetivos, os resultados esperados ou os recursos alocados, o plano de conting\u00eancia (definir um de acordo com o gerenciamento de riscos) ser\u00e1 colocado em pr\u00e1tica e dever\u00e1 ser reavaliado, visando ajustar o projeto \u00e0s novas orienta\u00e7\u00f5es. Novos requisitos para o projeto \u00c9 essencial examinar com aten\u00e7\u00e3o as demandas adicionais, mantendo um di\u00e1logo aberto com o time para entender o impacto sobre as necessidades j\u00e1 existentes, e ordenar as novas prioridades conforme a import\u00e2ncia e a prem\u00eancia. Ser\u00e1 preciso, ainda, ajustar o planejamento do projeto para incorporar essas modifica\u00e7\u00f5es. Desentendimento entre os membros da equipe \u00c9 fundamental reavaliar algumas partes do projeto, uma vez que pode haver a necessidade de dividir os integrantes da equipe que estavam trabalhando juntos ou reestruturar determinadas se\u00e7\u00f5es do produto. Caso ocorra alguma diverg\u00eancia, o conflito ser\u00e1 abordado com o objetivo de solucion\u00e1-lo empregando o m\u00e9todo de Comunica\u00e7\u00e3o N\u00e3o Violenta (abordagem desenvolvida pelo psic\u00f3logo Marshall Rosenberg para criar conex\u00f5es aut\u00eanticas e resolver conflitos atrav\u00e9s da empatia e do respeito)."}]}